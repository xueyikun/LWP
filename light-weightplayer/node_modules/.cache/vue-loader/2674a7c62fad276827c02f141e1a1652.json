{"remainingRequest":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\src\\views\\videoDetail\\VideoDetail.vue?vue&type=style&index=0&id=821c0c02&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\src\\views\\videoDetail\\VideoDetail.vue","mtime":1632135031000},{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636408356404},{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1636408358142},{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1636408357193},{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1636408357599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi52aWRlb0RldGFpbCB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBoZWlnaHQ6IGNhbGMoODB2aCAtIDEwNXB4KTsKICBvdmVyZmxvdy15OiBzY3JvbGw7Cn0KCi5sZWZ0IHsKICB3aWR0aDogNTAwcHg7Cn0KCi5yaWdodCB7CiAgbWFyZ2luLWxlZnQ6IDIwcHg7Cn0KCi50aXRsZSB7CiAgbWFyZ2luOiAxMHB4IDA7CiAgY29sb3I6IGJsYWNrOwogIGZvbnQtd2VpZ2h0OiA2MDA7Cn0KCi5yZWxhdGVkVmlkZW9JdGVtIHsKICBkaXNwbGF5OiBmbGV4OwogIG1hcmdpbi1ib3R0b206IDVweDsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5yZWxhdGVkVmlkZW9JdGVtQ292ZXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0KCi5yZWxhdGVkVmlkZW9JdGVtQ292ZXIgaW1nIHsKICB3aWR0aDogMTUwcHg7CiAgaGVpZ2h0OiA5MHB4OwogIGJvcmRlci1yYWRpdXM6IDEwcHg7Cn0KCi5yZWxhdGVkVmlkZW9JdGVtUGxheUNvdW50IHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwOwogIHJpZ2h0OiA1cHg7CiAgZm9udC1zaXplOiAxMnB4OwogIGNvbG9yOiB3aGl0ZTsKICB0cmFuc2Zvcm06IHNjYWxlKDAuOSk7Cn0KCi5yZWxhdGVkVmlkZW9JdGVtVGltZSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJvdHRvbTogNXB4OwogIHJpZ2h0OiA1cHg7CiAgZm9udC1zaXplOiAxMnB4OwogIGNvbG9yOiB3aGl0ZTsKICB0cmFuc2Zvcm06IHNjYWxlKDAuOSk7Cn0KCi5yZWxhdGVkVmlkZW9JdGVtSW5mbyB7CiAgZm9udC1zaXplOiAxMnB4OwogIGNvbG9yOiByZ2IoMzEsIDMwLCAzMCk7CiAgbWFyZ2luOiAxMnB4IDA7CiAgd2lkdGg6IDE0MHB4Owp9CgoucmVsYXRlZFZpZGVvSXRlbVRpdGxlIHsKICBvdmVyZmxvdzogaGlkZGVuOwogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogIGRpc3BsYXk6IC13ZWJraXQtYm94OwogIC13ZWJraXQtbGluZS1jbGFtcDogMjsKICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsOwp9CgouY3JlYXRvciB7CiAgY29sb3I6IHJnYigxNTYsIDE1NiwgMTU2KTsKICBtYXJnaW4tdG9wOiAxNXB4OwogIG92ZXJmbG93OiBoaWRkZW47CiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICB0cmFuc2Zvcm06IHNjYWxlKDAuOSkgdHJhbnNsYXRlWCgtNSUpOwp9CgoudXNlciB7CiAgZGlzcGxheTogZmxleDsKICBtYXJnaW46IDEwcHggMDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgouYXZhdGFyIHsKICB3aWR0aDogNDBweDsKICBoZWlnaHQ6IDQwcHg7Cn0KCi5hdmF0YXIgaW1nIHsKICB3aWR0aDogMTAwJTsKICBib3JkZXItcmFkaXVzOiA1MCU7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgoudXNlck5hbWUgewogIGZvbnQtc2l6ZTogMTJweDsKICBtYXJnaW4tbGVmdDogMTBweDsKICBjb2xvcjogcmdiKDM2LCAzNiwgMzYpOwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLnZpZGVvVGl0bGUgewogIGNvbG9yOiAjMWIxYjFiOwogIGZvbnQtc2l6ZTogMjBweDsKICBtYXJnaW46IDIwcHggMCAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgoub3RoZXJJbmZvIHsKICBkaXNwbGF5OiBmbGV4OwogIGNvbG9yOiAjYWFhOwogIGZvbnQtc2l6ZTogMTJweDsKfQoKLm90aGVySW5mbyBkaXYgewogIG1hcmdpbi1yaWdodDogMjBweDsKICB0cmFuc2Zvcm06IHNjYWxlKDAuOSkgdHJhbnNsYXRlWCgtNSUpOwp9CgouYnV0dG9ucyB7CiAgZGlzcGxheTogZmxleDsKICBmb250LXNpemU6IDEycHg7CiAgbWFyZ2luOiAyMHB4IDA7CiAgY29sb3I6ICMyNTI1MjU7Cn0KCi5idXR0b25JdGVtIHsKICBwYWRkaW5nOiA1cHggMjBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOwogIGJvcmRlci1yYWRpdXM6IDIwcHg7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9CgouYnV0dG9uSXRlbSBpIHsKICBmb250LXNpemU6IDEycHg7CiAgbWFyZ2luLXJpZ2h0OiAzcHg7Cn0KCi5wYWdlIHsKICB3aWR0aDogMTAwJTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcGFkZGluZy1ib3R0b206IDIwcHg7Cn0KCi52aWRlb1BsYXllciB7CiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7Cn0KCi5yZWQgewogIGNvbG9yOiAjZWM0MTQxOwp9CgoudmlkZW9EZXRhaWwgL2RlZXAvIC5lbC1sb2FkaW5nLXNwaW5uZXIgewogIHRvcDogNDBweDsKfQo="},{"version":3,"sources":["VideoDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAycfile":"VideoDetail.vue","sourceRoot":"src/views/videoDetail","sourcesContent":["<template>\n  <div class=\"videoDetail\" v-if=\"videoUrl\">\n    <div class=\"left\">\n      <div class=\"title\">\n        {{ $route.params.type == \"mv\" ? \"MV详情\" : \"视频详情\" }}\n      </div>\n      <video\n        class=\"videoPlayer\"\n        :src=\"videoUrl\"\n        controls\n        width=\"496px\"\n        height=\"284px\"\n        @play=\"playVideo\"\n        :poster=\"\n          $route.params.type == 'mv' ? videoInfo.cover : videoInfo.coverUrl\n        \"\n      ></video>\n      <!-- 视频详情信息 -->\n      <div\n        class=\"videoInfo\"\n        v-if=\"$route.params.type == 'mv' ? videoInfo.cover : videoInfo.coverUrl\"\n      >\n        <div class=\"user\">\n          <div class=\"avatar\">\n            <img\n              @click=\"goToPersonal()\"\n              :src=\"\n                ($route.params.type == 'mv'\n                  ? videoInfo.artists[0].img1v1Url\n                  : videoInfo.avatarUrl) + '?param=100y100'\n              \"\n              alt=\"\"\n            />\n          </div>\n          <div class=\"userName\" @click=\"goToPersonal()\">\n            {{\n              $route.params.type == \"mv\"\n                ? videoInfo.artists[0].name\n                : videoInfo.creator.nickname\n            }}\n          </div>\n        </div>\n        <div class=\"videoTitle\">\n          {{ $route.params.type == \"mv\" ? videoInfo.name : videoInfo.title }}\n        </div>\n        <div class=\"otherInfo\">\n          <div>\n            发布：{{\n              $route.params.type == \"mv\"\n                ? videoInfo.publishTime\n                : videoInfo.publishTime | showDate\n            }}\n          </div>\n          <div>\n            播放：{{\n              ($route.params.type == \"mv\"\n                ? videoInfo.playCount\n                : videoInfo.playTime) | handleNum\n            }}\n          </div>\n        </div>\n        <div class=\"buttons\">\n          <div class=\"buttonItem\" @click=\"likeVideo\">\n            <i class=\"iconfont icon-good\" :class=\"isLike ? 'red' : ''\"></i\n            >{{ isLike ? \"已赞\" : \"赞\" }}\n          </div>\n          <div class=\"buttonItem\" @click=\"subVideo\">\n            <i class=\"iconfont icon-xihuan\" :class=\"isSub ? 'red' : ''\"></i\n            >{{ isSub ? \"已收藏\" : \"收藏\" }}\n          </div>\n          <div class=\"buttonItem\">\n            <i class=\"iconfont icon-zhuanfa\"></i>分享\n          </div>\n        </div>\n      </div>\n      <!-- 视频评论 -->\n      <div class=\"comment\">\n        <div class=\"title commentTitle\">评论</div>\n        <div class=\"commentList\" v-loading=\"isCommentLoading\">\n          <!-- 精彩评论 -->\n          <comment\n            :comments=\"comments.hotComments\"\n            v-if=\"comments.hotComments\"\n            :commentType=\"$route.params.type == 'mv' ? 'mv' : 'video'\"\n            :commentId=\"$route.params.id + ''\"\n            @getComment=\"\n              $route.params.type == 'mv' ? getMvComment() : getVideoComment()\n            \"\n            @scrollToComment=\"scrollToComment\"\n            ref=\"hotComments\"\n            ><div slot=\"title\">精彩评论</div></comment\n          >\n          <!-- 最新评论 -->\n          <comment\n            :comments=\"comments.comments\"\n            :commentType=\"$route.params.type == 'mv' ? 'mv' : 'video'\"\n            :commentId=\"$route.params.id + ''\"\n            :isHotComment=\"comments.hotComments ? false : true\"\n            @getComment=\"\n              $route.params.type == 'mv' ? getMvComment() : getVideoComment()\n            \"\n            @scrollToComment=\"scrollToComment\"\n            @transToHotComment=\"\n              (info) =>\n                $refs.hotComments.floorComment(info.commentId, info.nickName)\n            \"\n            ><div slot=\"title\">最新评论</div></comment\n          >\n        </div>\n        <!-- 分页 -->\n        <div class=\"page\">\n          <el-pagination\n            background\n            layout=\"prev, pager, next\"\n            :total=\"comments.total\"\n            small\n            :page-size=\"20\"\n            :current-page=\"commentsPage\"\n            @current-change=\"commentPageChange\"\n          >\n          </el-pagination>\n        </div>\n      </div>\n    </div>\n    <!-- 相关推荐 -->\n    <div class=\"right\" v-if=\"relatedVideo.length != 0\">\n      <div class=\"title\">相关推荐</div>\n      <div\n        class=\"relatedVideoItem\"\n        v-for=\"(item, index) in relatedVideo\"\n        :key=\"index\"\n        @click=\"goToRelatedVideo(item.vid)\"\n      >\n        <div class=\"relatedVideoItemCover\">\n          <img :src=\"item.coverUrl + '?param=300y180'\" alt=\"\" />\n          <div class=\"relatedVideoItemPlayCount\">\n            <i class=\"iconfont icon-shipin\"></i> {{ item.playTime | handleNum }}\n          </div>\n          <div class=\"relatedVideoItemTime\">\n            {{ item.durationms | handleMusicTime }}\n          </div>\n        </div>\n        <div class=\"relatedVideoItemInfo\">\n          <div class=\"relatedVideoItemTitle\">{{ item.title }}</div>\n          <div class=\"creator\">by {{ item.creator[0].userName }}</div>\n        </div>\n      </div>\n    </div>\n    <!-- 返回顶部 -->\n    <go-top scrollObj=\".videoDetail\"></go-top>\n  </div>\n</template>\n\n<script>\nimport { handleNum, handleMusicTime, formatDate } from \"plugins/utils.js\";\nimport Comment from \"components/comment/Comment.vue\";\nimport GoTop from \"components/goTop/GoTop.vue\";\n\nexport default {\n  components: { Comment, GoTop },\n  name: \"VideoDetail\",\n  data() {\n    return {\n      videoInfo: {},\n      videoUrl: \"\",\n      // 相关视频数据\n      relatedVideo: [],\n      comments: {},\n      // 评论页数\n      commentsPage: 1,\n      // 用户是否收藏该视频\n      isSub: false,\n      // 是否正在加载评论\n      isCommentLoading: false,\n      // 用户是否喜欢该视频\n      isLike: false,\n    };\n  },\n  methods: {\n    // 请求\n    // 根据传来的id查询mv详情\n    async getMvDetail() {\n      let res = await this.$request(\"/mv/detail\", {\n        mvid: this.$route.params.id,\n      });\n      //   console.log(res);\n      this.videoInfo = res.data.data;\n    },\n    // 请求mv地址\n    async getMvUrl() {\n      let res = await this.$request(\"/mv/url\", { id: this.$route.params.id });\n      this.videoUrl = res.data.data.url;\n    },\n    // 请求相关视频\n    async getRelatedVideo() {\n      let res = await this.$request(\"/related/allvideo\", {\n        id: this.$route.params.id,\n      });\n      console.log(res);\n      this.relatedVideo = res.data.data;\n    },\n    // 请求mv评论数据\n    async getMvComment(type) {\n      // 获取时间戳\n      var timestamp = Date.parse(new Date());\n      this.isCommentLoading = true;\n      // 清空最新评论数据\n      // this.comments.comments = [];\n\n      if (type == \"changePage\") {\n        this.scrollToComment();\n      }\n\n      let res = await this.$request(\"/comment/mv\", {\n        id: this.$route.params.id,\n        offset: 20 * (this.commentsPage - 1),\n        timestamp,\n      });\n\n      //   console.log(res);\n      if (res.data.code !== 200) {\n        this.$message.error(\"获取评论失败,请稍后重试!\");\n        return;\n      }\n      this.comments = res.data;\n      this.isCommentLoading = false;\n    },\n\n    // 滚动到输入框\n    scrollToComment() {\n      let videoDetail = document.querySelector(\".videoDetail\");\n      let commentTitle = document.querySelector(\".commentTitle\");\n      // console.log([commentTitle]);\n      videoDetail.scrollTo({\n        behavior: \"smooth\",\n        top: commentTitle.offsetTop - 70,\n      });\n    },\n\n    // 请求视频详情\n    async getVideoDetail() {\n      console.log(this.$route.params);\n      let res = await this.$request(\"/video/detail\", {\n        id: this.$route.params.id,\n      });\n      this.videoInfo = res.data.data;\n      console.log(res);\n    },\n    // 获取视频播放地址\n    async getVideoUrl() {\n      let res = await this.$request(\"/video/url\", {\n        id: this.$route.params.id,\n      });\n      //   console.log(res);\n      this.videoUrl = res.data.urls[0].url;\n    },\n    // 获取视频评论\n    async getVideoComment(type) {\n      // 获取时间戳\n      var timestamp = Date.parse(new Date());\n      this.isCommentLoading = true;\n\n      // 清空最新评论数据\n      // this.comments.comments = [];\n\n      if (type == \"changePage\") {\n        let videoDetail = document.querySelector(\".videoDetail\");\n        let commentTitle = document.querySelector(\".commentTitle\");\n        // console.log([commentTitle]);\n        videoDetail.scrollTo({\n          behavior: \"smooth\",\n          top: commentTitle.offsetTop - 70,\n        });\n      }\n\n      let res = await this.$request(\"/comment/video\", {\n        id: this.$route.params.id,\n        offset: 20 * (this.commentsPage - 1),\n        timestamp,\n      });\n\n      this.isCommentLoading = false;\n      //   console.log(res);\n      if (res.data.code !== 200) {\n        this.$message.error(\"获取评论失败,请稍后重试!\");\n        return;\n      }\n      this.comments = res.data;\n    },\n    // 请求用户收藏的视频列表\n    async getSubVideoList() {\n      let timestamp = Date.parse(new Date());\n      let res = await this.$request(\"/mv/sublist\", { limit: 1000, timestamp });\n      if (res.data.code != 200) {\n        this.$message.error(\"获取用户收藏视频失败,请稍后重试!\");\n        return;\n      }\n      this.$store.commit(\"updateSubVideoList\", res.data.data);\n      console.log(\"请求了用户收藏的视频列表\");\n    },\n\n    // 请求用户喜欢的视频列表\n    async getLikeVideoList() {\n      let timestamp = Date.parse(new Date());\n      let res = await this.$request(\"/playlist/mylike\", {\n        limit: 1000,\n        timestamp,\n      });\n      console.log(res);\n      if (res.data.code != 200) {\n        this.$message.error(\"获取用户点赞视频失败,请稍后重试!\");\n        return;\n      }\n      this.$store.commit(\"updateLikeVideoList\", res.data.data.feeds);\n      console.log(\"请求了用户喜欢的视频列表\");\n    },\n\n    // 事件处理\n    // 评论点击翻页的回调\n    commentPageChange(page) {\n      this.commentsPage = page;\n      // 清空评论\n      // this.comments.comments = [];\n      if (this.$route.params.type == \"mv\") {\n        this.getMvComment(\"changePage\");\n      } else if (this.$route.params.type == \"video\") {\n        this.getVideoComment(\"changePage\");\n      }\n    },\n    // 点击推荐视频的回调\n    goToRelatedVideo(id) {\n      //   console.log(id);\n      this.$router.push({ name: \"videoDetail\", params: { id, type: \"video\" } });\n    },\n    // 监听vidoe播放的事件\n    playVideo() {\n      this.$store.commit(\"changePlayState\", false);\n    },\n    // 判断用户是否收藏了该视频\n    getIsSub() {\n      console.log(this.isSub);\n      this.isSub = this.$store.state.subVideoList.find(\n        (item) => item.vid == this.$route.params.id\n      );\n    },\n\n    // 判断用户是否喜欢了该视频\n    getIsLike() {\n      if (this.$route.params.type == \"mv\") {\n        this.isLike = this.$store.state.likeVideoList.find(\n          (item) => item.mlogBaseData.id == this.$route.params.id\n        );\n      } else {\n        // 因为请求的喜欢列表中的视频id是mlogid 要获取vid还需要另外单独请求  这里我直接对比标题和时长 若都对的上则认定为是同一个视频\n        this.isLike = this.$store.state.likeVideoList.find(\n          (item) =>\n            item.mlogBaseData.desc == this.videoInfo.description &&\n            item.mlogBaseData.dration == this.videoInfo.durationms\n        );\n      }\n    },\n\n    // 用户点击了收藏按钮的回调\n    async subVideo() {\n      this.isSub = !this.isSub;\n      var timestamp = Date.parse(new Date());\n\n      // 请求\n      if (this.$route.params.type == \"video\") {\n        await this.$request(\"/video/sub\", {\n          id: this.$route.params.id,\n          t: this.isSub ? 1 : 0,\n        });\n      } else {\n        await this.$request(\"/mv/sub\", {\n          mvid: this.$route.params.id,\n          t: this.isSub ? 1 : 0,\n          timestamp,\n        });\n      }\n      this.getSubVideoList();\n    },\n\n    // 用户点击了点赞按钮的回调\n    async likeVideo() {\n      this.isLike = !this.isLike;\n      var timestamp = Date.parse(new Date());\n      let type = this.$route.params.type == \"mv\" ? 1 : 5;\n      // 请求\n      let res = await this.$request(\"/resource/like\", {\n        type,\n        id: this.$route.params.id,\n        t: this.isLike ? 1 : 0,\n        timestamp,\n      });\n      console.log(res);\n      this.getLikeVideoList();\n    },\n\n    // 点击跳转至personal页面的回调\n    goToPersonal() {\n      let uid =\n        this.$route.params.type == \"mv\"\n          ? this.videoInfo.artists[0].id\n          : this.videoInfo.creator.userId;\n      if (this.$route.params.type == \"mv\") {\n        this.$router.push({ name: \"singerDetail\", params: { id: uid } });\n      } else {\n        this.$router.push({ name: \"personal\", params: { uid } });\n      }\n    },\n  },\n  async created() {\n    this.getRelatedVideo();\n    if (this.$route.params.type == \"mv\") {\n      await this.getMvDetail();\n      this.getMvUrl();\n      this.getMvComment();\n    } else if (this.$route.params.type == \"video\") {\n      await this.getVideoDetail();\n      this.getVideoUrl();\n      this.getVideoComment();\n    }\n\n    if (this.$store.state.subVideoList == null) {\n      await this.getSubVideoList();\n    }\n    this.getIsSub();\n    if (this.$store.state.likeVideoList == null) {\n      await this.getLikeVideoList();\n    }\n    this.getIsLike();\n  },\n  filters: {\n    handleNum,\n    handleMusicTime,\n    showDate(value) {\n      // 1、先将时间戳转成Date对象\n      const date = new Date(value);\n\n      // 2、将date进行格式化\n      return formatDate(date, \"yyyy-MM-dd\");\n    },\n  },\n  watch: {\n    // 路由push相同地址不同参数时 不会自动刷新页面，这里通过watch监听路由变化，一但发生变化就通过 go(0) 刷新\n    // $route(to, from) {\n    //   if (to !== from) {\n    //     // 直接 go会导致整个页面进行刷新\n    //     // this.$router.go(0);\n    //   }\n    // },\n  },\n};\n</script>\n\n<style scoped>\n.videoDetail {\n  display: flex;\n  justify-content: center;\n  height: calc(80vh - 105px);\n  overflow-y: scroll;\n}\n\n.left {\n  width: 500px;\n}\n\n.right {\n  margin-left: 20px;\n}\n\n.title {\n  margin: 10px 0;\n  color: black;\n  font-weight: 600;\n}\n\n.relatedVideoItem {\n  display: flex;\n  margin-bottom: 5px;\n  cursor: pointer;\n}\n\n.relatedVideoItemCover {\n  position: relative;\n  margin-right: 10px;\n}\n\n.relatedVideoItemCover img {\n  width: 150px;\n  height: 90px;\n  border-radius: 10px;\n}\n\n.relatedVideoItemPlayCount {\n  position: absolute;\n  top: 0;\n  right: 5px;\n  font-size: 12px;\n  color: white;\n  transform: scale(0.9);\n}\n\n.relatedVideoItemTime {\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  font-size: 12px;\n  color: white;\n  transform: scale(0.9);\n}\n\n.relatedVideoItemInfo {\n  font-size: 12px;\n  color: rgb(31, 30, 30);\n  margin: 12px 0;\n  width: 140px;\n}\n\n.relatedVideoItemTitle {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.creator {\n  color: rgb(156, 156, 156);\n  margin-top: 15px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  transform: scale(0.9) translateX(-5%);\n}\n\n.user {\n  display: flex;\n  margin: 10px 0;\n  align-items: center;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n}\n\n.avatar img {\n  width: 100%;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\n.userName {\n  font-size: 12px;\n  margin-left: 10px;\n  color: rgb(36, 36, 36);\n  cursor: pointer;\n}\n\n.videoTitle {\n  color: #1b1b1b;\n  font-size: 20px;\n  margin: 20px 0 10px;\n  font-weight: bold;\n}\n\n.otherInfo {\n  display: flex;\n  color: #aaa;\n  font-size: 12px;\n}\n\n.otherInfo div {\n  margin-right: 20px;\n  transform: scale(0.9) translateX(-5%);\n}\n\n.buttons {\n  display: flex;\n  font-size: 12px;\n  margin: 20px 0;\n  color: #252525;\n}\n\n.buttonItem {\n  padding: 5px 20px;\n  border: 1px solid #ccc;\n  border-radius: 20px;\n  margin-right: 10px;\n}\n\n.buttonItem i {\n  font-size: 12px;\n  margin-right: 3px;\n}\n\n.page {\n  width: 100%;\n  text-align: center;\n  padding-bottom: 20px;\n}\n\n.videoPlayer {\n  background-color: black;\n}\n\n.red {\n  color: #ec4141;\n}\n\n.videoDetail /deep/ .el-loading-spinner {\n  top: 40px;\n}\n</style>"]}]}