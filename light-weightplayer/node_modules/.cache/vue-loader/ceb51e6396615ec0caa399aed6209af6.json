{"remainingRequest":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\light-weightPlayer\\light-weightplayer\\src\\views\\search\\searchChildren\\SearchSong.vue?vue&type=style&index=0&id=1a845490&scoped=true&lang=css&","dependencies":[{"path":"D:\\light-weightPlayer\\light-weightplayer\\src\\views\\search\\searchChildren\\SearchSong.vue","mtime":1636482832195},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636408356404},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1636408358142},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\postcss-loader\\src\\index.js","mtime":1636408357193},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\vue-loader\\lib\\index.js","mtime":1636408357599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouU2VhcmNoU29uZyB7CiAgcGFkZGluZzogMCAxNXB4Owp9CgoudGlwIHsKICBmb250LXdlaWdodDogYm9sZDsKICBjb2xvcjogcmdiKDM0LCAzNCwgMzQpOwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KCi5tYXRjaFRpdGxlIHsKICBmb250LXNpemU6IDEycHg7CiAgY29sb3I6IHJnYigzNCwgMzQsIDM0KTsKICBtYXJnaW46IDVweCAwOwp9CgoubWF0Y2hSZXN1bHQgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIG92ZXJmbG93OiBoaWRkZW47CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDsKICB3aWR0aDogMjcwcHg7CiAgaGVpZ2h0OiA2NXB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgoubWF0Y2hDb3ZlciB7CiAgd2lkdGg6IDY1cHg7CiAgaGVpZ2h0OiA2NXB4Owp9CgoubWF0Y2hDb3ZlciBpbWcgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKfQoKLm1hdGNoTmFtZSB7CiAgZm9udC1zaXplOiAxM3B4OwogIGNvbG9yOiByZ2IoMzEsIDMxLCAzMSk7CiAgbWFyZ2luLWxlZnQ6IDEwcHg7Cn0KCi5tdWx0aU1hdGNoIGkgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7CiAgcmlnaHQ6IDE1cHg7CiAgdG9wOiA1MCU7Cn0KCi5wYWdlIHsKICB3aWR0aDogMTAwJTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcGFkZGluZy1ib3R0b206IDIwcHg7CiAgbWFyZ2luOiAyMHB4IDA7Cn0K"},{"version":3,"sources":["SearchSong.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"SearchSong.vue","sourceRoot":"src/views/search/searchChildren","sourcesContent":["<template>\n  <div class=\"SearchSong\">\n    <div class=\"tip\">找到 {{ songCount }} 首单曲</div>\n    <div class=\"multiMatch\" v-if=\"multiMatch.artist && currentPage == 1\">\n      <div class=\"matchTitle\">最佳匹配</div>\n      <div\n        class=\"matchResult\"\n        @click=\"goToSingerDetail(multiMatch.artist[0].id)\"\n      >\n        <div class=\"matchCover\">\n          <img\n            :src=\"multiMatch.artist[0].img1v1Url + '?param==200y200'\"\n            alt=\"\"\n          />\n        </div>\n        <div class=\"matchName\">歌手：{{ multiMatch.artist[0].name }}</div>\n        <i class=\"iconfont icon-arrow-right-bold\"></i>\n      </div>\n    </div>\n    <!-- 这里的播放效果样式不能直接简单的操作DOM，因为有分页，也可以做成无限滚动，或者根据索引渲染，但是我懒得搞了 -->\n    <el-table\n      :data=\"searchSongList\"\n      size=\"mini\"\n      style=\"width: 100%\"\n      @row-dblclick=\"clickRow\"\n      @cell-click=\"clickCell\"\n      highlight-current-row\n      stripe\n    >\n      <el-table-column label=\"\" width=\"30\" type=\"index\" :index=\"handleIndex\">\n      </el-table-column>\n      <el-table-column label=\"\" width=\"23\">\n        <i class=\"iconfont icon-download\"></i>\n      </el-table-column>\n      <el-table-column prop=\"name\" label=\"音乐标题\" min-width=\"200\">\n      </el-table-column>\n      <el-table-column prop=\"ar[0].name\" label=\"歌手\" min-width=\"100\">\n      </el-table-column>\n      <el-table-column prop=\"al.name\" label=\"专辑\" min-width=\"170\">\n      </el-table-column>\n      <el-table-column prop=\"dt\" label=\"时长\" min-width=\"60\"> </el-table-column>\n    </el-table>\n    <!-- 分页 -->\n    <div class=\"page\" v-if=\"searchSongList.length != 0\">\n      <el-pagination\n        background\n        layout=\"prev, pager, next\"\n        :total=\"songCount\"\n        small\n        :page-size=\"30\"\n        :current-page=\"currentPage\"\n        @current-change=\"pageChange\"\n      >\n      </el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { handleMusicTime } from \"plugins/utils\";\nexport default {\n  name: \"SearchSong\",\n  data() {\n    return {\n      multiMatch: {},\n      searchSongList: [],\n      songCount: 0,\n      currentPage: 1,\n    };\n  },\n  methods: {\n    // 请求\n    // 获取最佳匹配\n    async getMultMath() {\n      let res = await this.$request(\"/search/multimatch\", {\n        keywords: this.$route.params.id,\n      });\n      this.multiMatch = res.data.result;\n    },\n\n    // 请求搜索单曲\n    async getSearchSong() {\n      let res = await this.$request(\"/cloudsearch\", {\n        keywords: this.$route.params.id,\n        offset: 30 * (this.currentPage - 1),\n      });\n      console.log(res);\n      this.songCount = res.data.result.songCount;\n      this.searchSongList = res.data.result.songs;\n      // 对数据的音乐时长进行处理\n      this.searchSongList.forEach((item, index) => {\n        this.searchSongList[index].dt = handleMusicTime(item.dt);\n      });\n    },\n\n    // 事件响应\n    // 处理索引\n    handleIndex(index) {\n      // console.log(index);\n      index = index + 1 + 30 * (this.currentPage - 1);\n      if (index < 10) {\n        return \"0\" + index;\n      } else {\n        return index;\n      }\n    },\n    // 双击table的row的回调\n    async clickRow(row) {\n      // 这里双击应该是要把当前双击的歌曲插入到当前的歌单中\n      // 首先获取当前的歌单列表和歌曲索引\n      let musicList = this.$store.state.musicList;\n      let currentIndex = this.$store.state.currentIndex;\n      // 先判断该歌曲是否已经在歌单中存在，避免重复点击导致歌单出现相同歌曲\n      let isExist = musicList.find((item) => item.id == row.id);\n      if (isExist) {\n        // 如果已经存在 则只提交歌曲id并return出去\n        this.$store.commit(\"updateMusicId\", row.id);\n        return;\n      }\n      this.$store.commit(\"changePlayState\", false);\n      // 将请求到的歌曲详情插入到歌单对应位置并提交至vuex\n      musicList.splice(currentIndex + 1, 0, row);\n      this.$store.commit(\"updateMusicId\", row.id);\n      this.$store.commit(\"updateMusicList\", {\n        musicList,\n        musicListId: this.$store.state.musicListId,\n      });\n    },\n    // 评论点击翻页的回调\n    pageChange(page) {\n      this.currentPage = page;\n      this.searchSongList = [];\n      this.getSearchSong();\n    },\n    // 点击最佳匹配的回调\n    goToSingerDetail(id) {\n      this.$router.push({ name: \"singerDetail\", params: { id } });\n    },\n\n    // 点击单元格的回调\n    async clickCell(row, column, cell) {\n      // 判断点击的是下载按钮\n      if (cell.querySelector(\".icon-download\")) {\n        // 请求该歌曲的url\n        console.log(row);\n        let res = await this.$request(\"/song/url\", { id: row.id });\n        console.log(res);\n        if (res.data.data[0].url == null) {\n          this.$message.warning(\"暂时无法获取该资源哦!\");\n          return;\n        }\n\n        // 匹配资源的域名\n        let url = res.data.data[0].url.match(/\\http.*?\\.net/);\n        // 匹配域名名称，并匹配对应的代理\n        let serve = url[0].match(/http:\\/(\\S*).music/)[1];\n        if (\n          serve != \"/m7\" &&\n          serve != \"/m701\" &&\n          serve != \"/m8\" &&\n          serve != \"/m801\"\n        ) {\n          // 没有对应的代理\n          this.$message.error(\"匹配不到对应的代理,下载失败!\");\n          return;\n        }\n        // 截取后面的参数\n        let params = res.data.data[0].url.slice(url[0].length);\n        // console.log(url[0], serve, params);\n\n        let downloadMusicInfo = {\n          url: serve + params,\n          name:\n            row.name +\n            \" - \" +\n            row.ar[0].name +\n            \".\" +\n            res.data.data[0].type.toLowerCase(),\n        };\n        console.log(downloadMusicInfo);\n        this.$store.commit(\"updateDownloadMusicInfo\", downloadMusicInfo);\n      }\n    },\n  },\n  created() {\n    this.getMultMath();\n    this.getSearchSong();\n    // console.log(this.$route.params.id);\n  },\n  watch: {},\n};\n</script>\n\n<style scoped>\n.SearchSong {\n  padding: 0 15px;\n}\n\n.tip {\n  font-weight: bold;\n  color: rgb(34, 34, 34);\n  margin-bottom: 10px;\n}\n\n.matchTitle {\n  font-size: 12px;\n  color: rgb(34, 34, 34);\n  margin: 5px 0;\n}\n\n.matchResult {\n  display: flex;\n  align-items: center;\n  position: relative;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: #f4f4f4;\n  width: 270px;\n  height: 65px;\n  margin-bottom: 20px;\n  cursor: pointer;\n}\n\n.matchCover {\n  width: 65px;\n  height: 65px;\n}\n\n.matchCover img {\n  width: 100%;\n  height: 100%;\n}\n\n.matchName {\n  font-size: 13px;\n  color: rgb(31, 31, 31);\n  margin-left: 10px;\n}\n\n.multiMatch i {\n  position: absolute;\n  transform: translateY(-50%);\n  right: 15px;\n  top: 50%;\n}\n\n.page {\n  width: 100%;\n  text-align: center;\n  padding-bottom: 20px;\n  margin: 20px 0;\n}\n</style>"]}]}