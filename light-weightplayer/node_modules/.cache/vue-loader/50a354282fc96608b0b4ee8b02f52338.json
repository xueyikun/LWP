{"remainingRequest":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue_cloud_music-master\\light-webplayer\\src\\components\\bottomControl\\BottomControl.vue?vue&type=style&index=0&id=af883cd6&scoped=true&lang=css&","dependencies":[{"path":"D:\\vue_cloud_music-master\\light-webplayer\\src\\components\\bottomControl\\BottomControl.vue","mtime":1636503659733},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636408356404},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1636408358142},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\postcss-loader\\src\\index.js","mtime":1636408357193},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\vue-loader\\lib\\index.js","mtime":1636408357599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJvdHRvbUNvbnRyb2wgewogIC8qIGJhY2tncm91bmQtY29sb3I6IHBpbms7ICovCiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkZGQ7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiA1NXB4OwogIHBvc2l0aW9uOiBmaXhlZDsKICBib3R0b206IDA7CiAgbGVmdDogMDsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBwYWRkaW5nOiA2cHggMTBweDsKICB6LWluZGV4OiAxMDAwMDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwp9CgouYXZhdGFyIHsKICB3aWR0aDogNDBweDsKICBoZWlnaHQ6IDQwcHg7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIG92ZXJmbG93OiBoaWRkZW47CiAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLmF2YXRhciBpbWcgewogIHdpZHRoOiAxMDAlOwp9CgoubGVmdCB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIHdpZHRoOiAxMjNweDsKfQoKLm11c2ljSW5mbyB7CiAgY29sb3I6IHJnYigzNywgMzcsIDM3KTsKICBmb250LXNpemU6IDEycHg7CiAgd2lkdGg6IDcwcHg7Cn0KCi5tdXNpY05hbWUgewogIG1hcmdpbi1ib3R0b206IDRweDsKICB3aWR0aDogMTAwJTsKICBvdmVyZmxvdzogaGlkZGVuOwogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogIHdoaXRlLXNwYWNlOiBub3dyYXA7Cn0KCi5zaW5nZXIgewogIHRyYW5zZm9ybTogc2NhbGUoMC45KTsKICBtYXJnaW4tbGVmdDogLTNweDsKICB3aWR0aDogMTAwJTsKICBvdmVyZmxvdzogaGlkZGVuOwogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgouY2VudGVyIHsKICBtYXJnaW4tdG9wOiA1cHg7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KCi5idXR0b25zIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgaGVpZ2h0OiAxM3B4Owp9CgouYnV0dG9ucyBpIHsKICBmb250LXNpemU6IDIwcHg7CiAgY29sb3I6ICMzMTMxMzE7Cn0KCi5idXR0b25zIHNwYW46bnRoLWNoaWxkKDMpIGkgewogIGZvbnQtc2l6ZTogMjVweDsKfQoKLmNlbnRlciAuaWNvbi14dW5odWFuIHsKICBmb250LXNpemU6IDE3cHg7Cn0KLmNlbnRlciAuaWNvbi14aWh1YW4gewogIGZvbnQtc2l6ZTogMTVweDsKfQoKLnJpZ2h0IHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9Cgoudm9sdW1lQ29udHJvbCB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIG1hcmdpbi1yaWdodDogMTVweDsKfQoKLmljb24teWlubGlhbmcgewogIGZvbnQtc2l6ZTogMThweDsKICBtYXJnaW4tcmlnaHQ6IDdweDsKfQoKLnZvbHVtZVNsaWRlciB7CiAgd2lkdGg6IDU1cHg7Cn0KCi5pY29uLWJvZmFuZ2xpZWJpYW8gewogIGZvbnQtc2l6ZTogMThweDsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0KCi5wcm9ncmVzc1NsaWRlciB7CiAgd2lkdGg6IDMwMHB4Owp9CgouYnV0dG9ucyBzcGFuIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgd2lkdGg6IDUwcHg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi5pY29uLXphbnRpbmd0aW5nemhpIHsKICBmb250LXNpemU6IDM1cHggIWltcG9ydGFudDsKfQoKLmRyYXdlckhlYWRlciB7CiAgZm9udC1zaXplOiAxMnB4OwogIHRyYW5zZm9ybTogc2NhbGUoMC45KTsKICBjb2xvcjogI2FhYTsKICBwYWRkaW5nOiAxNXB4IDA7Cn0KCi5wcm9ncmVzc0JhciB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgouY3VycmVudFRpbWUsCi50b3RhbFRpbWUgewogIGZvbnQtc2l6ZTogMTJweDsKICB0cmFuc2Zvcm06IHNjYWxlKDAuODUpOwogIGNvbG9yOiAjYWFhOwogIG1hcmdpbjogMCA1cHg7CiAgd2lkdGg6IDMwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgoucHJvZ3Jlc3NCYXIgewogIGhlaWdodDogMTBweDsKICBtYXJnaW4tdG9wOiAxMnB4OwogIG92ZXJmbG93OiBoaWRkZW47Cn0KCi5saWtlIHsKICBjb2xvcjogCQkjMDAwMDg4ICFpbXBvcnRhbnQ7Cn0KCi5kb3dubG9hZENvbnRhaW5lciB7CiAgaGVpZ2h0OiAxMDAlOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLmRvd25sb2FkQ29udGFpbmVyIGkgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDVweDsKfQoKLnJlY29uZEluZm8gewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBmb250LXNpemU6IDEycHg7CiAgdHJhbnNmb3JtOiBzY2FsZSgwLjgpOwogIHdpZHRoOiAxNDBweDsKICByaWdodDogLTVweDsKICBib3R0b206IC01cHg7Cn0KCi5jZW50ZXIgLmljb24tc3VpamkxIHsKICBmb250LXNpemU6IDE1cHg7Cn0K"},{"version":3,"sources":["BottomControl.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"BottomControl.vue","sourceRoot":"src/components/bottomControl","sourcesContent":["<template>\n  <div class=\"bottomControl\">\n    <audio\n      :src=\"musicUrl\"\n      ref=\"audioPlayer\"\n      autoplay\n      @play=\"changeState(true)\"\n      @pause=\"changeState(false)\"\n      @ended=\"changeMusic('next')\"\n      @timeupdate=\"timeupdate\"\n    ></audio>\n    <!-- 左边 -->\n    <div class=\"left\">\n      <div class=\"avatar\" @click=\"$store.commit('changeMusicDetailCardState')\">\n        <img\n          :src=\"musicDetail.al.picUrl\"\n          alt=\"\"\n          v-if=\"musicDetail.al\"\n          :draggable=\"false\"\n        />\n        <img src=\"~assets/img/test.jpg\" alt=\"\" v-else :draggable=\"false\" />\n      </div>\n      <div class=\"musicInfo\">\n        <div class=\"musicName\" v-if=\"musicDetail && musicDetail.name\">\n          {{ musicDetail.name }}\n        </div>\n        <div\n          class=\"singer\"\n          v-if=\"musicDetail && musicDetail.name\"\n          @click=\"goToSingerDetail\"\n        >\n          {{ musicDetail.ar[0].name }}\n        </div>\n      </div>\n      <div class=\"downloadContainer\" v-if=\"musicDetail.name\">\n        <i class=\"iconfont icon-download\" @click=\"downloadCurrentMusic\"></i>\n      </div>\n    </div>\n    <!-- 中间 -->\n    <div class=\"center\">\n      <div class=\"buttons\">\n        <span @click=\"playType = playType == 'order' ? 'random' : 'order'\"\n          ><i class=\"iconfont icon-xunhuan\" v-if=\"playType == 'order'\"></i\n          ><i class=\"iconfont icon-suiji1\" v-else></i\n        ></span>\n        <span @click=\"musicList.length != 0 ? changeMusic('pre') : ''\"\n          ><i class=\"iconfont icon-shangyishou\"></i\n        ></span>\n        <span @click=\"musicList.length != 0 ? changePlayState() : ''\">\n          <i\n            class=\"iconfont icon-icon_play\"\n            v-if=\"!this.$store.state.isPlay\"\n          ></i>\n          <i class=\"iconfont icon-zantingtingzhi\" v-else></i>\n        </span>\n        <span @click=\"musicList.length != 0 ? changeMusic('next') : ''\"\n          ><i class=\"iconfont icon-xiayishou\"></i\n        ></span>\n        <span\n          ><i\n            class=\"iconfont icon-xihuan\"\n            :class=\"isUserLikeCurrentMusic ? 'like' : ''\"\n            @click=\"musicList.length != 0 ? likeIt() : ''\"\n          ></i\n        ></span>\n      </div>\n      <!-- 进度条 -->\n      <div class=\"progressBar\">\n        <span class=\"currentTime\">{{ currentTime | handleMusicTime }}</span>\n        <!-- :value 是单向的  要实现双向要v-model -->\n        <el-slider\n          class=\"progressSlider\"\n          v-model=\"timeProgress\"\n          :show-tooltip=\"false\"\n          @change=\"changeProgress\"\n          :disabled=\"musicList.length == 0\"\n        ></el-slider>\n        <span class=\"totalTime\">{{ duration }}</span>\n      </div>\n    </div>\n    <!-- 右边 -->\n    <div class=\"right\">\n      <div class=\"volumeControl\">\n        <i class=\"iconfont icon-yinliang\" @click=\"changeMutedState\"></i>\n        <el-slider\n          class=\"volumeSlider\"\n          v-model=\"volume\"\n          @input=\"changeVolume\"\n          :show-tooltip=\"false\"\n        ></el-slider>\n      </div>\n      <div class=\"playList\" @click=\"openDrawer\">\n        <i class=\"iconfont icon-bofangliebiao\"></i>\n      </div>\n    </div>\n    <!-- 抽屉 -->\n    <el-drawer :visible.sync=\"drawer\" :with-header=\"false\" width=\"300\">\n      <div class=\"drawerHeader\">总{{ musicList.length }}首</div>\n      <el-table\n        :data=\"musicList\"\n        stripe\n        style=\"width: 100%\"\n        :show-header=\"false\"\n        @row-dblclick=\"clickRow\"\n        highlight-current-row\n        lazy\n      >\n        <el-table-column prop=\"name\" width=\"150px\"> </el-table-column>\n        <el-table-column prop=\"ar[0].name\" width=\"80px\"> </el-table-column>\n        <el-table-column prop=\"dt\" width=\"70px\"> </el-table-column>\n      </el-table>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport { handleMusicTime, returnSecond } from \"plugins/utils\";\nlet lastSecond = 0;\n// 总时长的秒数\nlet durationNum = 0;\n// 保存当前音量\nlet volumeSave = 0;\n// 当前音乐类型，用于下载\nlet musicType = \"\";\n\nexport default {\n  name: \"BottomControl\",\n  data() {\n    return {\n      musicDetail: {},\n      musicUrl: \"\",\n      musicList: [],\n      currentMusicIndex: 0,\n      drawer: false,\n      // 音乐总时长\n      duration: \"00:00\",\n      // 当前播放时间位置\n      currentTime: 0,\n      // 进度条的位置\n      timeProgress: 0,\n      // 音量\n      volume: 30,\n      // 是否静音\n      isMuted: false,\n      // 抽屉是否被打开过（如果没打开过，里面的数据是不会渲染的）\n      hasDrawerOpend: false,\n      // 用户的喜欢音乐列表\n      likeMuiscList: [],\n      // 用户是否喜欢当前音乐\n      isUserLikeCurrentMusic: false,\n      // 播放模式（顺序播放，随机播放）\n      // order random\n      playType: \"order\",\n    };\n  },\n  methods: {\n    // 请求\n    // 请求歌曲的url\n    async getMusicDetail(id) {\n      this.$store.commit(\"updateMusicLoadState\", true);\n      let result = await this.$request(\"/song/url\", { id });\n      // console.log(musicDetail);\n      // console.log(result);\n      // 获取不到url\n      if (result.data.data[0].url == null) {\n        this.$message.error(\"该歌曲暂无版权，将为您播放下一首歌曲\");\n        this.changeMusic(\"next\");\n        return;\n      }\n      this.musicUrl = result.data.data[0].url;\n      musicType = result.data.data[0].type.toLowerCase();\n      this.$store.commit(\"updateMusicLoadState\", false);\n    },\n    // 喜欢该音乐\n    // like参数:是否喜欢该音乐\n    async likeMusic(id, like) {\n      let res = await this.$request(\"/like\", { id, like });\n      if (res.data.code == 200) {\n        console.log(\"喜欢操作成功\");\n      } else {\n        console.log(\"喜欢操作失败\");\n      }\n    },\n    // 获取喜欢音乐列表\n    async getLikeMusicList() {\n      // 获取时间戳\n      var timestamp = Date.parse(new Date());\n      // 因为喜欢音乐列表实时性较高，为了避免接口缓存，在请求后面加上一个时间戳\n      let res = await this.$request(\"/likelist\", {\n        uid: window.localStorage.getItem(\"userId\"),\n        timestamp,\n      });\n      this.likeMuiscList = res.data.ids;\n      this.$store.commit(\"updataLikeMuiscList\", this.likeMuiscList);\n    },\n\n    // 点击播放键的回调\n    changePlayState() {\n      !this.$store.state.isPlay ? this.playMusic() : this.pauseMusic();\n    },\n    // 播放音乐的函数\n    playMusic() {\n      this.$refs.audioPlayer.play();\n    },\n    // 暂停音乐的函数\n    pauseMusic() {\n      this.$refs.audioPlayer.pause();\n    },\n    // audio开始或暂停播放的回调  在vuex中改变状态\n    changeState(state) {\n      this.$store.commit(\"changePlayState\", state);\n    },\n    // 根据id找到 musicList中对应的musicDetail\n    getMusicDetailFromMusicList() {\n      let index = this.musicList.findIndex(\n        (item) => item.id == this.$store.state.musicId\n      );\n      console.log(index);\n      if (index != -1) {\n        // 记录当前音乐的index\n        this.currentMusicIndex = index;\n        // 将索引传至vuex\n        this.$store.commit(\"updateCurrentIndex\", index);\n        this.musicDetail = this.musicList[index];\n        // 直接从audio标签中的duration属性拿时长会有请求时差问题，所以直接在musicInfo中拿\n        this.duration = this.musicList[index].dt;\n      }\n    },\n    // 切歌函数\n    changeMusic(type, id) {\n      if (type == \"click\") {\n        // 点击抽屉row进行切歌\n        this.$store.commit(\"updateMusicId\", id);\n      } else if (type == \"pre\") {\n        let currentMusicIndex = this.currentMusicIndex;\n        let preIndex;\n        if (this.playType == \"order\") {\n          preIndex =\n            currentMusicIndex - 1 < 0\n              ? this.musicList.length - 1\n              : currentMusicIndex - 1;\n        } else if (this.playType == \"random\") {\n          if (this.musicList.length == 1) {\n            preIndex = currentMusicIndex;\n          } else {\n            // Math.floor(Math.random()*10); 可均衡获取0到9的随机整数。\n            preIndex = currentMusicIndex;\n            while (preIndex == currentMusicIndex) {\n              preIndex = Math.floor(Math.random() * this.musicList.length);\n            }\n          }\n        }\n        console.log(this.musicList[preIndex].id);\n        this.$store.commit(\"updateMusicId\", this.musicList[preIndex].id);\n      } else if (type == \"next\") {\n        let currentMusicIndex = this.currentMusicIndex;\n        let nextIndex;\n        if (this.playType == \"order\") {\n          nextIndex =\n            currentMusicIndex + 1 == this.musicList.length\n              ? 0\n              : currentMusicIndex + 1;\n        } else if (this.playType == \"random\") {\n          if (this.musicList.length == 1) {\n            nextIndex = currentMusicIndex;\n          } else {\n            // Math.floor(Math.random()*10); 可均衡获取0到9的随机整数。\n            nextIndex = currentMusicIndex;\n            while (nextIndex == currentMusicIndex) {\n              nextIndex = Math.floor(Math.random() * this.musicList.length);\n            }\n          }\n        }\n        // console.log(this.musicList[nextIndex].id);\n        this.$store.commit(\"updateMusicId\", this.musicList[nextIndex].id);\n      }\n    },\n    // 双击抽屉列表中的row的回调\n    clickRow(row) {\n      // console.log(row.id);\n      this.changeMusic(\"click\", row.id);\n    },\n    // 当前播放时间位置\n    timeupdate() {     \n      let time = this.$refs.audioPlayer.currentTime;\n      // 将当前播放时间保存到vuex  如果保存到vuex这步节流,会导致歌词不精准,误差最大有1s\n      this.$store.commit(\"updateCurrentTime\", time);\n\n      time = Math.floor(time);\n      if (time !== lastSecond) {\n        // console.log(time);\n        lastSecond = time;\n        this.currentTime = time;\n        // 计算进度条的位置\n        this.timeProgress = Math.floor((time / durationNum) * 100);\n        // console.log(this.timeProgress);\n      }\n    },\n    // 拖动进度条的回调\n    changeProgress(e) {\n      // console.log(e);\n      // 修改当前播放时间\n      this.currentTime = Math.floor((e / 100) * durationNum);\n      // 改变audio的实际当前播放时间\n      this.$refs.audioPlayer.currentTime = this.currentTime;\n    },\n    // 拖动音量条的回调\n    changeVolume(e) {\n      // 改变audio的音量\n      // input事件 实时触发\n      this.$refs.audioPlayer.volume = e / 100;\n      if (this.isMuted && e > 0) {\n        this.isMuted = false;\n      } else if (e == 0 && this.isMuted == false) {\n        this.isMuted = true;\n      }\n    },\n    // 点击小喇叭的回调 （切换静音状态）\n    changeMutedState() {\n      if (this.isMuted) {\n        this.volume = volumeSave;\n      } else {\n        volumeSave = this.volume;\n        this.volume = 0;\n      }\n      console.log(volumeSave, this.isMuted);\n      this.isMuted = !this.isMuted;\n    },\n    // 操作drawerList中DOM的函数\n    handleDrawerListDOM(currentIndex, lastIndex) {\n      //操作原生DOM\n      this.$nextTick(() => {\n        let tableRows = document\n          .querySelector(\".bottomControl\")\n          .querySelectorAll(\".el-table__row\");\n        // // 直接修改dom样式的颜色无效  可能是因为第三方组件 style scoped的原因\n        // // 通过引入全局样式解决\n        if (tableRows[currentIndex]) {\n          tableRows[currentIndex].children[0]\n            .querySelector(\".cell\")\n            .classList.add(\"currentRow\");\n          tableRows[currentIndex].children[1]\n            .querySelector(\".cell\")\n            .classList.add(\"currentRow\");\n        }\n        if (\n          (lastIndex && lastIndex != -1 && tableRows[lastIndex]) ||\n          lastIndex == 0\n        ) {\n          // 将上一首的类名删掉\n          tableRows[lastIndex].children[0]\n            .querySelector(\".cell\")\n            .classList.remove(\"currentRow\");\n          tableRows[lastIndex].children[1]\n            .querySelector(\".cell\")\n            .classList.remove(\"currentRow\");\n        }\n      });\n    },\n    // 点击打开抽屉的回调\n    openDrawer() {\n      // 关闭也是这个回调，所以直接取反\n      this.drawer = !this.drawer;\n      this.hasDrawerOpend = true;\n      this.handleDrawerListDOM(this.currentMusicIndex);\n    },\n\n    // 判断用户是否喜欢该音乐\n    getIsUserLikeCurrentMusic() {\n      this.isUserLikeCurrentMusic = this.likeMuiscList.find(\n        (item) => item == this.$store.state.musicId\n      );\n    },\n    // 用户点击喜欢该音乐的回调\n    async likeIt() {\n      if (!this.$store.state.isLogin) {\n        this.$message.error(\"请先登录!\");\n        return;\n      }\n      this.isUserLikeCurrentMusic = !this.isUserLikeCurrentMusic;\n      await this.likeMusic(\n        this.$store.state.musicId,\n        this.isUserLikeCurrentMusic\n      );\n      await this.getLikeMusicList();\n    },\n\n    // 点击下载按钮的回调\n    downloadCurrentMusic() {\n      // console.log(\"download\");\n      console.log(this.musicDetail, this.musicUrl);\n\n      // 匹配资源的域名\n      let url = this.musicUrl.match(/\\http.*?\\.net/);\n      // 匹配域名名称，并匹配对应的代理\n      let serve = url[0].match(/http:\\/(\\S*).music/)[1];\n      if (\n        serve != \"/m7\" &&\n        serve != \"/m701\" &&\n        serve != \"/m8\" &&\n        serve != \"/m801\"\n      ) {\n        // 没有对应的代理\n        this.$message.error(\"匹配不到对应的代理,下载失败!\");\n        return;\n      }\n      // 截取后面的参数\n      let params = this.musicUrl.slice(url[0].length);\n\n      let downloadMusicInfo = {\n        url: serve + params,\n        name:\n          this.musicDetail.name +\n          \" - \" +\n          this.musicDetail.ar[0].name +\n          \".\" +\n          musicType,\n      };\n\n      console.log(downloadMusicInfo);\n      this.$store.commit(\"updateDownloadMusicInfo\", downloadMusicInfo);\n    },\n\n    // 点击歌手名跳转至歌手页面的回调\n    goToSingerDetail() {\n      if (this.$route.path == `/singerDetail/${this.musicDetail.ar[0].id}`)\n        this.$router.push({\n          name: \"singerDetail\",\n          params: { id: this.musicDetail.ar[0].id },\n        });\n      if (this.$store.state.isMusicDetailCardShow == true) {\n        this.$store.state.commit(\"changeMusicDetailCardState\", false);\n      }\n    },\n  },\n\n  watch: {\n    // 监听vuex中musicId的变化\n    \"$store.state.musicId\"(id) {\n      console.log(\"vuex中的id发生了变化\");\n      // 先暂停当前播放的音乐\n      this.pauseMusic();\n      this.musicList = this.$store.state.musicList;\n      this.getMusicDetailFromMusicList();\n      this.getMusicDetail(id);\n      durationNum = returnSecond(this.duration);\n      // 判断用户是否喜欢当前音乐\n      this.getIsUserLikeCurrentMusic();\n      // console.log(this.$refs.audioPlayer);\n    },\n    // 监听currentIndex的变化\n    \"$store.state.currentIndex\"(currentIndex, lastIndex) {\n      if (this.hasDrawerOpend) {\n        this.handleDrawerListDOM(currentIndex, lastIndex);\n      }\n    },\n    // 监听播放状态\n    \"$store.state.isPlay\"(isPlay) {\n      if (isPlay) {\n        this.playMusic();\n      } else {\n        this.pauseMusic();\n      }\n    },\n    \"$store.state.isLogin\"(current) {\n      if (current) {\n        this.getLikeMusicList();\n      } else {\n        // 清空喜欢列表\n        this.likeMuiscList = [];\n      }\n    },\n  },\n  filters: {\n    handleMusicTime,\n  },\n};\n</script>\n\n<style scoped>\n.bottomControl {\n  /* background-color: pink; */\n  border-top: 1px solid #ddd;\n  width: 100%;\n  height: 55px;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  padding: 6px 10px;\n  z-index: 10000;\n  background-color: #fff;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 5px;\n  overflow: hidden;\n  margin-right: 10px;\n  cursor: pointer;\n}\n\n.avatar img {\n  width: 100%;\n}\n\n.left {\n  display: flex;\n  align-items: center;\n  width: 123px;\n}\n\n.musicInfo {\n  color: rgb(37, 37, 37);\n  font-size: 12px;\n  width: 70px;\n}\n\n.musicName {\n  margin-bottom: 4px;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.singer {\n  transform: scale(0.9);\n  margin-left: -3px;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: pointer;\n}\n\n.center {\n  margin-top: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.buttons {\n  display: flex;\n  align-items: center;\n  height: 13px;\n}\n\n.buttons i {\n  font-size: 20px;\n  color: #313131;\n}\n\n.buttons span:nth-child(3) i {\n  font-size: 25px;\n}\n\n.center .icon-xunhuan {\n  font-size: 17px;\n}\n.center .icon-xihuan {\n  font-size: 15px;\n}\n\n.right {\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.volumeControl {\n  display: flex;\n  align-items: center;\n  margin-right: 15px;\n}\n\n.icon-yinliang {\n  font-size: 18px;\n  margin-right: 7px;\n}\n\n.volumeSlider {\n  width: 55px;\n}\n\n.icon-bofangliebiao {\n  font-size: 18px;\n  margin-right: 10px;\n}\n\n.progressSlider {\n  width: 300px;\n}\n\n.buttons span {\n  display: inline-block;\n  width: 50px;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n.icon-zantingtingzhi {\n  font-size: 35px !important;\n}\n\n.drawerHeader {\n  font-size: 12px;\n  transform: scale(0.9);\n  color: #aaa;\n  padding: 15px 0;\n}\n\n.progressBar {\n  display: flex;\n  align-items: center;\n}\n\n.currentTime,\n.totalTime {\n  font-size: 12px;\n  transform: scale(0.85);\n  color: #aaa;\n  margin: 0 5px;\n  width: 30px;\n  text-align: center;\n}\n\n.progressBar {\n  height: 10px;\n  margin-top: 12px;\n  overflow: hidden;\n}\n\n.like {\n  color: \t\t#000088 !important;\n}\n\n.downloadContainer {\n  height: 100%;\n  position: relative;\n}\n\n.downloadContainer i {\n  position: absolute;\n  bottom: 5px;\n}\n\n.recondInfo {\n  position: absolute;\n  font-size: 12px;\n  transform: scale(0.8);\n  width: 140px;\n  right: -5px;\n  bottom: -5px;\n}\n\n.center .icon-suiji1 {\n  font-size: 15px;\n}\n</style>"]}]}