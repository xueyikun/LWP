{"remainingRequest":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue_cloud_music-master\\light-webplayer\\src\\views\\video\\videoChildren\\VideoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue_cloud_music-master\\light-webplayer\\src\\views\\video\\videoChildren\\VideoList.vue","mtime":1632135031000},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\babel-loader\\lib\\index.js","mtime":1636408357214},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\vue-loader\\lib\\index.js","mtime":1636408357599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTZWNvbmROYXZCYXIgZnJvbSAiY29tcG9uZW50cy9zZWNvbmROYXZCYXIvU2Vjb25kTmF2QmFyLnZ1ZSI7CmltcG9ydCBWaWRlb0xpc3RDYXJkIGZyb20gImNvbXBvbmVudHMvdmlkZW9MaXN0Q2FyZC9WaWRlb0xpc3RDYXJkLnZ1ZSI7CmltcG9ydCBHb1RvcCBmcm9tICJjb21wb25lbnRzL2dvVG9wL0dvVG9wLnZ1ZSI7CmltcG9ydCBTb3J0Qm94IGZyb20gImNvbXBvbmVudHMvc29ydEJveC9Tb3J0Qm94LnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IFNlY29uZE5hdkJhciwgVmlkZW9MaXN0Q2FyZCwgR29Ub3AsIFNvcnRCb3ggfSwKICBuYW1lOiAiVmlkZW9MaXN0IiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g6KeG6aKR5YiG57G7CiAgICAgIHZpZGVvQ2F0ZWdvcnk6IFtdLAogICAgICAvLyDlvZPliY3moIfnrb4KICAgICAgY3VycmVudFRhZzoge30sCiAgICAgIC8vIOW9k+WJjeinhumikemhteaVsAogICAgICB2aWRlb1BhZ2U6IDEsCiAgICAgIC8vIOaYr+WQpui/mOacieabtOWkmuinhumikeaVsOaNrgogICAgICBoYXNNb3JlOiB0cnVlLAogICAgICAvLyDop4bpopHliJfooajmlbDmja4KICAgICAgdmlkZW9MaXN0OiBbXSwKICAgICAgLy8g6KeG6aKR5YiG57G7dGFn5YiX6KGoCiAgICAgIHNvcnRMaXN0OiBbXSwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDor7fmsYIKICAgIC8vIOivt+axguinhumikeWIhuexuwogICAgYXN5bmMgZ2V0VmlkZW9DYXRlZ29yeSgpIHsKICAgICAgbGV0IHJlcyA9IGF3YWl0IHRoaXMuJHJlcXVlc3QoIi92aWRlby9jYXRlZ29yeS9saXN0Iik7CiAgICAgIHRoaXMudmlkZW9DYXRlZ29yeSA9IHJlcy5kYXRhLmRhdGE7CiAgICAgIHRoaXMuY3VycmVudFRhZyA9IHJlcy5kYXRhLmRhdGFbMF07CiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMudmlkZW9DYXRlZ29yeSk7CiAgICB9LAogICAgLy/ojrflj5bliIbnsbvkuIvnmoTop4bpopEKICAgIC8vIOi/meS4quaOpeWPo+S4gOasoeWPquiDveiOt+WPljjmnaHmlbDmja4sIOaJgOS7peaIkeavj+asoeivt+axguW+queOrzLmrKHov5nkuKror7fmsYIg5ou/MTbmnaHmlbDmja4KICAgIC8vIOWboOS4uuaYr+avj+asoTjmnaHmlbDmja5wdXNo6L+b5Y6755qEIHB1c2jkuobliY0gOOadoeaXtuWboOS4uumrmOW6puS4jeWkn++8jOinpuWPkeS6hue7hOS7tnZpZGVvLWxpc3QtY2FyZOeahOinpuW6le+8jAogICAgLy8g5Y+I6LCD55So5LqG5LiA5qyh6K+35rGC77yM5omA5Lul56ys5LiA5qyh6K+35rGC5Lya6K+35rGCMzLmnaHmlbDmja7vvIzlkI7pnaLpq5jluqblpJ/kuobpg73mmK/kuIDmrKHor7fmsYIxNuadoe+8jOaIkeinieW+l+aMuuWlveeahO+8jOWwseS4jeeQhui/meS4qmJ1Z+S6hgogICAgYXN5bmMgZ2V0VmlkZW9MaXN0KGlkKSB7CiAgICAgIGxldCBpID0gMjsKICAgICAgd2hpbGUgKGkpIHsKICAgICAgICBpZiAodGhpcy5oYXNNb3JlKSB7CiAgICAgICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy4kcmVxdWVzdCgiL3ZpZGVvL2dyb3VwIiwgewogICAgICAgICAgICBpZCwKICAgICAgICAgICAgb2Zmc2V0OiA4ICogKHRoaXMudmlkZW9QYWdlIC0gMSksCiAgICAgICAgICB9KTsKICAgICAgICAgIHRoaXMuaGFzTW9yZSA9IHJlcy5kYXRhLmhhc21vcmU7CiAgICAgICAgICB0aGlzLnZpZGVvTGlzdC5wdXNoKC4uLnJlcy5kYXRhLmRhdGFzKTsKICAgICAgICAgIHRoaXMudmlkZW9QYWdlICs9IDE7CiAgICAgICAgICBpLS07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgIH0KICAgICAgLy8gY29uc29sZS5sb2codGhpcy52aWRlb0xpc3QpOwogICAgfSwKCiAgICAvLyDojrflj5bop4bpopHliIbnsbt0YWcKICAgIGFzeW5jIGdldFNvcnRMaXN0KCkgewogICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy4kcmVxdWVzdCgiL3ZpZGVvL2dyb3VwL2xpc3QiKTsKICAgICAgLy8gY29uc29sZS5sb2cocmVzKTsKICAgICAgLy8gY29uc29sZS5sb2cocmVzLmRhdGEuZGF0YSk7CiAgICAgIHRoaXMuc29ydExpc3QgPSByZXMuZGF0YS5kYXRhOwogICAgfSwKCiAgICAvLyDkuovku7YKICAgIC8vIOeCueWHu+WIhuexu+eahOWbnuiwgwogICAgY2xpY2tTZWNvbmRCYXJJdGVtKGluZGV4KSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKCJjbGlja1NlY29uZEJhckl0ZW0iKTsKICAgICAgdGhpcy52aWRlb1BhZ2UgPSAxOwogICAgICB0aGlzLnZpZGVvTGlzdCA9IFtdOwogICAgICB0aGlzLmN1cnJlbnRUYWcgPSB0aGlzLnZpZGVvQ2F0ZWdvcnlbaW5kZXhdOwogICAgICB0aGlzLmdldFZpZGVvTGlzdCh0aGlzLmN1cnJlbnRUYWcuaWQpOwogICAgfSwKICAgIC8vIOi/m+WFpeinhumikeivpuaDhemhtemdogogICAgZ29Ub1ZpZGVvRGV0YWlsKHsgaWQgfSkgewogICAgICBjb25zb2xlLmxvZyhpZCk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAidmlkZW9EZXRhaWwiLAogICAgICAgIHBhcmFtczogeyBpZCwgdHlwZTogInZpZGVvIiB9LAogICAgICB9KTsKICAgIH0sCiAgICAvLyDkuIrmi4nop6blupXnmoTlm57osIMKICAgIGJvdHRvbUxvYWQoKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKCJnb1RvVmlkZW9EZXRhaWwiKTsKICAgICAgaWYgKHRoaXMuaGFzTW9yZSkgewogICAgICAgIHRoaXMuZ2V0VmlkZW9MaXN0KHRoaXMuY3VycmVudFRhZy5pZCk7CiAgICAgIH0KICAgIH0sCgogICAgLy8g54K55Ye7c29ydEJveEl0ZW3nmoTliIbnsbtpdGVt55qE5Zue6LCDCiAgICBjbGlja1NvcnRCb3hJdGVtKGl0ZW0pIHsKICAgICAgdGhpcy5jdXJyZW50VGFnID0gaXRlbTsKICAgICAgdGhpcy52aWRlb1BhZ2UgPSAxOwogICAgICB0aGlzLnZpZGVvTGlzdCA9IFtdOwogICAgICB0aGlzLmdldFZpZGVvTGlzdChpdGVtLmlkKTsKICAgIH0sCiAgfSwKICBhc3luYyBjcmVhdGVkKCkgewogICAgYXdhaXQgdGhpcy5nZXRWaWRlb0NhdGVnb3J5KCk7CiAgICBhd2FpdCB0aGlzLmdldFZpZGVvTGlzdCh0aGlzLmN1cnJlbnRUYWcuaWQpOwogIH0sCn07Cg=="},{"version":3,"sources":["VideoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VideoList.vue","sourceRoot":"src/views/video/videoChildren","sourcesContent":["<template>\n  <div class=\"videoList\">\n    <!-- 类名可能不太对应文件，因为html和样式都是直接搬MusicListIndex里面的 -->\n    <!-- 视频列表 -->\n    <!-- 视频navbar -->\n    <div class=\"musicListNavBar\" v-if=\"videoCategory.length != 0\">\n      <div class=\"left\">\n        <sort-box\n          :currentTag=\"currentTag\"\n          :sortList=\"sortList\"\n          @getSortList=\"getSortList\"\n          @clickSortBoxItem=\"clickSortBoxItem\"\n        ></sort-box>\n      </div>\n      <div class=\"right\">\n        <second-nav-bar\n          :SecondNavBarData=\"videoCategory\"\n          :itemWidth=\"0\"\n          :currentTag=\"currentTag\"\n          @clickSecondBarItem=\"clickSecondBarItem\"\n        ></second-nav-bar>\n      </div>\n    </div>\n    <!-- 视频卡片列表 -->\n    <video-list-card\n      :videoList=\"videoList\"\n      :isLoad=\"true\"\n      :videoType=\"'video'\"\n      class=\"cardList\"\n      @clickListCardItem=\"goToVideoDetail\"\n      @bottomLoad=\"bottomLoad\"\n    >\n    </video-list-card>\n    <go-top scrollObj=\".cardList\"></go-top>\n  </div>\n</template>\n\n<script>\nimport SecondNavBar from \"components/secondNavBar/SecondNavBar.vue\";\nimport VideoListCard from \"components/videoListCard/VideoListCard.vue\";\nimport GoTop from \"components/goTop/GoTop.vue\";\nimport SortBox from \"components/sortBox/SortBox.vue\";\nexport default {\n  components: { SecondNavBar, VideoListCard, GoTop, SortBox },\n  name: \"VideoList\",\n  data() {\n    return {\n      // 视频分类\n      videoCategory: [],\n      // 当前标签\n      currentTag: {},\n      // 当前视频页数\n      videoPage: 1,\n      // 是否还有更多视频数据\n      hasMore: true,\n      // 视频列表数据\n      videoList: [],\n      // 视频分类tag列表\n      sortList: [],\n    };\n  },\n  methods: {\n    // 请求\n    // 请求视频分类\n    async getVideoCategory() {\n      let res = await this.$request(\"/video/category/list\");\n      this.videoCategory = res.data.data;\n      this.currentTag = res.data.data[0];\n      // console.log(this.videoCategory);\n    },\n    //获取分类下的视频\n    // 这个接口一次只能获取8条数据, 所以我每次请求循环2次这个请求 拿16条数据\n    // 因为是每次8条数据push进去的 push了前 8条时因为高度不够，触发了组件video-list-card的触底，\n    // 又调用了一次请求，所以第一次请求会请求32条数据，后面高度够了都是一次请求16条，我觉得挺好的，就不理这个bug了\n    async getVideoList(id) {\n      let i = 2;\n      while (i) {\n        if (this.hasMore) {\n          let res = await this.$request(\"/video/group\", {\n            id,\n            offset: 8 * (this.videoPage - 1),\n          });\n          this.hasMore = res.data.hasmore;\n          this.videoList.push(...res.data.datas);\n          this.videoPage += 1;\n          i--;\n        } else {\n          return;\n        }\n      }\n      // console.log(this.videoList);\n    },\n\n    // 获取视频分类tag\n    async getSortList() {\n      let res = await this.$request(\"/video/group/list\");\n      // console.log(res);\n      // console.log(res.data.data);\n      this.sortList = res.data.data;\n    },\n\n    // 事件\n    // 点击分类的回调\n    clickSecondBarItem(index) {\n      // console.log(\"clickSecondBarItem\");\n      this.videoPage = 1;\n      this.videoList = [];\n      this.currentTag = this.videoCategory[index];\n      this.getVideoList(this.currentTag.id);\n    },\n    // 进入视频详情页面\n    goToVideoDetail({ id }) {\n      console.log(id);\n      this.$router.push({\n        name: \"videoDetail\",\n        params: { id, type: \"video\" },\n      });\n    },\n    // 上拉触底的回调\n    bottomLoad() {\n      // console.log(\"goToVideoDetail\");\n      if (this.hasMore) {\n        this.getVideoList(this.currentTag.id);\n      }\n    },\n\n    // 点击sortBoxItem的分类item的回调\n    clickSortBoxItem(item) {\n      this.currentTag = item;\n      this.videoPage = 1;\n      this.videoList = [];\n      this.getVideoList(item.id);\n    },\n  },\n  async created() {\n    await this.getVideoCategory();\n    await this.getVideoList(this.currentTag.id);\n  },\n};\n</script>\n\n<style scoped>\n.musicListNavBar {\n  padding: 10px 25px;\n  display: flex;\n  justify-content: space-between;\n  font-size: 12px;\n}\n\n.page {\n  width: 100%;\n  text-align: center;\n  padding-bottom: 20px;\n}\n\n.cardList {\n  overflow-y: scroll;\n  /* height: calc(100vh - 215px); */\n  height: calc(80vh - 215px);\n}\n</style>"]}]}