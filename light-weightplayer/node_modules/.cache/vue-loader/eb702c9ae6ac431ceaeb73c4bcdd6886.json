{"remainingRequest":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue_cloud_music-master\\light-webplayer\\src\\views\\musicDetailCard\\MusicDetailCard.vue?vue&type=style&index=0&id=142cf433&scoped=true&lang=less&","dependencies":[{"path":"D:\\vue_cloud_music-master\\light-webplayer\\src\\views\\musicDetailCard\\MusicDetailCard.vue","mtime":1632135031000},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636408356404},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1636408358142},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\postcss-loader\\src\\index.js","mtime":1636408357193},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\less-loader\\dist\\cjs.js","mtime":1636408356927},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\vue-loader\\lib\\index.js","mtime":1636408357599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmdsYXNzQ2FyZCB7CiAgLy8g54Gr54uQ6buY6K6k5LiN5pSv5oyBYmFja2Ryb3AtZmlsdGVyIOWPr+S7peaJi+WKqOa/gOa0u++8jOi/memHjOS4jeaKmOiFvuS6hu+8jOeBq+eLkOWFs+mXreeOu+eSg+iDjOaZr+WKn+iDve+8jOWPjeato+i/meS4quWKn+iDveeJueWIq+WQg+aAp+iDve+8jOWtl+S9k+S5n+eci+S4jea4heS6hu+8jOayoeW/heimgQogIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1MHB4KSBicmlnaHRuZXNzKDk1JSkgIWltcG9ydGFudDsKICBiYWNrZ3JvdW5kLWNvbG9yOiB1bnNldCAhaW1wb3J0YW50OwogIGJhY2tncm91bmQtaW1hZ2U6IHVuc2V0ICFpbXBvcnRhbnQ7CiAgKiB7CiAgICBjb2xvcjogcmdiKDM3LCAzNywgMzcpOwoKICAgIC5jb21tZW50Q29tcG9uZW50IC9kZWVwLyAqIHsKICAgICAgY29sb3I6IHJnYigzNywgMzcsIDM3KTsKICAgICAgYm9yZGVyLWNvbG9yOiByZ2IoMTQzLCAxNDMsIDE0Myk7CgogICAgICAucmVwbGllZCB7CiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTsKICAgICAgfQogICAgfQogIH0KfQoKLm11c2ljRGV0YWlsQ2FyZCB7CiAgcG9zaXRpb246IGZpeGVkOwogIHdpZHRoOiAxMDAlOwogIC8vIGhlaWdodDogY2FsYygxMDB2aCAtIDU1cHgpOwogIGhlaWdodDogY2FsYyg4MHZoIC0gNTVweCk7CiAgYm90dG9tOiA1NXB4OwogIGxlZnQ6IDA7CiAgei1pbmRleDogMTAwMDsKICB0cmFuc2l0aW9uOiBib3R0b20gMC41cyBlYXNlOwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICNlM2UyZTMsIHdoaXRlKTsKfQoKLmNsb3NlQ2FyZCAuaWNvbmZvbnQgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDE1cHg7CiAgbGVmdDogMzVweDsKICBmb250LXNpemU6IDIxcHggIWltcG9ydGFudDsKfQoKLm11c2ljRGV0YWlsQ2FyZENvbnRhaW5lciB7CiAgaGVpZ2h0OiAxMDAlOwogIG92ZXJmbG93LXk6IHNjcm9sbDsKfQoKLmhpZGUgewogIC8vIGJvdHRvbTogY2FsYygtMTAwdmggKyA1NXB4KTsKICBib3R0b206IGNhbGMoLTgwdmggKyA1NXB4KTsKICAvLyB0cmFuc2Zvcm3kuI3kvJrlvJXlj5Hph43mtYEg5oCn6IO95pu05aW9IOS9huaYr+i/memHjOWmguaenOS9v+eUqHRyYW5zZm9ybSDlnKhyZXNpemXml7bkvJrlh7rnjrBtdXNpY0RldGFpbENhcmTmi5blvbHnmoTmg4XlhrXvvIzmmK90cmFuc2l0aW9u5byV5Y+R55qE77yMCiAgLy8g5Y+v6IO95Y+v5Lul6YCa6L+HYW5pbWF0aW9u5Luj5pu/dHJhbnN0aW9u6Kej5Yaz77yM5LiN5aSq56Gu5a6a77yM5rKh5pyJ5bCd6K+V6L+H77yM5L2G5piv5L2/55SodHJhbnNmb3Jt6L+Y6ZyA5Y+m5aSW56aB5q2iaW5kZXjpobXpnaLmu5rliqjvvIwKICAvLyDmiYDku6XmiJHov5nph4zov5jmmK/pgInmi6nkvb/nlKjlm7rlrprlrprkvY0g5oCn6IO956iN5beu77yM5L2G5piv55Sx5LqO6ISx56a755qE5paH5qGj5rWB77yM5Lmf5LiN5Lya5beu5b6I6L+cCiAgLy8gdHJhbnNmb3JtOiB0cmFuc2xhdGVZKGNhbGMoODB2aCAtIDU1cHgpKTsKfQoKLnRvcCB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQoKLmxlZnQgewogIHdpZHRoOiAyMjBweDsKICBtYXJnaW46IDAgMzBweCAwIC00MHB4Owp9CgouZGlzY0NvbnRhaW5lciB7CiAgbWFyZ2luLXRvcDogNjBweDsKICB3aWR0aDogMjIwcHg7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgoubmVlZGxlIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgbGVmdDogNTAlOwogIHdpZHRoOiA4OHB4OwogIGhlaWdodDogNzJweDsKICB6LWluZGV4OiAxMDAwMDsKICB0cmFuc2l0aW9uOiBhbGwgMXM7CiAgdHJhbnNmb3JtLW9yaWdpbjogNS4zcHggNS4zcHg7Cn0KCi5uZWVkbGUgaW1nIHsKICB3aWR0aDogMTAwJTsKfQoKLm5lZWRsZVJvdGF0ZSB7CiAgdHJhbnNmb3JtLW9yaWdpbjogNS4zcHggNS4zcHg7CiAgdHJhbnNmb3JtOiByb3RhdGUoMjJkZWcpOwp9CgouZGlzYyB7CiAgd2lkdGg6IDIyMHB4OwogIGhlaWdodDogMjIwcHg7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogLTEycHg7Cn0KCi5kaXNjIGltZzpudGgtY2hpbGQoMSkgewogIHdpZHRoOiAxMDAlOwp9CgouZGlzYyAubXVzaWNBdmF0YXIgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDM1cHg7CiAgbGVmdDogMzVweDsKICB3aWR0aDogMTUwcHg7CiAgei1pbmRleDogLTE7Cn0KCi8qIOein+WtkOiuvue9ruaXi+i9rOWKqOeUuyAqLwouZGlzY0FuaW1hdGlvbiB7CiAgLyogaW5maW5pdGXliqjnlLvml6DpmZDlvqrnjq8gKi8KICBhbmltYXRpb246IGRpc2MgMjVzIGxpbmVhciBpbmZpbml0ZTsKICAvKiDliqjnlLvlu7bov5/kuIDnp5IgKi8KICBhbmltYXRpb24tZGVsYXk6IDAuOHM7Cn0KCkBrZXlmcmFtZXMgZGlzYyB7CiAgZnJvbSB7CiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsKICB9CiAgdG8gewogICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsKICB9Cn0KCi5wYXVzZSB7CiAgYW5pbWF0aW9uLXBsYXktc3RhdGU6IHBhdXNlZDsKICAtd2Via2l0LWFuaW1hdGlvbi1wbGF5LXN0YXRlOiBwYXVzZWQ7Cn0KCi5yaWdodCB7CiAgd2lkdGg6IDM1MHB4Owp9CgoudGl0bGUgewogIHdpZHRoOiAxMDAlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBmb250LXNpemU6IDEycHg7CiAgbWFyZ2luOiAzMHB4IDAgMTVweDsKICBjb2xvcjogcmdiKDE0NSwgMTQ1LCAxNDUpOwp9CgoudGl0bGUgZGl2IHsKICBtYXJnaW46IDdweCAwOwp9CgoubXVzaWNOYW1lIHsKICBmb250LXNpemU6IDIzcHg7CiAgY29sb3I6IHJnYigyMiwgMjIsIDIyKTsKfQoKLmJvdHRvbSB7CiAgbWFyZ2luOiA0MHB4IGF1dG87CiAgLy8gd2lkdGg6IDU1dnc7CiAgd2lkdGg6IDQ0dnc7Cn0KCi5wYWdlIHsKICB3aWR0aDogMTAwJTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcGFkZGluZy1ib3R0b206IDIwcHg7Cn0KCi50aXAgewogIGZvbnQtc2l6ZTogMjBweDsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbGVmdDogNTAlOwogIHRvcDogNTAlOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwp9CgouY2hhbmdlQmFja2dyb3VuZCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJvdHRvbTogMTBweDsKICByaWdodDogMjBweDsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5ib3R0b20gL2RlZXAvIC5lbC1sb2FkaW5nLXNwaW5uZXIgewogIHRvcDogNDBweDsKfQoKLmFsYnVtLAouc2luZ2VyIHsKICBjdXJzb3I6IHBvaW50ZXI7Cn0K"},{"version":3,"sources":["MusicDetailCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+SA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"MusicDetailCard.vue","sourceRoot":"src/views/musicDetailCard","sourcesContent":["<template>\n  <div\n    class=\"musicDetailCard\"\n    :class=\"[\n      isMusicDetailCardShow ? '' : 'hide',\n      backgroundMode ? '' : 'glassCard',\n    ]\"\n  >\n    <div class=\"closeCard\" @click=\"closeCard\">\n      <i class=\"iconfont icon-arrow-down-bold\"></i>\n    </div>\n    <div class=\"changeBackground\" @click=\"changeBackground\">\n      <i class=\"iconfont icon-UniSetBackgroundTextStyle\"></i>\n    </div>\n    <div class=\"musicDetailCardContainer\" v-if=\"!cleanCard && musicInfo.name\">\n      <div class=\"top\">\n        <div class=\"left\">\n          <div class=\"discContainer\">\n            <div\n              class=\"needle\"\n              :class=\"$store.state.isPlay ? 'needleRotate' : ''\"\n              ref=\"needle\"\n            >\n              <img src=\"~assets/img/MusicDetailCard/needle.png\" alt=\"\" />\n            </div>\n            <!-- 通过音乐的加载时差删除discAnimation类名再添加,达到重置动画的效果 -->\n            <div\n              class=\"disc\"\n              :class=\"[\n                $store.state.isPlay ? '' : 'pause',\n                $store.state.isMusicLoad ? '' : 'discAnimation',\n              ]\"\n              ref=\"disc\"\n            >\n              <img src=\"~assets/img/MusicDetailCard/disc.png\" alt=\"\" />\n              <img\n                src=\"~assets/img/test.jpg\"\n                alt=\"\"\n                class=\"musicAvatar\"\n                v-if=\"!musicInfo.al\"\n              />\n              <img\n                :src=\"musicInfo.al.picUrl\"\n                alt=\"\"\n                class=\"musicAvatar\"\n                v-else\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"right\">\n          <div class=\"title\">\n            <div class=\"musicName\">{{ musicInfo.name }}</div>\n            <div\n              class=\"album\"\n              @click=\"goToDetailPage('album', musicInfo.al.id)\"\n            >\n              {{ musicInfo.al.name }}\n            </div>\n            <div\n              class=\"singer\"\n              @click=\"goToDetailPage('singerDetail', musicInfo.ar[0].id)\"\n            >\n              {{ musicInfo.ar[0].name }}\n            </div>\n          </div>\n          <lyrics-scroll :lyric=\"lyric\"></lyrics-scroll>\n        </div>\n      </div>\n      <div\n        class=\"bottom\"\n        v-loading=\"isCommentLoading\"\n        element-loading-background=\"rgba(255, 255, 255, 0.1)\"\n      >\n        <comment\n          :comments=\"hotComments\"\n          :commentType=\"'music'\"\n          :commentId=\"$store.state.musicId + ''\"\n          :musicTitle=\"musicInfo.name\"\n          @getComment=\"getMusicComment($store.state.musicId)\"\n          class=\"commentComponent\"\n          v-if=\"currentCommentPage == 1\"\n          ><div slot=\"title\">热门评论</div></comment\n        >\n        <comment\n          :comments=\"comment.comments\"\n          :commentType=\"'music'\"\n          :commentId=\"$store.state.musicId + ''\"\n          :musicTitle=\"musicInfo.name\"\n          @getComment=\"getMusicComment($store.state.musicId)\"\n          class=\"commentComponent\"\n          ><div slot=\"title\">最新评论({{ comment.total }})</div></comment\n        >\n        <!-- 评论分页 -->\n        <div class=\"page\" v-show=\"comment.comments && comment.comments[0]\">\n          <el-pagination\n            background\n            layout=\"prev, pager, next\"\n            :total=\"comment.total\"\n            small\n            :page-size=\"20\"\n            :current-page=\"currentCommentPage\"\n            @current-change=\"commentPageChange\"\n          >\n          </el-pagination>\n        </div>\n      </div>\n      <go-top scrollObj=\".musicDetailCardContainer\"></go-top>\n    </div>\n    <div v-else class=\"tip\">暂无播放音乐</div>\n  </div>\n</template>\n\n<script>\nimport Comment from \"components/comment/Comment.vue\";\nimport LyricsScroll from \"components/lyricsScroll/LyricsScroll.vue\";\nimport GoTop from \"components/goTop/GoTop.vue\";\n\n// 定时器名称\nlet timer;\n\nexport default {\n  components: { LyricsScroll, Comment, GoTop },\n  name: \"MusicDetailCard\",\n  data() {\n    return {\n      // 是否显示歌曲详情卡片\n      isMusicDetailCardShow: false,\n      //   歌词\n      lyric: [[0, \"正在加载歌词\"]],\n      //当前评论页数\n      currentCommentPage: 1,\n      // 评论数据\n      comment: {},\n      //   当前歌曲信息\n      musicInfo: {},\n      // 是否删除卡片渲染的内容\n      cleanCard: true,\n      // 背景显示模式  true为白色渐变背景  false为毛玻璃背景\n      backgroundMode: true,\n      // 评论是否在加载中\n      isCommentLoading: false,\n      // 热门评论\n      hotComments: [],\n    };\n  },\n  watch: {\n    \"$store.state.isMusicDetailCardShow\"(isMusicDetailCardShow) {\n      this.isMusicDetailCardShow = isMusicDetailCardShow;\n      //   性能优化\n      //如果卡片没有展示就不发送请求和渲染里面的内容\n      //   删除定时器 避免用户在关闭卡片的1s内又打开卡片 导致展示内容被删除\n      clearTimeout(timer);\n      this.cleanCard = false;\n      if (\n        isMusicDetailCardShow &&\n        !this.comment.comments &&\n        this.$store.state.musicId != \"\"\n      ) {\n        console.log(\"请求歌词和评论\");\n        this.getLyric(this.$store.state.musicId);\n        this.getMusicComment(this.$store.state.musicId);\n      }\n      //   当卡片关闭时 延迟 3s再删除里面渲染的内容 提升体验\n      else if (isMusicDetailCardShow == false) {\n        timer = setTimeout(() => {\n          this.cleanCard = true;\n        }, 3000);\n      }\n    },\n    // 当vuex中的歌曲id发生变化时,需要重新获取评论和歌词\n    \"$store.state.musicId\"(musicId) {\n      // 清空歌词\n      this.lyric = [[0, \"正在加载歌词\"]];\n      // 重置评论页数\n      this.currentCommentPage = 1;\n      // 更新当前歌曲信息\n      this.musicInfo =\n        this.$store.state.musicList[this.$store.state.currentIndex];\n      this.comment = {};\n      // 优化性能,仅在卡片展示时才发送请求\n      if (this.isMusicDetailCardShow) {\n        this.getLyric(musicId);\n        this.getMusicComment(musicId);\n      }\n      //   console.log(this.musicInfo);\n      //   console.log(this.$refs.disc);\n    },\n  },\n  methods: {\n    // 请求\n    //请求并处理歌词数据\n    async getLyric(id) {\n      let res = await this.$request(\"/lyric\", { id });\n      //   console.log(res);\n      let lyrics = res.data.lrc.lyric;\n      // 对获取到的歌词进行处理\n      let arr = lyrics.split(\"\\n\");\n      let array = [];\n      // let obj = {};\n      let time = \"\";\n      let value = \"\";\n      let result = [];\n\n      //去除空行\n      arr.forEach((item) => {\n        if (item != \"\") {\n          array.push(item);\n        }\n      });\n      arr = array;\n      arr.forEach((item) => {\n        time = item.split(\"]\")[0];\n        value = item.split(\"]\")[1];\n        //去掉时间里的中括号得到xx:xx.xx\n        var t = time.slice(1).split(\":\");\n        //将结果压入最终数组\n        result.push([parseInt(t[0], 10) * 60 + parseFloat(t[1]), value]);\n      });\n\n      this.lyric = result;\n      // console.log(this.lyric);\n    },\n    // 请求评论数据\n    async getMusicComment(id, type) {\n      // 获取时间戳\n      var timestamp = Date.parse(new Date());\n\n      this.isCommentLoading = true;\n      if (type == \"changePage\") {\n        let musicDetailCardContainer = document.querySelector(\n          \".musicDetailCardContainer\"\n        );\n        let top = document.querySelector(\".top\");\n        // console.log([musicDetailCardContainer, top]);\n        musicDetailCardContainer.scrollTo({\n          behavior: \"smooth\",\n          top: top.clientHeight,\n        });\n      }\n\n      // 当页数为第一页时，请求10条热门数据\n      if (this.currentCommentPage == 1) {\n        let res = await this.$request(\"/comment/hot\", {\n          id,\n          limit: 10,\n          type: 0,\n          timestamp,\n        });\n        console.log(res);\n        if (res.data.code != 200) {\n          this.$message.error(\"获取热门评论失败,请稍后重试!\");\n          return;\n        }\n        this.hotComments = res.data.hotComments;\n      }\n\n      let res = await this.$request(\"/comment/music\", {\n        id,\n        offset: (this.currentCommentPage - 1) * 20,\n        timestamp,\n      });\n\n      console.log(res);\n      if (res.data.code !== 200) {\n        this.$message.error(\"获取评论失败,请稍后重试!\");\n      }\n\n      this.isCommentLoading = false;\n      this.comment = res.data;\n    },\n    //点击分页按钮的回调\n    commentPageChange(page) {\n      this.currentCommentPage = page;\n      this.getMusicComment(this.$store.state.musicId, \"changePage\");\n    },\n    // 点击关闭卡片的回调\n    closeCard() {\n      this.$store.commit(\"changeMusicDetailCardState\");\n    },\n    // 点击切换背景的回调\n    changeBackground() {\n      if (navigator.userAgent.indexOf(\"Firefox\") != -1) {\n        // console.log(\"ff\");\n        this.$message.info(\n          \"火狐暂不支持玻璃背景功能，请使用Chrome或Edge浏览器\"\n        );\n        return;\n      }\n      this.backgroundMode = !this.backgroundMode;\n    },\n\n    // 点击跳转至对应的详情页面\n    goToDetailPage(name, id) {\n      this.$router.push({ name, params: { id } });\n      this.$store.commit(\"changeMusicDetailCardState\", false);\n    },\n  },\n  created() {},\n};\n</script>\n\n<style scoped lang=\"less\">\n.glassCard {\n  // 火狐默认不支持backdrop-filter 可以手动激活，这里不折腾了，火狐关闭玻璃背景功能，反正这个功能特别吃性能，字体也看不清了，没必要\n  backdrop-filter: blur(50px) brightness(95%) !important;\n  background-color: unset !important;\n  background-image: unset !important;\n  * {\n    color: rgb(37, 37, 37);\n\n    .commentComponent /deep/ * {\n      color: rgb(37, 37, 37);\n      border-color: rgb(143, 143, 143);\n\n      .replied {\n        border-radius: 5px;\n        background-color: rgba(0, 0, 0, 0.1);\n      }\n    }\n  }\n}\n\n.musicDetailCard {\n  position: fixed;\n  width: 100%;\n  // height: calc(100vh - 55px);\n  height: calc(80vh - 55px);\n  bottom: 55px;\n  left: 0;\n  z-index: 1000;\n  transition: bottom 0.5s ease;\n  background-color: white;\n  background-image: linear-gradient(to bottom, #e3e2e3, white);\n}\n\n.closeCard .iconfont {\n  position: absolute;\n  top: 15px;\n  left: 35px;\n  font-size: 21px !important;\n}\n\n.musicDetailCardContainer {\n  height: 100%;\n  overflow-y: scroll;\n}\n\n.hide {\n  // bottom: calc(-100vh + 55px);\n  bottom: calc(-80vh + 55px);\n  // transform不会引发重流 性能更好 但是这里如果使用transform 在resize时会出现musicDetailCard拖影的情况，是transition引发的，\n  // 可能可以通过animation代替transtion解决，不太确定，没有尝试过，但是使用transform还需另外禁止index页面滚动，\n  // 所以我这里还是选择使用固定定位 性能稍差，但是由于脱离的文档流，也不会差很远\n  // transform: translateY(calc(80vh - 55px));\n}\n\n.top {\n  display: flex;\n  justify-content: center;\n}\n\n.left {\n  width: 220px;\n  margin: 0 30px 0 -40px;\n}\n\n.discContainer {\n  margin-top: 60px;\n  width: 220px;\n  position: relative;\n}\n\n.needle {\n  position: relative;\n  left: 50%;\n  width: 88px;\n  height: 72px;\n  z-index: 10000;\n  transition: all 1s;\n  transform-origin: 5.3px 5.3px;\n}\n\n.needle img {\n  width: 100%;\n}\n\n.needleRotate {\n  transform-origin: 5.3px 5.3px;\n  transform: rotate(22deg);\n}\n\n.disc {\n  width: 220px;\n  height: 220px;\n  position: relative;\n  top: -12px;\n}\n\n.disc img:nth-child(1) {\n  width: 100%;\n}\n\n.disc .musicAvatar {\n  position: absolute;\n  top: 35px;\n  left: 35px;\n  width: 150px;\n  z-index: -1;\n}\n\n/* 碟子设置旋转动画 */\n.discAnimation {\n  /* infinite动画无限循环 */\n  animation: disc 25s linear infinite;\n  /* 动画延迟一秒 */\n  animation-delay: 0.8s;\n}\n\n@keyframes disc {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.pause {\n  animation-play-state: paused;\n  -webkit-animation-play-state: paused;\n}\n\n.right {\n  width: 350px;\n}\n\n.title {\n  width: 100%;\n  text-align: center;\n  font-size: 12px;\n  margin: 30px 0 15px;\n  color: rgb(145, 145, 145);\n}\n\n.title div {\n  margin: 7px 0;\n}\n\n.musicName {\n  font-size: 23px;\n  color: rgb(22, 22, 22);\n}\n\n.bottom {\n  margin: 40px auto;\n  // width: 55vw;\n  width: 44vw;\n}\n\n.page {\n  width: 100%;\n  text-align: center;\n  padding-bottom: 20px;\n}\n\n.tip {\n  font-size: 20px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.changeBackground {\n  position: absolute;\n  bottom: 10px;\n  right: 20px;\n  cursor: pointer;\n}\n\n.bottom /deep/ .el-loading-spinner {\n  top: 40px;\n}\n\n.album,\n.singer {\n  cursor: pointer;\n}\n</style>\n"]}]}