{"remainingRequest":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\light-weightPlayer\\light-weightplayer\\src\\views\\musicListDetail\\MusicListDetail.vue?vue&type=style&index=0&id=589ec94f&scoped=true&lang=css&","dependencies":[{"path":"D:\\light-weightPlayer\\light-weightplayer\\src\\views\\musicListDetail\\MusicListDetail.vue","mtime":1632135031000},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636408356404},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1636408358142},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\postcss-loader\\src\\index.js","mtime":1636408357193},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\vue-loader\\lib\\index.js","mtime":1636408357599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tdXNpY0xpc3REZXRhaWwgewogIG92ZXJmbG93LXk6IHNjcm9sbDsKfQoKLmxpc3RJbmZvIHsKICBkaXNwbGF5OiBmbGV4OwogIHBhZGRpbmc6IDI1cHggMTVweDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgoubGlzdEF2YXRhciB7CiAgd2lkdGg6IDE1MHB4OwogIGhlaWdodDogMTUwcHg7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICBib3JkZXItcmFkaXVzOiAxMHB4OwogIG1hcmdpbi1yaWdodDogMTVweDsKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KCi5saXN0QXZhdGFyOjphZnRlciB7CiAgY29udGVudDogIiI7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGhlaWdodDogMTAwJTsKICB3aWR0aDogMTAwJTsKICBsZWZ0OiAwOwogIHRvcDogMDsKICBiYWNrZ3JvdW5kOiB1cmwoIn5hc3NldHMvaW1nL2ltZ0xvYWRpbmcucG5nIikgbm8tcmVwZWF0OwogIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjsKICB6LWluZGV4OiAtMTsKfQoKLmxpc3RBdmF0YXIgaW1nIHsKICB3aWR0aDogMTAwJTsKfQoKLnJpZ2h0IHsKICB3aWR0aDogY2FsYygxMDAlIC0gMjAwcHgpOwp9CgoudGl0bGUgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLnRpdGxlVGFnIHsKICBmb250LXNpemU6IDEycHg7CiAgY29sb3I6ICNlYzQxNDE7CiAgYm9yZGVyOiAxcHggc29saWQgI2VjNDE0MTsKICBwYWRkaW5nOiAxcHggMnB4OwogIGJvcmRlci1yYWRpdXM6IDJweDsKICBtYXJnaW4tcmlnaHQ6IDVweDsKICB0cmFuc2Zvcm06IHNjYWxlKDAuOCk7Cn0KCi50aXRsZUNvbnRlbnQgewogIGZvbnQtc2l6ZTogMjBweDsKICBmb250LXdlaWdodDogNjAwOwogIGNvbG9yOiAjMzczNzM3OwogIG92ZXJmbG93OiBoaWRkZW47CiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICB3aWR0aDogOTAlOwp9CgoudXNlciB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIG1hcmdpbi10b3A6IDhweDsKICBmb250LXNpemU6IDEycHg7Cn0KCi51c2VyQXZhdGFyIHsKICBoZWlnaHQ6IDI1cHg7CiAgd2lkdGg6IDI1cHg7CiAgbWFyZ2luLXJpZ2h0OiA4cHg7Cn0KCi51c2VyQXZhdGFyIGltZyB7CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyLXJhZGl1czogNTAlOwp9CgoudXNlck5hbWUgewogIGNvbG9yOiAjNjE5MWMyOwogIG1hcmdpbi1yaWdodDogOHB4OwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLmNyZWF0ZVRpbWUgewogIHRyYW5zZm9ybTogc2NhbGUoMC45KTsKfQoKLmJ1dHRvbnMgewogIG1hcmdpbjogOHB4IDAgMCAtNXB4OwogIGRpc3BsYXk6IGZsZXg7Cn0KCi5idXR0b25JdGVtIHsKICBmb250LXNpemU6IDEycHg7CiAgcGFkZGluZzogOHB4IDE1cHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICBib3JkZXItcmFkaXVzOiAyMHB4OwogIHRyYW5zZm9ybTogc2NhbGUoMC45KTsKfQoKLmJ1dHRvbkl0ZW0gaSB7CiAgZm9udC1zaXplOiAxMnB4OwogIG1hcmdpbi1yaWdodDogM3B4OwogIHRyYW5zZm9ybTogc2NhbGUoMC45KTsKfQoKLnBsYXlBbGwgewogIGJhY2tncm91bmQtY29sb3I6ICNlYzQxNDE7CiAgY29sb3I6IHdoaXRlOwp9CgoudGFncyB7CiAgbWFyZ2luOiA4cHggMCAwIC0zMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZm9udC1zaXplOiAxMnB4OwogIHRyYW5zZm9ybTogc2NhbGUoMC45KTsKfQoKLnRhZ0l0ZW0gewogIGNvbG9yOiAjNjE5MWMyOwogIG1hcmdpbi1yaWdodDogNXB4Owp9Cgoub3RoZXJJbmZvIHsKICBtYXJnaW46IDVweCAwIDAgLTMwcHg7CiAgZGlzcGxheTogZmxleDsKICBmb250LXNpemU6IDEycHg7CiAgdHJhbnNmb3JtOiBzY2FsZSgwLjkpOwp9CgoubXVzaWNOdW0gewogIG1hcmdpbi1yaWdodDogMTNweDsKfQoKLmRlc2MgewogIG1hcmdpbjogNXB4IDAgMCAtMzBweDsKICBmb250LXNpemU6IDEycHg7CiAgdHJhbnNmb3JtOiBzY2FsZSgwLjkpOwogIG92ZXJmbG93OiBoaWRkZW47CiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKfQoKLm11c2ljTGlzdCB7CiAgbWFyZ2luOiAtMTVweCAxNXB4IDA7Cn0KCi5wYWdlIHsKICB3aWR0aDogMTAwJTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcGFkZGluZy1ib3R0b206IDIwcHg7Cn0KCi5wbGFjZWhvbGRlciB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiA1MHB4Owp9CgoubG9hZE1vcmUgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogNTBweDsKICBmb250LXNpemU6IDEycHg7CiAgY29sb3I6ICNhYWE7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGxpbmUtaGVpZ2h0OiA1MHB4OwogIHRyYW5zZm9ybTogc2NhbGUoMC45KTsKfQoKLnJlZCB7CiAgY29sb3I6ICNlYzQxNDE7Cn0KCi5jb21tZW50TGlzdCAvZGVlcC8gLmVsLWxvYWRpbmctc3Bpbm5lciB7CiAgdG9wOiA0MHB4Owp9CgoudGlwcyB7CiAgZm9udC1zaXplOiAxNHB4OwogIG1hcmdpbjogMzBweCAwOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQo="},{"version":3,"sources":["MusicListDetail.vue"],"names":[],"mappingswmfile":"MusicListDetail.vue","sourceRoot":"src/views/musicListDetail","sourcesContent":["<template>\n  <div class=\"musicListDetail\" v-if=\"musicListDetail\">\n    <!-- 歌单信息 -->\n    <div class=\"listInfo\">\n      <!-- 歌单封面 -->\n      <div class=\"listAvatar\">\n        <img :src=\"musicListDetail.coverImgUrl\" alt=\"\" />\n      </div>\n      <div class=\"right\">\n        <!-- 标题 -->\n        <div class=\"title\">\n          <div class=\"titleTag\">歌单</div>\n          <div class=\"titleContent\">{{ musicListDetail.name }}</div>\n        </div>\n        <!-- 用户信息 -->\n        <div class=\"user\">\n          <div class=\"userAvatar\">\n            <img :src=\"musicListDetail.creator.avatarUrl\" alt=\"\" />\n          </div>\n          <div\n            class=\"userName\"\n            @click=\"\n              $router.push({\n                name: 'personal',\n                params: { uid: musicListDetail.creator.userId },\n              })\n            \"\n          >\n            {{ musicListDetail.creator.nickname }}\n          </div>\n          <div class=\"createTime\">\n            {{ musicListDetail.createTime | showDate }}创建\n          </div>\n        </div>\n        <!-- 操作按钮 -->\n        <div class=\"buttons\">\n          <div class=\"buttonItem playAll\" @click=\"playAll\">\n            <i class=\"iconfont icon-bofang playAll\"></i>\n            <span>播放全部</span>\n          </div>\n          <div class=\"buttonItem\" v-if=\"!isCreated\" @click=\"collectList\">\n            <i class=\"iconfont icon-xihuan\" :class=\"isSub ? 'red' : ''\"></i>\n            <span>{{ isSub ? \"已收藏\" : \"收藏\" }}</span>\n          </div>\n          <div class=\"buttonItem\">\n            <i class=\"iconfont icon-zhuanfa\"></i>\n            <span>分享</span>\n          </div>\n        </div>\n        <!-- 标签 -->\n        <div class=\"tags\">\n          标签：\n          <div\n            class=\"tagItem\"\n            v-for=\"(item, index) in musicListDetail.tags\"\n            :key=\"index\"\n          >\n            {{ item }}\n          </div>\n          <div v-if=\"musicListDetail.tags.length == 0\">暂无标签</div>\n        </div>\n        <!-- 歌曲列表的歌曲数量和播放量 -->\n        <div class=\"otherInfo\">\n          <div class=\"musicNum\">\n            歌曲 : {{ musicListDetail.trackCount | handleNum }}\n          </div>\n          <div class=\"playCount\">\n            播放 : {{ musicListDetail.playCount | handleNum }}\n          </div>\n        </div>\n        <div class=\"desc\">\n          简介 :\n          {{\n            musicListDetail.description\n              ? musicListDetail.description\n              : \"暂无简介\"\n          }}\n        </div>\n      </div>\n    </div>\n    <!-- 歌曲列表 -->\n    <div class=\"musicList\">\n      <el-tabs value=\"first\" @tab-click=\"clickTab\">\n        <el-tab-pane label=\"歌曲列表\" name=\"first\">\n          <!-- 表格 -->\n          <el-table\n            :data=\"musicListDetail.tracks\"\n            size=\"mini\"\n            style=\"width: 100%\"\n            @row-dblclick=\"clickRow\"\n            @cell-click=\"clickCell\"\n            highlight-current-row\n            stripe\n            lazy\n            :row-key=\"\n              (row) => {\n                return row.id;\n              }\n            \"\n            v-infinite-scroll=\"this.$store.state.isLogin ? loadMore : ''\"\n            :infinite-scroll-disabled=\"scrollLoadDisabled\"\n            :infinite-scroll-distance=\"1500\"\n            :infinite-scroll-immediate=\"false\"\n          >\n            <el-table-column\n              label=\"\"\n              width=\"40\"\n              type=\"index\"\n              :index=\"handleIndex\"\n            >\n            </el-table-column>\n            <el-table-column label=\"\" width=\"23\">\n              <!-- 下载按钮 -->\n              <i class=\"iconfont icon-download\"></i>\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"音乐标题\" min-width=\"350\">\n            </el-table-column>\n            <el-table-column prop=\"ar[0].name\" label=\"歌手\" min-width=\"120\">\n            </el-table-column>\n            <el-table-column prop=\"al.name\" label=\"专辑\" min-width=\"170\">\n            </el-table-column>\n            <el-table-column prop=\"dt\" label=\"时长\" min-width=\"100\">\n            </el-table-column>\n            <!-- <el-table-column prop=\"id\"></el-table-column> -->\n          </el-table>\n          <div class=\"loadMore\" v-if=\"isMore && !this.$store.state.isLogin\">\n            登陆后查看更多音乐\n          </div>\n          <div class=\"placeholder\" v-else></div>\n          <!-- <div class=\"placeholder\"></div> -->\n        </el-tab-pane>\n        <el-tab-pane label=\"评论\" name=\"second\">\n          <div\n            class=\"commentList\"\n            v-if=\"comments.comments\"\n            v-loading=\"isCommentLoading\"\n          >\n            <!-- 精彩评论 -->\n            <comment\n              :commentType=\"'musicList'\"\n              :comments=\"comments.hotComments\"\n              :commentId=\"musicListDetail.id + ''\"\n              @getComment=\"getMusicListComment\"\n              @scrollToComment=\"scrollToComment\"\n              v-if=\"comments.hotComments\"\n              ref=\"hotComments\"\n              ><div slot=\"title\">精彩评论</div></comment\n            >\n            <!-- 最新评论 -->\n            <comment\n              :comments=\"comments.comments\"\n              :commentType=\"'musicList'\"\n              :commentId=\"musicListDetail.id + ''\"\n              :isHotComment=\"comments.hotComments ? false : true\"\n              @getComment=\"getMusicListComment\"\n              @scrollToComment=\"scrollToComment\"\n              @transToHotComment=\"\n                (info) =>\n                  $refs.hotComments.floorComment(info.commentId, info.nickName)\n              \"\n              ><div slot=\"title\">热门评论</div></comment\n            >\n          </div>\n          <!-- 分页 -->\n          <div\n            class=\"page\"\n            v-show=\"comments.comments && comments.comments.length != 0\"\n          >\n            <el-pagination\n              background\n              layout=\"prev, pager, next\"\n              :total=\"comments.total\"\n              small\n              :page-size=\"50\"\n              :current-page=\"currentCommentPage\"\n              @current-change=\"commentPageChange\"\n            >\n            </el-pagination>\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"收藏者\" name=\"third\">\n          <user-list-card\n            userType=\"musicListDetailPage\"\n            :userList=\"followedsListData.followedsList\"\n            :isLoad=\"followedsListData.isMore\"\n            @bottomLoad=\"bottomLoad\"\n          ></user-list-card>\n          <div\n            class=\"tips\"\n            v-if=\"\n              followedsListData.followedsList.length == 0 &&\n              followedsListData.isLoaded == true\n            \"\n          >\n            暂无收藏者\n          </div>\n        </el-tab-pane>\n      </el-tabs>\n    </div>\n\n    <!-- 返回顶部组件 -->\n    <go-top scrollObj=\".musicListDetail\"></go-top>\n  </div>\n</template>\n\n<script>\nimport { formatDate, handleNum, handleMusicTime } from \"plugins/utils\";\nimport Comment from \"components/comment/Comment\";\nimport GoTop from \"components/goTop/GoTop.vue\";\nimport UserListCard from \"components/userListCard/UserListCard.vue\";\n\nexport default {\n  name: \"MusicListDetail\",\n  data() {\n    return {\n      musicListDetail: null,\n      comments: {},\n      // 当前评论页数\n      currentCommentPage: 1,\n      // 是否还有更多音乐\n      isMore: false,\n      // 用户是否收藏了当前歌单\n      isSub: false,\n      // 是否是用户创建的歌单\n      isCreated: false,\n      // 评论是否在加载\n      isCommentLoading: false,\n      // 是否禁止滚动加载\n      scrollLoadDisabled: false,\n      // 收藏者列表的变量\n      followedsListData: {\n        // 当前页数\n        currentPage: 1,\n        // 列表\n        followedsList: [],\n        // 是否还有更多\n        isMore: false,\n        // 是否已经加载过列表数据 （用于点击收藏者tab后第一次加载数据）\n        isLoaded: false,\n      },\n    };\n  },\n  components: {\n    Comment,\n    GoTop,\n    UserListCard,\n  },\n  methods: {\n    // 请求\n    // 根据传来的 id 查询歌单\n    async getMusicListDetail() {\n      var timestamp = Date.parse(new Date());\n      // console.log(this.$route.params.id);\n      let result = await this.$request(\"/playlist/detail\", {\n        id: this.$route.params.id,\n        timestamp,\n      });\n      // console.log(result);\n      this.musicListDetail = result.data.playlist;\n      // console.log(this.musicListDetail);\n      // 判断是否还有更多音乐\n      if (\n        this.musicListDetail.tracks.length !=\n        this.musicListDetail.trackIds.length\n      ) {\n        this.isMore = true;\n      }\n      // 处理播放时间\n      this.musicListDetail.tracks.forEach((item, index) => {\n        this.musicListDetail.tracks[index].dt = handleMusicTime(item.dt);\n      });\n      // 判断用户是否喜欢该音乐\n      // 直接两个循环性能损耗太厉害了 没什么思路暂时不做先\n      // let likeMusicList = this.$store.state.likeMusicList;\n    },\n    // 获取歌单评论\n    async getMusicListComment(type) {\n      // 获取时间戳\n      var timestamp = Date.parse(new Date());\n      this.isCommentLoading = true;\n\n      if (type == \"changePage\") {\n        this.scrollToComment();\n      }\n      let res = await this.$request(\"/comment/playlist\", {\n        id: this.$route.params.id,\n        offset: (this.currentCommentPage - 1) * 50,\n        limit: 50,\n        timestamp,\n      });\n      console.log(res);\n      if (res.data.code !== 200) {\n        this.$message.error(\"获取评论失败,请稍后重试!\");\n      }\n      this.comments = res.data;\n      this.isCommentLoading = false;\n      console.log(\"重新歌单获取评论\");\n    },\n\n    scrollToComment() {\n      let musicListDetail = document.querySelector(\".musicListDetail\");\n      let listInfo = document.querySelector(\".listInfo\");\n      // console.log(\"执行了这里 滚动到精彩评论\", [listInfo]);\n      musicListDetail.scrollTo({\n        behavior: \"smooth\",\n        top: listInfo.clientHeight - 20,\n      });\n    },\n\n    // 获取歌曲详情\n    async getMusicDetail(ids) {\n      if (this.isMore == false) return;\n      this.scrollLoadDisabled = true;\n\n      let res = await this.$request(\"/song/detail\", { ids });\n      // 处理时间\n      console.log(res);\n      res.data.songs.forEach((item, index) => {\n        res.data.songs[index].dt = handleMusicTime(item.dt);\n      });\n      this.musicListDetail.tracks.push(...res.data.songs);\n      // 判断是否还有更多音乐\n      if (\n        this.musicListDetail.tracks.length <\n        this.musicListDetail.trackIds.length\n      ) {\n        this.isMore = true;\n        this.scrollLoadDisabled = false;\n      } else {\n        this.isMore = false;\n      }\n    },\n\n    // 请求用户歌单\n    async getUserMusicList() {\n      let timestamp = Date.parse(new Date());\n      // 先从localStorage里面读取用户信息  如果登录成功是有存的\n      this.userInfo =\n        window.localStorage.getItem(\"userInfo\") &&\n        JSON.parse(window.localStorage.getItem(\"userInfo\"));\n      let res = await this.$request(\"/user/playlist\", {\n        uid: this.userInfo.userId,\n        timestamp,\n      });\n      res = res.data.playlist;\n      let index = res.findIndex((item) => item.subscribed == true);\n      this.collectedMusicList = res.slice(index);\n      // 将收藏的歌单上传至vuex\n      this.$store.commit(\"updateCollectMusicList\", this.collectedMusicList);\n    },\n\n    // 获取歌单收藏者\n    async getMusicListFolloweds() {\n      let res = await this.$request(\"/playlist/subscribers\", {\n        id: this.$route.params.id,\n        offset: (this.followedsListData.currentPage - 1) * 20,\n      });\n      console.log(res);\n      this.followedsListData.isMore = res.data.more;\n      this.followedsListData.followedsList.push(...res.data.subscribers);\n    },\n\n    // 事件函数\n    handleIndex(index) {\n      // console.log(index);\n      index += 1;\n      if (index < 10) {\n        return \"0\" + index;\n      } else {\n        return index;\n      }\n    },\n    // 双击table的row的回调\n    async clickRow(row) {\n      console.log(row);\n      // 将musicId提交到vuex中 供bottomControl查询歌曲url和其它操作\n      this.$store.commit(\"updateMusicId\", row.id);\n      // 如果歌单发生变化,则提交歌单到vuex\n      if (this.musicListDetail.id != this.$store.state.musicListId) {\n        // 将歌单传到vuex\n        this.$store.commit(\"updateMusicList\", {\n          musicList: this.musicListDetail.tracks,\n          musicListId: this.musicListDetail.id,\n        });\n      }\n\n      // let result = await this.$request(\"/song/url\", { id: row.id, br: 320000 });\n      // console.log(result.data.data[0].url);\n      // this.$store.commit(\"updateMusicUrl\", result.data.data[0].url);\n    },\n    // 点击播放全部按钮的回调\n    playAll() {\n      this.$store.commit(\"updateMusicId\", this.musicListDetail.tracks[0].id);\n      this.$store.commit(\"updateMusicList\", {\n        musicList: this.musicListDetail.tracks,\n        musicListId: this.musicListDetail.id,\n      });\n    },\n    // 评论点击翻页的回调\n    commentPageChange(page) {\n      this.currentCommentPage = page;\n      this.getMusicListComment(\"changePage\");\n    },\n\n    handleDOM(current, last) {\n      if (document.querySelector(\".musicListDetail\")) {\n        let tableRows = document\n          .querySelector(\".musicListDetail\")\n          .querySelectorAll(\".el-table__row\");\n        // 遍历当前musicList 找到当前播放的index的行进行渲染\n        // console.log(tableRows);\n        let index = this.musicListDetail.tracks.findIndex(\n          (item) => item.id == current\n        );\n        // console.log(index);\n        if (index != -1) {\n          // 直接修改dom样式的颜色无效  可能是因为第三方组件的原故\n          // 通过引入全局样式解决\n          // 将正在播放的音乐前面的索引换成小喇叭\n          tableRows[index].children[0].querySelector(\n            \".cell\"\n          ).innerHTML = `<div><i class=\"iconfont icon-yinliang\"></i></div>`;\n          tableRows[index].children[0]\n            .querySelector(\".iconfont\")\n            .classList.add(\"currentRow\");\n          tableRows[index].children[2]\n            .querySelector(\".cell\")\n            .classList.add(\"currentRow\");\n        }\n        // 清除上一首的样式\n        if (last != -1) {\n          let lastIndex = this.musicListDetail.tracks.findIndex(\n            (item) => item.id == last\n          );\n          if (lastIndex != -1) {\n            // 将上一个播放的dom的小喇叭换回索引\n            tableRows[lastIndex].children[0].querySelector(\n              \".cell\"\n            ).innerHTML = `<div>${\n              lastIndex + 1 < 10 ? \"0\" + (lastIndex + 1) : lastIndex + 1\n            }</div>`;\n\n            // 将上一首的类名删掉  小喇叭的html已经被替换了，不需要再还原\n            tableRows[lastIndex].children[2]\n              .querySelector(\".cell\")\n              .classList.remove(\"currentRow\");\n          }\n        }\n      }\n    },\n    // 点击el-tab-pane的回调\n    clickTab(e) {\n      console.log(e.index);\n      if (e.index == 1 && !this.comments.comments) {\n        this.getMusicListComment();\n      } else if (e.index == 2 && !this.followedsListData.isLoaded) {\n        this.getMusicListFolloweds();\n        this.followedsListData.isLoaded = true;\n      }\n    },\n    // 点击加载所有音乐的回调\n    loadMore() {\n      if (!this.$store.state.isLogin) {\n        this.$message.error(\"请先进行登录操作!\");\n        return;\n      }\n      // console.log(\"加载所有音乐\");\n      // this.isMore = false;\n\n      let arr = this.musicListDetail.trackIds.slice(\n        this.musicListDetail.tracks.length\n      );\n      if (arr.length > 100) {\n        arr = arr.slice(0, 100);\n      }\n      // console.log(arr.length);\n      let ids = \"\";\n      arr.forEach((item) => {\n        ids += item.id + \",\";\n      });\n      ids = ids.substr(0, ids.length - 1);\n      // console.log(ids);\n      this.getMusicDetail(ids);\n    },\n    // 判断用户是否收藏了该歌单\n    getIsSub() {\n      this.isSub = this.$store.state.collectMusicList.find(\n        (item) => item.id == this.$route.params.id\n      );\n    },\n    // 判断是否是用户创建的歌单\n    getIsCreated() {\n      this.isCreated = this.$store.state.createdMusicList.find(\n        (item) => item.id == this.$route.params.id\n      );\n    },\n    // 点击收藏按钮的回调\n    async collectList() {\n      if (!this.$store.state.isLogin) {\n        // this.$message.error(\"请先进行登录操作!\");\n        return;\n      }\n      this.isSub = !this.isSub;\n      // 请求\n      let timestamp = Date.parse(new Date());\n      await this.$request(\"/playlist/subscribe\", {\n        id: this.$route.params.id,\n        t: this.isSub ? 1 : 2,\n        timestamp,\n      });\n      // 请求收藏歌单列表并保存至vuex\n      this.getUserMusicList();\n    },\n\n    async clickCell(row, column, cell) {\n      // 判断点击的是下载按钮\n      if (cell.querySelector(\".icon-download\")) {\n        // 请求该歌曲的url\n        console.log(row);\n        let res = await this.$request(\"/song/url\", { id: row.id });\n        console.log(res.data.data[0].url);\n        console.log(res);\n        if (res.data.data[0].url == null) {\n          this.$message.warning(\"暂时无法获取该资源哦!\");\n          return;\n        }\n\n        // 匹配资源的域名\n        let url = res.data.data[0].url.match(/\\http.*?\\.net/);\n        // 匹配域名名称，并匹配对应的代理\n        let serve = url[0].match(/http:\\/(\\S*).music/)[1];\n        if (\n          serve != \"/m7\" &&\n          serve != \"/m701\" &&\n          serve != \"/m8\" &&\n          serve != \"/m801\"\n        ) {\n          // 没有对应的代理\n          this.$message.error(\"匹配不到对应的代理,下载失败!\");\n          return;\n        }\n        // 截取后面的参数\n        let params = res.data.data[0].url.slice(url[0].length);\n        // console.log(url[0], serve, params);\n\n        let downloadMusicInfo = {\n          url: serve + params,\n          name:\n            row.name +\n            \" - \" +\n            row.ar[0].name +\n            \".\" +\n            res.data.data[0].type.toLowerCase(),\n        };\n        console.log(downloadMusicInfo);\n        this.$store.commit(\"updateDownloadMusicInfo\", downloadMusicInfo);\n      }\n    },\n\n    // 收藏者列表触底的回调\n    bottomLoad() {\n      this.followedsListData.currentPage += 1;\n      this.getMusicListFolloweds();\n    },\n  },\n  computed: {},\n  watch: {\n    // \"$store.state.currentIndex\"(currentIndex, lastIndex) {\n    //   // 目前没什么好思路 直接操作原生DOM\n    //   console.log(currentIndex, lastIndex);\n    //   // this.handleTableDOM(currentIndex, lastIndex);\n    // },\n    \"$store.state.musicId\"(current, last) {\n      this.handleDOM(current, last);\n    },\n    // 监听createdMusicList的变化\n    \"$store.state.createdMusicList\"(current, last) {\n      // 如果在收藏页面刷新，收藏歌单还没获取到，但是收藏按钮已经渲染了，所以在第一次获取到数据时，再渲染一次\n      // 如果是刚刷新，last则为空\n      if (last.length == 0) {\n        this.getIsSub();\n      }\n    },\n  },\n  filters: {\n    showDate(value) {\n      // 1、先将时间戳转成Date对象\n      const date = new Date(value);\n\n      // 2、将date进行格式化\n      return formatDate(date, \"yyyy-MM-dd\");\n    },\n    handleNum,\n  },\n  created() {},\n  async mounted() {\n    if (this.$store.state.isLogin) {\n      // 先判断是否是用户创建的歌单\n      this.getIsCreated();\n      // 如果不是 再判断是否是收藏的歌单\n      if (!this.isCreated) {\n        this.getIsSub();\n      }\n    }\n    await this.getMusicListDetail();\n    this.$nextTick(() => {\n      // 判断是否和上一次打开的歌单相同\n      if (this.$route.params.id == this.$store.state.musicListId) {\n        this.handleDOM(this.$store.state.musicId);\n      }\n    });\n  },\n};\n</script>\n\n<style scoped>\n.musicListDetail {\n  overflow-y: scroll;\n}\n\n.listInfo {\n  display: flex;\n  padding: 25px 15px;\n  align-items: center;\n}\n\n.listAvatar {\n  width: 150px;\n  height: 150px;\n  overflow: hidden;\n  border-radius: 10px;\n  margin-right: 15px;\n  position: relative;\n}\n\n.listAvatar::after {\n  content: \"\";\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  left: 0;\n  top: 0;\n  background: url(\"~assets/img/imgLoading.png\") no-repeat;\n  background-size: contain;\n  z-index: -1;\n}\n\n.listAvatar img {\n  width: 100%;\n}\n\n.right {\n  width: calc(100% - 200px);\n}\n\n.title {\n  display: flex;\n  align-items: center;\n}\n\n.titleTag {\n  font-size: 12px;\n  color: #ec4141;\n  border: 1px solid #ec4141;\n  padding: 1px 2px;\n  border-radius: 2px;\n  margin-right: 5px;\n  transform: scale(0.8);\n}\n\n.titleContent {\n  font-size: 20px;\n  font-weight: 600;\n  color: #373737;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 90%;\n}\n\n.user {\n  display: flex;\n  align-items: center;\n  margin-top: 8px;\n  font-size: 12px;\n}\n\n.userAvatar {\n  height: 25px;\n  width: 25px;\n  margin-right: 8px;\n}\n\n.userAvatar img {\n  width: 100%;\n  border-radius: 50%;\n}\n\n.userName {\n  color: #6191c2;\n  margin-right: 8px;\n  cursor: pointer;\n}\n\n.createTime {\n  transform: scale(0.9);\n}\n\n.buttons {\n  margin: 8px 0 0 -5px;\n  display: flex;\n}\n\n.buttonItem {\n  font-size: 12px;\n  padding: 8px 15px;\n  border: 1px solid #ddd;\n  border-radius: 20px;\n  transform: scale(0.9);\n}\n\n.buttonItem i {\n  font-size: 12px;\n  margin-right: 3px;\n  transform: scale(0.9);\n}\n\n.playAll {\n  background-color: #ec4141;\n  color: white;\n}\n\n.tags {\n  margin: 8px 0 0 -30px;\n  display: flex;\n  font-size: 12px;\n  transform: scale(0.9);\n}\n\n.tagItem {\n  color: #6191c2;\n  margin-right: 5px;\n}\n\n.otherInfo {\n  margin: 5px 0 0 -30px;\n  display: flex;\n  font-size: 12px;\n  transform: scale(0.9);\n}\n\n.musicNum {\n  margin-right: 13px;\n}\n\n.desc {\n  margin: 5px 0 0 -30px;\n  font-size: 12px;\n  transform: scale(0.9);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.musicList {\n  margin: -15px 15px 0;\n}\n\n.page {\n  width: 100%;\n  text-align: center;\n  padding-bottom: 20px;\n}\n\n.placeholder {\n  width: 100%;\n  height: 50px;\n}\n\n.loadMore {\n  width: 100%;\n  height: 50px;\n  font-size: 12px;\n  color: #aaa;\n  text-align: center;\n  line-height: 50px;\n  transform: scale(0.9);\n}\n\n.red {\n  color: #ec4141;\n}\n\n.commentList /deep/ .el-loading-spinner {\n  top: 40px;\n}\n\n.tips {\n  font-size: 14px;\n  margin: 30px 0;\n  text-align: center;\n}\n</style>"]}]}