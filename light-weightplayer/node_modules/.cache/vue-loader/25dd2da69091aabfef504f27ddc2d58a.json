{"remainingRequest":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\light-weightPlayer\\light-weightplayer\\src\\components\\Index.vue?vue&type=style&index=0&id=82b7485c&scoped=true&lang=css&","dependencies":[{"path":"D:\\light-weightPlayer\\light-weightplayer\\src\\components\\Index.vue","mtime":1636482270761},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636408356404},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1636408358142},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\postcss-loader\\src\\index.js","mtime":1636408357193},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"D:\\light-weightPlayer\\light-weightplayer\\node_modules\\vue-loader\\lib\\index.js","mtime":1636408357599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5pcy1hY3RpdmUgewogIGJhY2tncm91bmQtY29sb3I6ICNmNmY2Zjc7CiAgZm9udC1zaXplOiAxNHB4OwogIGZvbnQtd2VpZ2h0OiA2MDA7Cn0KCi5pY29uZm9udCB7CiAgZm9udC1zaXplOiAxNHB4OwogIG1hcmdpbjogNXB4ICFpbXBvcnRhbnQ7Cn0KCi5yb3V0ZXJWaWV3IHsKICBwYWRkaW5nOiAwIDE1cHg7CiAgbWFyZ2luOiAwOwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogY2FsYyg4MHZoIC0gMTA1cHgpOwp9CgouZWwtaGVhZGVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDMwMDAwOwogIGhlaWdodDogNTBweCAhaW1wb3J0YW50OwogIHBhZGRpbmc6IDA7CiAgbWFyZ2luOiAwOwogIHotaW5kZXg6IDEwMDsKfQoKLmVsLWFzaWRlIHsKICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjY2NjOwogIGhlaWdodDogY2FsYyg4MHZoIC0gMTA1cHgpOwp9CgouZWwtbWVudSB7CiAgYm9yZGVyOiBub25lOwp9CgouZWwtbWVudS1pdGVtOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY2ICFpbXBvcnRhbnQ7Cn0KCi5lbC1tZW51LWl0ZW0gewogIGZvbnQtc2l6ZTogMTJweDsKICBwYWRkaW5nOiAwIDAgMCAxMHB4ICFpbXBvcnRhbnQ7CiAgbWFyZ2luOiA1cHggMCAhaW1wb3J0YW50OwogIGhlaWdodDogMzBweDsKICBsaW5lLWhlaWdodDogMzBweDsKfQoKLmVsLW1lbnUtaXRlbS1ncm91cCB7CiAgbWFyZ2luLXRvcDogMTBweDsKfQoKLmVsLW1haW4gewogIHBhZGRpbmc6IDA7Cn0K"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Index.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <el-container>\n    <el-header>\n      <header-bar></header-bar>\n    </el-header>\n    <el-container>\n      <!-- 侧边栏 -->\n      <el-aside width=\"160px\">\n        <el-menu\n          active-text-color=\"black\"\n          router\n          :default-active=\"defaultActive\"\n        >\n          <el-menu-item index=\"/discover\">\n            <i class=\"iconfont icon-yinle\"></i>\n            <span slot=\"title\">音乐发现</span>\n          </el-menu-item>\n          <el-menu-item index=\"/video\">\n            <i class=\"iconfont icon-shipin\"></i>\n            <span slot=\"title\">视频</span>\n          </el-menu-item>\n          <el-menu-item index=\"/favorites\">\n            <i class=\"iconfont icon-more\"></i>\n            <span slot=\"title\">歌曲收藏</span>\n          </el-menu-item>\n          <el-menu-item index=\"/recommendmusic\">\n            <i class=\"iconfont icon-good\"></i>\n            <span slot=\"title\">每日推荐歌曲</span>\n          </el-menu-item>\n          <el-menu-item-group v-if=\"createdMusicList.length != 0\">\n            <template slot=\"title\" class=\"groupTitle\">创建的歌单</template>\n            <el-menu-item\n              v-for=\"(item, index) in createdMusicList\"\n              :key=\"index\"\n              :index=\"'/musiclistdetail/' + item.id\"\n            >\n              <i class=\"iconfont icon-gedan\"></i>{{ item.name }}</el-menu-item\n            >\n          </el-menu-item-group>\n\n          <el-menu-item-group v-if=\"collectedMusicList.length != 0\">\n            <template slot=\"title\" class=\"groupTitle\">收藏的歌单</template>\n            <el-menu-item\n              v-for=\"(item, index) in collectedMusicList\"\n              :key=\"index\"\n              :index=\"'/musiclistdetail/' + item.id\"\n            >\n              <i class=\"iconfont icon-gedan\"></i>{{ item.name }}</el-menu-item\n            >\n          </el-menu-item-group>\n        </el-menu>\n      </el-aside>\n      <!-- 主体内容 -->\n      <el-main>\n        <!-- 给router-view添加key有可能对性能有一定的损耗，\n        但是可以解决push同一个地址不同参数时不会重新渲染router-view的问题 -->\n        <router-view class=\"routerView\" :key=\"$route.fullPath\"></router-view>\n        <!-- 用于下载的a标签 -->\n        <a\n          :href=\"downloadMusicInfo.url\"\n          :download=\"downloadMusicInfo.name\"\n          target=\"_blank\"\n          id=\"downloadCurrentMusic\"\n        ></a>\n      </el-main>\n    </el-container>\n    <bottom-control></bottom-control>\n    <music-detail-card class=\"musicDetailCard\"></music-detail-card>\n  </el-container>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nimport BottomControl from \"components/bottomControl/BottomControl\";\nimport HeaderBar from \"components/headerBar/HeaderBar.vue\";\nimport MusicDetailCard from \"views/musicDetailCard/MusicDetailCard.vue\";\nexport default {\n  components: {\n    BottomControl,\n    HeaderBar,\n    MusicDetailCard,\n  },\n  data() {\n    return {\n      defaultActive: \"\",\n      // 用户信息\n      // userInfo: {},\n      // 创建的歌单\n      createdMusicList: [],\n      // 收藏的歌单\n      collectedMusicList: [],\n      // 下载的音乐的信息\n      downloadMusicInfo: {\n        name: \"\",\n        url: \"\",\n      },\n    };\n  },\n  created() {\n    if (this.$route.path.search(\"/musiclistdetail\") == -1) {\n      this.defaultActive = \"/\" + this.$route.path.split(\"/\")[1];\n    } else {\n      this.defaultActive = this.$route.path;\n    }\n  },\n  methods: {\n    // 请求\n    // 请求用户歌单\n    async getUserMusicList() {\n      if (!this.$store.state.isLogin) {\n        // 说明已经退出登录\n        this.$message.error(\"请先进行登录操作\");\n        return;\n      }\n      let timestamp = Date.parse(new Date());\n      // 先从localStorage里面读取用户信息  如果登录成功是有存的\n      // this.userInfo =\n      //   window.localStorage.getItem(\"userInfo\") &&\n      //   JSON.parse(window.localStorage.getItem(\"userInfo\"));\n\n      let res = await this.$request(\"/user/playlist\", {\n        uid: window.localStorage.getItem(\"userId\"),\n        timestamp,\n      });\n      // console.log(res);\n      // 对数据进行处理分类\n      res = res.data.playlist;\n      let index = res.findIndex((item) => item.subscribed == true);\n      this.createdMusicList = res.slice(0, index);\n      this.collectedMusicList = res.slice(index);\n      this.createdMusicList[0].name = \"我喜欢的音乐\";\n      // console.log(this.createdMusicList, this.collectedMusicList);\n      // 将收藏的歌单上传至vuex\n      this.$store.commit(\"updateCollectMusicList\", this.collectedMusicList);\n      // 将创建的歌单上传至vuex\n      this.$store.commit(\"updateCreatedMusicList\", this.createdMusicList);\n    },\n  },\n  watch: {\n    \n    // 监听收藏歌单的变化\n    \"$store.state.collectMusicList\"(current) {\n      this.collectedMusicList = current;\n    },\n    \"$route.path\"(current) {\n      // 取路由中的首地址 用于侧边栏的导航active\n      if (current.search(\"/musiclistdetail\") == -1) {\n        this.defaultActive = \"/\" + current.split(\"/\")[1];\n      } else {\n        this.defaultActive = current;\n      }\n    },\n\n    // 监听当前下载音乐信息\n    \"$store.state.downloadMusicInfo\"(current) {\n      axios\n        .get(current.url, { responseType: \"blob\" })\n        .then((res) => {\n          let blob = res.data;\n          let url = URL.createObjectURL(blob);\n          // console.log(url);\n          let a = document.querySelector(\"#downloadCurrentMusic\");\n          this.downloadMusicInfo.url = url;\n          this.downloadMusicInfo.name = current.name;\n          this.$nextTick(() => {\n            a.click();\n            // 用完释放URL对象\n            URL.revokeObjectURL(url);\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          this.$message.error(\"下载失败,请稍后重试!\");\n        });\n\n    },\n    // 监听vuex中的登录状态\n    \"$store.state.isLogin\"(current) {\n      // console.log(current);\n      if (current) {\n        this.getUserMusicList();\n      } else {\n        // 清空收藏和创建歌单\n        this.createdMusicList = [];\n        this.collectedMusicList = [];\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.is-active {\n  background-color: #f6f6f7;\n  font-size: 14px;\n  font-weight: 600;\n}\n\n.iconfont {\n  font-size: 14px;\n  margin: 5px !important;\n}\n\n.routerView {\n  padding: 0 15px;\n  margin: 0;\n  width: 100%;\n  height: calc(80vh - 105px);\n}\n\n.el-header {\n  background-color: #D30000;\n  height: 50px !important;\n  padding: 0;\n  margin: 0;\n  z-index: 100;\n}\n\n.el-aside {\n  border-right: 1px solid #ccc;\n  height: calc(80vh - 105px);\n}\n\n.el-menu {\n  border: none;\n}\n\n.el-menu-item:hover {\n  background-color: #f5f5f6 !important;\n}\n\n.el-menu-item {\n  font-size: 12px;\n  padding: 0 0 0 10px !important;\n  margin: 5px 0 !important;\n  height: 30px;\n  line-height: 30px;\n}\n\n.el-menu-item-group {\n  margin-top: 10px;\n}\n\n.el-main {\n  padding: 0;\n}\n</style>"]}]}