{"remainingRequest":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\src\\views\\musicListDetail\\MusicListDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\src\\views\\musicListDetail\\MusicListDetail.vue","mtime":1632135031000},{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1636408357214},{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1636408357599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGZvcm1hdERhdGUsIGhhbmRsZU51bSwgaGFuZGxlTXVzaWNUaW1lIH0gZnJvbSAicGx1Z2lucy91dGlscyI7CmltcG9ydCBDb21tZW50IGZyb20gImNvbXBvbmVudHMvY29tbWVudC9Db21tZW50IjsKaW1wb3J0IEdvVG9wIGZyb20gImNvbXBvbmVudHMvZ29Ub3AvR29Ub3AudnVlIjsKaW1wb3J0IFVzZXJMaXN0Q2FyZCBmcm9tICJjb21wb25lbnRzL3VzZXJMaXN0Q2FyZC9Vc2VyTGlzdENhcmQudnVlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTXVzaWNMaXN0RGV0YWlsIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbXVzaWNMaXN0RGV0YWlsOiBudWxsLAogICAgICBjb21tZW50czoge30sCiAgICAgIC8vIOW9k+WJjeivhOiuuumhteaVsAogICAgICBjdXJyZW50Q29tbWVudFBhZ2U6IDEsCiAgICAgIC8vIOaYr+WQpui/mOacieabtOWkmumfs+S5kAogICAgICBpc01vcmU6IGZhbHNlLAogICAgICAvLyDnlKjmiLfmmK/lkKbmlLbol4/kuoblvZPliY3mrYzljZUKICAgICAgaXNTdWI6IGZhbHNlLAogICAgICAvLyDmmK/lkKbmmK/nlKjmiLfliJvlu7rnmoTmrYzljZUKICAgICAgaXNDcmVhdGVkOiBmYWxzZSwKICAgICAgLy8g6K+E6K665piv5ZCm5Zyo5Yqg6L29CiAgICAgIGlzQ29tbWVudExvYWRpbmc6IGZhbHNlLAogICAgICAvLyDmmK/lkKbnpoHmraLmu5rliqjliqDovb0KICAgICAgc2Nyb2xsTG9hZERpc2FibGVkOiBmYWxzZSwKICAgICAgLy8g5pS26JeP6ICF5YiX6KGo55qE5Y+Y6YePCiAgICAgIGZvbGxvd2Vkc0xpc3REYXRhOiB7CiAgICAgICAgLy8g5b2T5YmN6aG15pWwCiAgICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgICAgLy8g5YiX6KGoCiAgICAgICAgZm9sbG93ZWRzTGlzdDogW10sCiAgICAgICAgLy8g5piv5ZCm6L+Y5pyJ5pu05aSaCiAgICAgICAgaXNNb3JlOiBmYWxzZSwKICAgICAgICAvLyDmmK/lkKblt7Lnu4/liqDovb3ov4fliJfooajmlbDmja4g77yI55So5LqO54K55Ye75pS26JeP6ICFdGFi5ZCO56ys5LiA5qyh5Yqg6L295pWw5o2u77yJCiAgICAgICAgaXNMb2FkZWQ6IGZhbHNlLAogICAgICB9LAogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIENvbW1lbnQsCiAgICBHb1RvcCwKICAgIFVzZXJMaXN0Q2FyZCwKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOivt+axggogICAgLy8g5qC55o2u5Lyg5p2l55qEIGlkIOafpeivouatjOWNlQogICAgYXN5bmMgZ2V0TXVzaWNMaXN0RGV0YWlsKCkgewogICAgICB2YXIgdGltZXN0YW1wID0gRGF0ZS5wYXJzZShuZXcgRGF0ZSgpKTsKICAgICAgLy8gY29uc29sZS5sb2codGhpcy4kcm91dGUucGFyYW1zLmlkKTsKICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IHRoaXMuJHJlcXVlc3QoIi9wbGF5bGlzdC9kZXRhaWwiLCB7CiAgICAgICAgaWQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5pZCwKICAgICAgICB0aW1lc3RhbXAsCiAgICAgIH0pOwogICAgICAvLyBjb25zb2xlLmxvZyhyZXN1bHQpOwogICAgICB0aGlzLm11c2ljTGlzdERldGFpbCA9IHJlc3VsdC5kYXRhLnBsYXlsaXN0OwogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLm11c2ljTGlzdERldGFpbCk7CiAgICAgIC8vIOWIpOaWreaYr+WQpui/mOacieabtOWkmumfs+S5kAogICAgICBpZiAoCiAgICAgICAgdGhpcy5tdXNpY0xpc3REZXRhaWwudHJhY2tzLmxlbmd0aCAhPQogICAgICAgIHRoaXMubXVzaWNMaXN0RGV0YWlsLnRyYWNrSWRzLmxlbmd0aAogICAgICApIHsKICAgICAgICB0aGlzLmlzTW9yZSA9IHRydWU7CiAgICAgIH0KICAgICAgLy8g5aSE55CG5pKt5pS+5pe26Ze0CiAgICAgIHRoaXMubXVzaWNMaXN0RGV0YWlsLnRyYWNrcy5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgIHRoaXMubXVzaWNMaXN0RGV0YWlsLnRyYWNrc1tpbmRleF0uZHQgPSBoYW5kbGVNdXNpY1RpbWUoaXRlbS5kdCk7CiAgICAgIH0pOwogICAgICAvLyDliKTmlq3nlKjmiLfmmK/lkKbllpzmrKLor6Xpn7PkuZAKICAgICAgLy8g55u05o6l5Lik5Liq5b6q546v5oCn6IO95o2f6ICX5aSq5Y6J5a6z5LqGIOayoeS7gOS5iOaAnei3r+aaguaXtuS4jeWBmuWFiAogICAgICAvLyBsZXQgbGlrZU11c2ljTGlzdCA9IHRoaXMuJHN0b3JlLnN0YXRlLmxpa2VNdXNpY0xpc3Q7CiAgICB9LAogICAgLy8g6I635Y+W5q2M5Y2V6K+E6K66CiAgICBhc3luYyBnZXRNdXNpY0xpc3RDb21tZW50KHR5cGUpIHsKICAgICAgLy8g6I635Y+W5pe26Ze05oizCiAgICAgIHZhciB0aW1lc3RhbXAgPSBEYXRlLnBhcnNlKG5ldyBEYXRlKCkpOwogICAgICB0aGlzLmlzQ29tbWVudExvYWRpbmcgPSB0cnVlOwoKICAgICAgaWYgKHR5cGUgPT0gImNoYW5nZVBhZ2UiKSB7CiAgICAgICAgdGhpcy5zY3JvbGxUb0NvbW1lbnQoKTsKICAgICAgfQogICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy4kcmVxdWVzdCgiL2NvbW1lbnQvcGxheWxpc3QiLCB7CiAgICAgICAgaWQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5pZCwKICAgICAgICBvZmZzZXQ6ICh0aGlzLmN1cnJlbnRDb21tZW50UGFnZSAtIDEpICogNTAsCiAgICAgICAgbGltaXQ6IDUwLAogICAgICAgIHRpbWVzdGFtcCwKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgIGlmIChyZXMuZGF0YS5jb2RlICE9PSAyMDApIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLojrflj5bor4TorrrlpLHotKUs6K+356iN5ZCO6YeN6K+VISIpOwogICAgICB9CiAgICAgIHRoaXMuY29tbWVudHMgPSByZXMuZGF0YTsKICAgICAgdGhpcy5pc0NvbW1lbnRMb2FkaW5nID0gZmFsc2U7CiAgICAgIGNvbnNvbGUubG9nKCLph43mlrDmrYzljZXojrflj5bor4TorroiKTsKICAgIH0sCgogICAgc2Nyb2xsVG9Db21tZW50KCkgewogICAgICBsZXQgbXVzaWNMaXN0RGV0YWlsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLm11c2ljTGlzdERldGFpbCIpOwogICAgICBsZXQgbGlzdEluZm8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIubGlzdEluZm8iKTsKICAgICAgLy8gY29uc29sZS5sb2coIuaJp+ihjOS6hui/memHjCDmu5rliqjliLDnsr7lvanor4TorroiLCBbbGlzdEluZm9dKTsKICAgICAgbXVzaWNMaXN0RGV0YWlsLnNjcm9sbFRvKHsKICAgICAgICBiZWhhdmlvcjogInNtb290aCIsCiAgICAgICAgdG9wOiBsaXN0SW5mby5jbGllbnRIZWlnaHQgLSAyMCwKICAgICAgfSk7CiAgICB9LAoKICAgIC8vIOiOt+WPluatjOabsuivpuaDhQogICAgYXN5bmMgZ2V0TXVzaWNEZXRhaWwoaWRzKSB7CiAgICAgIGlmICh0aGlzLmlzTW9yZSA9PSBmYWxzZSkgcmV0dXJuOwogICAgICB0aGlzLnNjcm9sbExvYWREaXNhYmxlZCA9IHRydWU7CgogICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy4kcmVxdWVzdCgiL3NvbmcvZGV0YWlsIiwgeyBpZHMgfSk7CiAgICAgIC8vIOWkhOeQhuaXtumXtAogICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICByZXMuZGF0YS5zb25ncy5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgIHJlcy5kYXRhLnNvbmdzW2luZGV4XS5kdCA9IGhhbmRsZU11c2ljVGltZShpdGVtLmR0KTsKICAgICAgfSk7CiAgICAgIHRoaXMubXVzaWNMaXN0RGV0YWlsLnRyYWNrcy5wdXNoKC4uLnJlcy5kYXRhLnNvbmdzKTsKICAgICAgLy8g5Yik5pat5piv5ZCm6L+Y5pyJ5pu05aSa6Z+z5LmQCiAgICAgIGlmICgKICAgICAgICB0aGlzLm11c2ljTGlzdERldGFpbC50cmFja3MubGVuZ3RoIDwKICAgICAgICB0aGlzLm11c2ljTGlzdERldGFpbC50cmFja0lkcy5sZW5ndGgKICAgICAgKSB7CiAgICAgICAgdGhpcy5pc01vcmUgPSB0cnVlOwogICAgICAgIHRoaXMuc2Nyb2xsTG9hZERpc2FibGVkID0gZmFsc2U7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pc01vcmUgPSBmYWxzZTsKICAgICAgfQogICAgfSwKCiAgICAvLyDor7fmsYLnlKjmiLfmrYzljZUKICAgIGFzeW5jIGdldFVzZXJNdXNpY0xpc3QoKSB7CiAgICAgIGxldCB0aW1lc3RhbXAgPSBEYXRlLnBhcnNlKG5ldyBEYXRlKCkpOwogICAgICAvLyDlhYjku45sb2NhbFN0b3JhZ2Xph4zpnaLor7vlj5bnlKjmiLfkv6Hmga8gIOWmguaenOeZu+W9leaIkOWKn+aYr+acieWtmOeahAogICAgICB0aGlzLnVzZXJJbmZvID0KICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXJJbmZvIikgJiYKICAgICAgICBKU09OLnBhcnNlKHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlckluZm8iKSk7CiAgICAgIGxldCByZXMgPSBhd2FpdCB0aGlzLiRyZXF1ZXN0KCIvdXNlci9wbGF5bGlzdCIsIHsKICAgICAgICB1aWQ6IHRoaXMudXNlckluZm8udXNlcklkLAogICAgICAgIHRpbWVzdGFtcCwKICAgICAgfSk7CiAgICAgIHJlcyA9IHJlcy5kYXRhLnBsYXlsaXN0OwogICAgICBsZXQgaW5kZXggPSByZXMuZmluZEluZGV4KChpdGVtKSA9PiBpdGVtLnN1YnNjcmliZWQgPT0gdHJ1ZSk7CiAgICAgIHRoaXMuY29sbGVjdGVkTXVzaWNMaXN0ID0gcmVzLnNsaWNlKGluZGV4KTsKICAgICAgLy8g5bCG5pS26JeP55qE5q2M5Y2V5LiK5Lyg6IezdnVleAogICAgICB0aGlzLiRzdG9yZS5jb21taXQoInVwZGF0ZUNvbGxlY3RNdXNpY0xpc3QiLCB0aGlzLmNvbGxlY3RlZE11c2ljTGlzdCk7CiAgICB9LAoKICAgIC8vIOiOt+WPluatjOWNleaUtuiXj+iAhQogICAgYXN5bmMgZ2V0TXVzaWNMaXN0Rm9sbG93ZWRzKCkgewogICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy4kcmVxdWVzdCgiL3BsYXlsaXN0L3N1YnNjcmliZXJzIiwgewogICAgICAgIGlkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQsCiAgICAgICAgb2Zmc2V0OiAodGhpcy5mb2xsb3dlZHNMaXN0RGF0YS5jdXJyZW50UGFnZSAtIDEpICogMjAsCiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICB0aGlzLmZvbGxvd2Vkc0xpc3REYXRhLmlzTW9yZSA9IHJlcy5kYXRhLm1vcmU7CiAgICAgIHRoaXMuZm9sbG93ZWRzTGlzdERhdGEuZm9sbG93ZWRzTGlzdC5wdXNoKC4uLnJlcy5kYXRhLnN1YnNjcmliZXJzKTsKICAgIH0sCgogICAgLy8g5LqL5Lu25Ye95pWwCiAgICBoYW5kbGVJbmRleChpbmRleCkgewogICAgICAvLyBjb25zb2xlLmxvZyhpbmRleCk7CiAgICAgIGluZGV4ICs9IDE7CiAgICAgIGlmIChpbmRleCA8IDEwKSB7CiAgICAgICAgcmV0dXJuICIwIiArIGluZGV4OwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBpbmRleDsKICAgICAgfQogICAgfSwKICAgIC8vIOWPjOWHu3RhYmxl55qEcm9355qE5Zue6LCDCiAgICBhc3luYyBjbGlja1Jvdyhyb3cpIHsKICAgICAgY29uc29sZS5sb2cocm93KTsKICAgICAgLy8g5bCGbXVzaWNJZOaPkOS6pOWIsHZ1ZXjkuK0g5L6bYm90dG9tQ29udHJvbOafpeivouatjOabsnVybOWSjOWFtuWug+aTjeS9nAogICAgICB0aGlzLiRzdG9yZS5jb21taXQoInVwZGF0ZU11c2ljSWQiLCByb3cuaWQpOwogICAgICAvLyDlpoLmnpzmrYzljZXlj5HnlJ/lj5jljJYs5YiZ5o+Q5Lqk5q2M5Y2V5YiwdnVleAogICAgICBpZiAodGhpcy5tdXNpY0xpc3REZXRhaWwuaWQgIT0gdGhpcy4kc3RvcmUuc3RhdGUubXVzaWNMaXN0SWQpIHsKICAgICAgICAvLyDlsIbmrYzljZXkvKDliLB2dWV4CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJ1cGRhdGVNdXNpY0xpc3QiLCB7CiAgICAgICAgICBtdXNpY0xpc3Q6IHRoaXMubXVzaWNMaXN0RGV0YWlsLnRyYWNrcywKICAgICAgICAgIG11c2ljTGlzdElkOiB0aGlzLm11c2ljTGlzdERldGFpbC5pZCwKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgLy8gbGV0IHJlc3VsdCA9IGF3YWl0IHRoaXMuJHJlcXVlc3QoIi9zb25nL3VybCIsIHsgaWQ6IHJvdy5pZCwgYnI6IDMyMDAwMCB9KTsKICAgICAgLy8gY29uc29sZS5sb2cocmVzdWx0LmRhdGEuZGF0YVswXS51cmwpOwogICAgICAvLyB0aGlzLiRzdG9yZS5jb21taXQoInVwZGF0ZU11c2ljVXJsIiwgcmVzdWx0LmRhdGEuZGF0YVswXS51cmwpOwogICAgfSwKICAgIC8vIOeCueWHu+aSreaUvuWFqOmDqOaMiemSrueahOWbnuiwgwogICAgcGxheUFsbCgpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJ1cGRhdGVNdXNpY0lkIiwgdGhpcy5tdXNpY0xpc3REZXRhaWwudHJhY2tzWzBdLmlkKTsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJ1cGRhdGVNdXNpY0xpc3QiLCB7CiAgICAgICAgbXVzaWNMaXN0OiB0aGlzLm11c2ljTGlzdERldGFpbC50cmFja3MsCiAgICAgICAgbXVzaWNMaXN0SWQ6IHRoaXMubXVzaWNMaXN0RGV0YWlsLmlkLAogICAgICB9KTsKICAgIH0sCiAgICAvLyDor4Torrrngrnlh7vnv7vpobXnmoTlm57osIMKICAgIGNvbW1lbnRQYWdlQ2hhbmdlKHBhZ2UpIHsKICAgICAgdGhpcy5jdXJyZW50Q29tbWVudFBhZ2UgPSBwYWdlOwogICAgICB0aGlzLmdldE11c2ljTGlzdENvbW1lbnQoImNoYW5nZVBhZ2UiKTsKICAgIH0sCgogICAgaGFuZGxlRE9NKGN1cnJlbnQsIGxhc3QpIHsKICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5tdXNpY0xpc3REZXRhaWwiKSkgewogICAgICAgIGxldCB0YWJsZVJvd3MgPSBkb2N1bWVudAogICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoIi5tdXNpY0xpc3REZXRhaWwiKQogICAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoIi5lbC10YWJsZV9fcm93Iik7CiAgICAgICAgLy8g6YGN5Y6G5b2T5YmNbXVzaWNMaXN0IOaJvuWIsOW9k+WJjeaSreaUvueahGluZGV455qE6KGM6L+b6KGM5riy5p+TCiAgICAgICAgLy8gY29uc29sZS5sb2codGFibGVSb3dzKTsKICAgICAgICBsZXQgaW5kZXggPSB0aGlzLm11c2ljTGlzdERldGFpbC50cmFja3MuZmluZEluZGV4KAogICAgICAgICAgKGl0ZW0pID0+IGl0ZW0uaWQgPT0gY3VycmVudAogICAgICAgICk7CiAgICAgICAgLy8gY29uc29sZS5sb2coaW5kZXgpOwogICAgICAgIGlmIChpbmRleCAhPSAtMSkgewogICAgICAgICAgLy8g55u05o6l5L+u5pS5ZG9t5qC35byP55qE6aKc6Imy5peg5pWIICDlj6/og73mmK/lm6DkuLrnrKzkuInmlrnnu4Tku7bnmoTljp/mlYUKICAgICAgICAgIC8vIOmAmui/h+W8leWFpeWFqOWxgOagt+W8j+ino+WGswogICAgICAgICAgLy8g5bCG5q2j5Zyo5pKt5pS+55qE6Z+z5LmQ5YmN6Z2i55qE57Si5byV5o2i5oiQ5bCP5ZaH5Y+tCiAgICAgICAgICB0YWJsZVJvd3NbaW5kZXhdLmNoaWxkcmVuWzBdLnF1ZXJ5U2VsZWN0b3IoCiAgICAgICAgICAgICIuY2VsbCIKICAgICAgICAgICkuaW5uZXJIVE1MID0gYDxkaXY+PGkgY2xhc3M9Imljb25mb250IGljb24teWlubGlhbmciPjwvaT48L2Rpdj5gOwogICAgICAgICAgdGFibGVSb3dzW2luZGV4XS5jaGlsZHJlblswXQogICAgICAgICAgICAucXVlcnlTZWxlY3RvcigiLmljb25mb250IikKICAgICAgICAgICAgLmNsYXNzTGlzdC5hZGQoImN1cnJlbnRSb3ciKTsKICAgICAgICAgIHRhYmxlUm93c1tpbmRleF0uY2hpbGRyZW5bMl0KICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoIi5jZWxsIikKICAgICAgICAgICAgLmNsYXNzTGlzdC5hZGQoImN1cnJlbnRSb3ciKTsKICAgICAgICB9CiAgICAgICAgLy8g5riF6Zmk5LiK5LiA6aaW55qE5qC35byPCiAgICAgICAgaWYgKGxhc3QgIT0gLTEpIHsKICAgICAgICAgIGxldCBsYXN0SW5kZXggPSB0aGlzLm11c2ljTGlzdERldGFpbC50cmFja3MuZmluZEluZGV4KAogICAgICAgICAgICAoaXRlbSkgPT4gaXRlbS5pZCA9PSBsYXN0CiAgICAgICAgICApOwogICAgICAgICAgaWYgKGxhc3RJbmRleCAhPSAtMSkgewogICAgICAgICAgICAvLyDlsIbkuIrkuIDkuKrmkq3mlL7nmoRkb23nmoTlsI/lloflj63mjaLlm57ntKLlvJUKICAgICAgICAgICAgdGFibGVSb3dzW2xhc3RJbmRleF0uY2hpbGRyZW5bMF0ucXVlcnlTZWxlY3RvcigKICAgICAgICAgICAgICAiLmNlbGwiCiAgICAgICAgICAgICkuaW5uZXJIVE1MID0gYDxkaXY+JHsKICAgICAgICAgICAgICBsYXN0SW5kZXggKyAxIDwgMTAgPyAiMCIgKyAobGFzdEluZGV4ICsgMSkgOiBsYXN0SW5kZXggKyAxCiAgICAgICAgICAgIH08L2Rpdj5gOwoKICAgICAgICAgICAgLy8g5bCG5LiK5LiA6aaW55qE57G75ZCN5Yig5o6JICDlsI/lloflj63nmoRodG1s5bey57uP6KKr5pu/5o2i5LqG77yM5LiN6ZyA6KaB5YaN6L+Y5Y6fCiAgICAgICAgICAgIHRhYmxlUm93c1tsYXN0SW5kZXhdLmNoaWxkcmVuWzJdCiAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoIi5jZWxsIikKICAgICAgICAgICAgICAuY2xhc3NMaXN0LnJlbW92ZSgiY3VycmVudFJvdyIpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIC8vIOeCueWHu2VsLXRhYi1wYW5l55qE5Zue6LCDCiAgICBjbGlja1RhYihlKSB7CiAgICAgIGNvbnNvbGUubG9nKGUuaW5kZXgpOwogICAgICBpZiAoZS5pbmRleCA9PSAxICYmICF0aGlzLmNvbW1lbnRzLmNvbW1lbnRzKSB7CiAgICAgICAgdGhpcy5nZXRNdXNpY0xpc3RDb21tZW50KCk7CiAgICAgIH0gZWxzZSBpZiAoZS5pbmRleCA9PSAyICYmICF0aGlzLmZvbGxvd2Vkc0xpc3REYXRhLmlzTG9hZGVkKSB7CiAgICAgICAgdGhpcy5nZXRNdXNpY0xpc3RGb2xsb3dlZHMoKTsKICAgICAgICB0aGlzLmZvbGxvd2Vkc0xpc3REYXRhLmlzTG9hZGVkID0gdHJ1ZTsKICAgICAgfQogICAgfSwKICAgIC8vIOeCueWHu+WKoOi9veaJgOaciemfs+S5kOeahOWbnuiwgwogICAgbG9hZE1vcmUoKSB7CiAgICAgIGlmICghdGhpcy4kc3RvcmUuc3RhdGUuaXNMb2dpbikgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuivt+WFiOi/m+ihjOeZu+W9leaTjeS9nCEiKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgLy8gY29uc29sZS5sb2coIuWKoOi9veaJgOaciemfs+S5kCIpOwogICAgICAvLyB0aGlzLmlzTW9yZSA9IGZhbHNlOwoKICAgICAgbGV0IGFyciA9IHRoaXMubXVzaWNMaXN0RGV0YWlsLnRyYWNrSWRzLnNsaWNlKAogICAgICAgIHRoaXMubXVzaWNMaXN0RGV0YWlsLnRyYWNrcy5sZW5ndGgKICAgICAgKTsKICAgICAgaWYgKGFyci5sZW5ndGggPiAxMDApIHsKICAgICAgICBhcnIgPSBhcnIuc2xpY2UoMCwgMTAwKTsKICAgICAgfQogICAgICAvLyBjb25zb2xlLmxvZyhhcnIubGVuZ3RoKTsKICAgICAgbGV0IGlkcyA9ICIiOwogICAgICBhcnIuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICAgIGlkcyArPSBpdGVtLmlkICsgIiwiOwogICAgICB9KTsKICAgICAgaWRzID0gaWRzLnN1YnN0cigwLCBpZHMubGVuZ3RoIC0gMSk7CiAgICAgIC8vIGNvbnNvbGUubG9nKGlkcyk7CiAgICAgIHRoaXMuZ2V0TXVzaWNEZXRhaWwoaWRzKTsKICAgIH0sCiAgICAvLyDliKTmlq3nlKjmiLfmmK/lkKbmlLbol4/kuobor6XmrYzljZUKICAgIGdldElzU3ViKCkgewogICAgICB0aGlzLmlzU3ViID0gdGhpcy4kc3RvcmUuc3RhdGUuY29sbGVjdE11c2ljTGlzdC5maW5kKAogICAgICAgIChpdGVtKSA9PiBpdGVtLmlkID09IHRoaXMuJHJvdXRlLnBhcmFtcy5pZAogICAgICApOwogICAgfSwKICAgIC8vIOWIpOaWreaYr+WQpuaYr+eUqOaIt+WIm+W7uueahOatjOWNlQogICAgZ2V0SXNDcmVhdGVkKCkgewogICAgICB0aGlzLmlzQ3JlYXRlZCA9IHRoaXMuJHN0b3JlLnN0YXRlLmNyZWF0ZWRNdXNpY0xpc3QuZmluZCgKICAgICAgICAoaXRlbSkgPT4gaXRlbS5pZCA9PSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQKICAgICAgKTsKICAgIH0sCiAgICAvLyDngrnlh7vmlLbol4/mjInpkq7nmoTlm57osIMKICAgIGFzeW5jIGNvbGxlY3RMaXN0KCkgewogICAgICBpZiAoIXRoaXMuJHN0b3JlLnN0YXRlLmlzTG9naW4pIHsKICAgICAgICAvLyB0aGlzLiRtZXNzYWdlLmVycm9yKCLor7flhYjov5vooYznmbvlvZXmk43kvZwhIik7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRoaXMuaXNTdWIgPSAhdGhpcy5pc1N1YjsKICAgICAgLy8g6K+35rGCCiAgICAgIGxldCB0aW1lc3RhbXAgPSBEYXRlLnBhcnNlKG5ldyBEYXRlKCkpOwogICAgICBhd2FpdCB0aGlzLiRyZXF1ZXN0KCIvcGxheWxpc3Qvc3Vic2NyaWJlIiwgewogICAgICAgIGlkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQsCiAgICAgICAgdDogdGhpcy5pc1N1YiA/IDEgOiAyLAogICAgICAgIHRpbWVzdGFtcCwKICAgICAgfSk7CiAgICAgIC8vIOivt+axguaUtuiXj+atjOWNleWIl+ihqOW5tuS/neWtmOiHs3Z1ZXgKICAgICAgdGhpcy5nZXRVc2VyTXVzaWNMaXN0KCk7CiAgICB9LAoKICAgIGFzeW5jIGNsaWNrQ2VsbChyb3csIGNvbHVtbiwgY2VsbCkgewogICAgICAvLyDliKTmlq3ngrnlh7vnmoTmmK/kuIvovb3mjInpkq4KICAgICAgaWYgKGNlbGwucXVlcnlTZWxlY3RvcigiLmljb24tZG93bmxvYWQiKSkgewogICAgICAgIC8vIOivt+axguivpeatjOabsueahHVybAogICAgICAgIGNvbnNvbGUubG9nKHJvdyk7CiAgICAgICAgbGV0IHJlcyA9IGF3YWl0IHRoaXMuJHJlcXVlc3QoIi9zb25nL3VybCIsIHsgaWQ6IHJvdy5pZCB9KTsKICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YS5kYXRhWzBdLnVybCk7CiAgICAgICAgY29uc29sZS5sb2cocmVzKTsKICAgICAgICBpZiAocmVzLmRhdGEuZGF0YVswXS51cmwgPT0gbnVsbCkgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCLmmoLml7bml6Dms5Xojrflj5bor6XotYTmupDlk6YhIik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICAvLyDljLnphY3otYTmupDnmoTln5/lkI0KICAgICAgICBsZXQgdXJsID0gcmVzLmRhdGEuZGF0YVswXS51cmwubWF0Y2goL1xodHRwLio/XC5uZXQvKTsKICAgICAgICAvLyDljLnphY3ln5/lkI3lkI3np7DvvIzlubbljLnphY3lr7nlupTnmoTku6PnkIYKICAgICAgICBsZXQgc2VydmUgPSB1cmxbMF0ubWF0Y2goL2h0dHA6XC8oXFMqKS5tdXNpYy8pWzFdOwogICAgICAgIGlmICgKICAgICAgICAgIHNlcnZlICE9ICIvbTciICYmCiAgICAgICAgICBzZXJ2ZSAhPSAiL203MDEiICYmCiAgICAgICAgICBzZXJ2ZSAhPSAiL204IiAmJgogICAgICAgICAgc2VydmUgIT0gIi9tODAxIgogICAgICAgICkgewogICAgICAgICAgLy8g5rKh5pyJ5a+55bqU55qE5Luj55CGCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLljLnphY3kuI3liLDlr7nlupTnmoTku6PnkIYs5LiL6L295aSx6LSlISIpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICAvLyDmiKrlj5blkI7pnaLnmoTlj4LmlbAKICAgICAgICBsZXQgcGFyYW1zID0gcmVzLmRhdGEuZGF0YVswXS51cmwuc2xpY2UodXJsWzBdLmxlbmd0aCk7CiAgICAgICAgLy8gY29uc29sZS5sb2codXJsWzBdLCBzZXJ2ZSwgcGFyYW1zKTsKCiAgICAgICAgbGV0IGRvd25sb2FkTXVzaWNJbmZvID0gewogICAgICAgICAgdXJsOiBzZXJ2ZSArIHBhcmFtcywKICAgICAgICAgIG5hbWU6CiAgICAgICAgICAgIHJvdy5uYW1lICsKICAgICAgICAgICAgIiAtICIgKwogICAgICAgICAgICByb3cuYXJbMF0ubmFtZSArCiAgICAgICAgICAgICIuIiArCiAgICAgICAgICAgIHJlcy5kYXRhLmRhdGFbMF0udHlwZS50b0xvd2VyQ2FzZSgpLAogICAgICAgIH07CiAgICAgICAgY29uc29sZS5sb2coZG93bmxvYWRNdXNpY0luZm8pOwogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgidXBkYXRlRG93bmxvYWRNdXNpY0luZm8iLCBkb3dubG9hZE11c2ljSW5mbyk7CiAgICAgIH0KICAgIH0sCgogICAgLy8g5pS26JeP6ICF5YiX6KGo6Kem5bqV55qE5Zue6LCDCiAgICBib3R0b21Mb2FkKCkgewogICAgICB0aGlzLmZvbGxvd2Vkc0xpc3REYXRhLmN1cnJlbnRQYWdlICs9IDE7CiAgICAgIHRoaXMuZ2V0TXVzaWNMaXN0Rm9sbG93ZWRzKCk7CiAgICB9LAogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIHdhdGNoOiB7CiAgICAvLyAiJHN0b3JlLnN0YXRlLmN1cnJlbnRJbmRleCIoY3VycmVudEluZGV4LCBsYXN0SW5kZXgpIHsKICAgIC8vICAgLy8g55uu5YmN5rKh5LuA5LmI5aW95oCd6LevIOebtOaOpeaTjeS9nOWOn+eUn0RPTQogICAgLy8gICBjb25zb2xlLmxvZyhjdXJyZW50SW5kZXgsIGxhc3RJbmRleCk7CiAgICAvLyAgIC8vIHRoaXMuaGFuZGxlVGFibGVET00oY3VycmVudEluZGV4LCBsYXN0SW5kZXgpOwogICAgLy8gfSwKICAgICIkc3RvcmUuc3RhdGUubXVzaWNJZCIoY3VycmVudCwgbGFzdCkgewogICAgICB0aGlzLmhhbmRsZURPTShjdXJyZW50LCBsYXN0KTsKICAgIH0sCiAgICAvLyDnm5HlkKxjcmVhdGVkTXVzaWNMaXN055qE5Y+Y5YyWCiAgICAiJHN0b3JlLnN0YXRlLmNyZWF0ZWRNdXNpY0xpc3QiKGN1cnJlbnQsIGxhc3QpIHsKICAgICAgLy8g5aaC5p6c5Zyo5pS26JeP6aG16Z2i5Yi35paw77yM5pS26JeP5q2M5Y2V6L+Y5rKh6I635Y+W5Yiw77yM5L2G5piv5pS26JeP5oyJ6ZKu5bey57uP5riy5p+T5LqG77yM5omA5Lul5Zyo56ys5LiA5qyh6I635Y+W5Yiw5pWw5o2u5pe277yM5YaN5riy5p+T5LiA5qyhCiAgICAgIC8vIOWmguaenOaYr+WImuWIt+aWsO+8jGxhc3TliJnkuLrnqboKICAgICAgaWYgKGxhc3QubGVuZ3RoID09IDApIHsKICAgICAgICB0aGlzLmdldElzU3ViKCk7CiAgICAgIH0KICAgIH0sCiAgfSwKICBmaWx0ZXJzOiB7CiAgICBzaG93RGF0ZSh2YWx1ZSkgewogICAgICAvLyAx44CB5YWI5bCG5pe26Ze05oiz6L2s5oiQRGF0ZeWvueixoQogICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUodmFsdWUpOwoKICAgICAgLy8gMuOAgeWwhmRhdGXov5vooYzmoLzlvI/ljJYKICAgICAgcmV0dXJuIGZvcm1hdERhdGUoZGF0ZSwgInl5eXktTU0tZGQiKTsKICAgIH0sCiAgICBoYW5kbGVOdW0sCiAgfSwKICBjcmVhdGVkKCkge30sCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS5pc0xvZ2luKSB7CiAgICAgIC8vIOWFiOWIpOaWreaYr+WQpuaYr+eUqOaIt+WIm+W7uueahOatjOWNlQogICAgICB0aGlzLmdldElzQ3JlYXRlZCgpOwogICAgICAvLyDlpoLmnpzkuI3mmK8g5YaN5Yik5pat5piv5ZCm5piv5pS26JeP55qE5q2M5Y2VCiAgICAgIGlmICghdGhpcy5pc0NyZWF0ZWQpIHsKICAgICAgICB0aGlzLmdldElzU3ViKCk7CiAgICAgIH0KICAgIH0KICAgIGF3YWl0IHRoaXMuZ2V0TXVzaWNMaXN0RGV0YWlsKCk7CiAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgIC8vIOWIpOaWreaYr+WQpuWSjOS4iuS4gOasoeaJk+W8gOeahOatjOWNleebuOWQjAogICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLmlkID09IHRoaXMuJHN0b3JlLnN0YXRlLm11c2ljTGlzdElkKSB7CiAgICAgICAgdGhpcy5oYW5kbGVET00odGhpcy4kc3RvcmUuc3RhdGUubXVzaWNJZCk7CiAgICAgIH0KICAgIH0pOwogIH0sCn07Cg=="},{"version":3,"sources":["MusicListDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8MA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MusicListDetail.vue","sourceRoot":"src/views/musicListDetail","sourcesContent":["<template>\n  <div class=\"musicListDetail\" v-if=\"musicListDetail\">\n    <!-- 歌单信息 -->\n    <div class=\"listInfo\">\n      <!-- 歌单封面 -->\n      <div class=\"listAvatar\">\n        <img :src=\"musicListDetail.coverImgUrl\" alt=\"\" />\n      </div>\n      <div class=\"right\">\n        <!-- 标题 -->\n        <div class=\"title\">\n          <div class=\"titleTag\">歌单</div>\n          <div class=\"titleContent\">{{ musicListDetail.name }}</div>\n        </div>\n        <!-- 用户信息 -->\n        <div class=\"user\">\n          <div class=\"userAvatar\">\n            <img :src=\"musicListDetail.creator.avatarUrl\" alt=\"\" />\n          </div>\n          <div\n            class=\"userName\"\n            @click=\"\n              $router.push({\n                name: 'personal',\n                params: { uid: musicListDetail.creator.userId },\n              })\n            \"\n          >\n            {{ musicListDetail.creator.nickname }}\n          </div>\n          <div class=\"createTime\">\n            {{ musicListDetail.createTime | showDate }}创建\n          </div>\n        </div>\n        <!-- 操作按钮 -->\n        <div class=\"buttons\">\n          <div class=\"buttonItem playAll\" @click=\"playAll\">\n            <i class=\"iconfont icon-bofang playAll\"></i>\n            <span>播放全部</span>\n          </div>\n          <div class=\"buttonItem\" v-if=\"!isCreated\" @click=\"collectList\">\n            <i class=\"iconfont icon-xihuan\" :class=\"isSub ? 'red' : ''\"></i>\n            <span>{{ isSub ? \"已收藏\" : \"收藏\" }}</span>\n          </div>\n          <div class=\"buttonItem\">\n            <i class=\"iconfont icon-zhuanfa\"></i>\n            <span>分享</span>\n          </div>\n        </div>\n        <!-- 标签 -->\n        <div class=\"tags\">\n          标签：\n          <div\n            class=\"tagItem\"\n            v-for=\"(item, index) in musicListDetail.tags\"\n            :key=\"index\"\n          >\n            {{ item }}\n          </div>\n          <div v-if=\"musicListDetail.tags.length == 0\">暂无标签</div>\n        </div>\n        <!-- 歌曲列表的歌曲数量和播放量 -->\n        <div class=\"otherInfo\">\n          <div class=\"musicNum\">\n            歌曲 : {{ musicListDetail.trackCount | handleNum }}\n          </div>\n          <div class=\"playCount\">\n            播放 : {{ musicListDetail.playCount | handleNum }}\n          </div>\n        </div>\n        <div class=\"desc\">\n          简介 :\n          {{\n            musicListDetail.description\n              ? musicListDetail.description\n              : \"暂无简介\"\n          }}\n        </div>\n      </div>\n    </div>\n    <!-- 歌曲列表 -->\n    <div class=\"musicList\">\n      <el-tabs value=\"first\" @tab-click=\"clickTab\">\n        <el-tab-pane label=\"歌曲列表\" name=\"first\">\n          <!-- 表格 -->\n          <el-table\n            :data=\"musicListDetail.tracks\"\n            size=\"mini\"\n            style=\"width: 100%\"\n            @row-dblclick=\"clickRow\"\n            @cell-click=\"clickCell\"\n            highlight-current-row\n            stripe\n            lazy\n            :row-key=\"\n              (row) => {\n                return row.id;\n              }\n            \"\n            v-infinite-scroll=\"this.$store.state.isLogin ? loadMore : ''\"\n            :infinite-scroll-disabled=\"scrollLoadDisabled\"\n            :infinite-scroll-distance=\"1500\"\n            :infinite-scroll-immediate=\"false\"\n          >\n            <el-table-column\n              label=\"\"\n              width=\"40\"\n              type=\"index\"\n              :index=\"handleIndex\"\n            >\n            </el-table-column>\n            <el-table-column label=\"\" width=\"23\">\n              <!-- 下载按钮 -->\n              <i class=\"iconfont icon-download\"></i>\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"音乐标题\" min-width=\"350\">\n            </el-table-column>\n            <el-table-column prop=\"ar[0].name\" label=\"歌手\" min-width=\"120\">\n            </el-table-column>\n            <el-table-column prop=\"al.name\" label=\"专辑\" min-width=\"170\">\n            </el-table-column>\n            <el-table-column prop=\"dt\" label=\"时长\" min-width=\"100\">\n            </el-table-column>\n            <!-- <el-table-column prop=\"id\"></el-table-column> -->\n          </el-table>\n          <div class=\"loadMore\" v-if=\"isMore && !this.$store.state.isLogin\">\n            登陆后查看更多音乐\n          </div>\n          <div class=\"placeholder\" v-else></div>\n          <!-- <div class=\"placeholder\"></div> -->\n        </el-tab-pane>\n        <el-tab-pane label=\"评论\" name=\"second\">\n          <div\n            class=\"commentList\"\n            v-if=\"comments.comments\"\n            v-loading=\"isCommentLoading\"\n          >\n            <!-- 精彩评论 -->\n            <comment\n              :commentType=\"'musicList'\"\n              :comments=\"comments.hotComments\"\n              :commentId=\"musicListDetail.id + ''\"\n              @getComment=\"getMusicListComment\"\n              @scrollToComment=\"scrollToComment\"\n              v-if=\"comments.hotComments\"\n              ref=\"hotComments\"\n              ><div slot=\"title\">精彩评论</div></comment\n            >\n            <!-- 最新评论 -->\n            <comment\n              :comments=\"comments.comments\"\n              :commentType=\"'musicList'\"\n              :commentId=\"musicListDetail.id + ''\"\n              :isHotComment=\"comments.hotComments ? false : true\"\n              @getComment=\"getMusicListComment\"\n              @scrollToComment=\"scrollToComment\"\n              @transToHotComment=\"\n                (info) =>\n                  $refs.hotComments.floorComment(info.commentId, info.nickName)\n              \"\n              ><div slot=\"title\">热门评论</div></comment\n            >\n          </div>\n          <!-- 分页 -->\n          <div\n            class=\"page\"\n            v-show=\"comments.comments && comments.comments.length != 0\"\n          >\n            <el-pagination\n              background\n              layout=\"prev, pager, next\"\n              :total=\"comments.total\"\n              small\n              :page-size=\"50\"\n              :current-page=\"currentCommentPage\"\n              @current-change=\"commentPageChange\"\n            >\n            </el-pagination>\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"收藏者\" name=\"third\">\n          <user-list-card\n            userType=\"musicListDetailPage\"\n            :userList=\"followedsListData.followedsList\"\n            :isLoad=\"followedsListData.isMore\"\n            @bottomLoad=\"bottomLoad\"\n          ></user-list-card>\n          <div\n            class=\"tips\"\n            v-if=\"\n              followedsListData.followedsList.length == 0 &&\n              followedsListData.isLoaded == true\n            \"\n          >\n            暂无收藏者\n          </div>\n        </el-tab-pane>\n      </el-tabs>\n    </div>\n\n    <!-- 返回顶部组件 -->\n    <go-top scrollObj=\".musicListDetail\"></go-top>\n  </div>\n</template>\n\n<script>\nimport { formatDate, handleNum, handleMusicTime } from \"plugins/utils\";\nimport Comment from \"components/comment/Comment\";\nimport GoTop from \"components/goTop/GoTop.vue\";\nimport UserListCard from \"components/userListCard/UserListCard.vue\";\n\nexport default {\n  name: \"MusicListDetail\",\n  data() {\n    return {\n      musicListDetail: null,\n      comments: {},\n      // 当前评论页数\n      currentCommentPage: 1,\n      // 是否还有更多音乐\n      isMore: false,\n      // 用户是否收藏了当前歌单\n      isSub: false,\n      // 是否是用户创建的歌单\n      isCreated: false,\n      // 评论是否在加载\n      isCommentLoading: false,\n      // 是否禁止滚动加载\n      scrollLoadDisabled: false,\n      // 收藏者列表的变量\n      followedsListData: {\n        // 当前页数\n        currentPage: 1,\n        // 列表\n        followedsList: [],\n        // 是否还有更多\n        isMore: false,\n        // 是否已经加载过列表数据 （用于点击收藏者tab后第一次加载数据）\n        isLoaded: false,\n      },\n    };\n  },\n  components: {\n    Comment,\n    GoTop,\n    UserListCard,\n  },\n  methods: {\n    // 请求\n    // 根据传来的 id 查询歌单\n    async getMusicListDetail() {\n      var timestamp = Date.parse(new Date());\n      // console.log(this.$route.params.id);\n      let result = await this.$request(\"/playlist/detail\", {\n        id: this.$route.params.id,\n        timestamp,\n      });\n      // console.log(result);\n      this.musicListDetail = result.data.playlist;\n      // console.log(this.musicListDetail);\n      // 判断是否还有更多音乐\n      if (\n        this.musicListDetail.tracks.length !=\n        this.musicListDetail.trackIds.length\n      ) {\n        this.isMore = true;\n      }\n      // 处理播放时间\n      this.musicListDetail.tracks.forEach((item, index) => {\n        this.musicListDetail.tracks[index].dt = handleMusicTime(item.dt);\n      });\n      // 判断用户是否喜欢该音乐\n      // 直接两个循环性能损耗太厉害了 没什么思路暂时不做先\n      // let likeMusicList = this.$store.state.likeMusicList;\n    },\n    // 获取歌单评论\n    async getMusicListComment(type) {\n      // 获取时间戳\n      var timestamp = Date.parse(new Date());\n      this.isCommentLoading = true;\n\n      if (type == \"changePage\") {\n        this.scrollToComment();\n      }\n      let res = await this.$request(\"/comment/playlist\", {\n        id: this.$route.params.id,\n        offset: (this.currentCommentPage - 1) * 50,\n        limit: 50,\n        timestamp,\n      });\n      console.log(res);\n      if (res.data.code !== 200) {\n        this.$message.error(\"获取评论失败,请稍后重试!\");\n      }\n      this.comments = res.data;\n      this.isCommentLoading = false;\n      console.log(\"重新歌单获取评论\");\n    },\n\n    scrollToComment() {\n      let musicListDetail = document.querySelector(\".musicListDetail\");\n      let listInfo = document.querySelector(\".listInfo\");\n      // console.log(\"执行了这里 滚动到精彩评论\", [listInfo]);\n      musicListDetail.scrollTo({\n        behavior: \"smooth\",\n        top: listInfo.clientHeight - 20,\n      });\n    },\n\n    // 获取歌曲详情\n    async getMusicDetail(ids) {\n      if (this.isMore == false) return;\n      this.scrollLoadDisabled = true;\n\n      let res = await this.$request(\"/song/detail\", { ids });\n      // 处理时间\n      console.log(res);\n      res.data.songs.forEach((item, index) => {\n        res.data.songs[index].dt = handleMusicTime(item.dt);\n      });\n      this.musicListDetail.tracks.push(...res.data.songs);\n      // 判断是否还有更多音乐\n      if (\n        this.musicListDetail.tracks.length <\n        this.musicListDetail.trackIds.length\n      ) {\n        this.isMore = true;\n        this.scrollLoadDisabled = false;\n      } else {\n        this.isMore = false;\n      }\n    },\n\n    // 请求用户歌单\n    async getUserMusicList() {\n      let timestamp = Date.parse(new Date());\n      // 先从localStorage里面读取用户信息  如果登录成功是有存的\n      this.userInfo =\n        window.localStorage.getItem(\"userInfo\") &&\n        JSON.parse(window.localStorage.getItem(\"userInfo\"));\n      let res = await this.$request(\"/user/playlist\", {\n        uid: this.userInfo.userId,\n        timestamp,\n      });\n      res = res.data.playlist;\n      let index = res.findIndex((item) => item.subscribed == true);\n      this.collectedMusicList = res.slice(index);\n      // 将收藏的歌单上传至vuex\n      this.$store.commit(\"updateCollectMusicList\", this.collectedMusicList);\n    },\n\n    // 获取歌单收藏者\n    async getMusicListFolloweds() {\n      let res = await this.$request(\"/playlist/subscribers\", {\n        id: this.$route.params.id,\n        offset: (this.followedsListData.currentPage - 1) * 20,\n      });\n      console.log(res);\n      this.followedsListData.isMore = res.data.more;\n      this.followedsListData.followedsList.push(...res.data.subscribers);\n    },\n\n    // 事件函数\n    handleIndex(index) {\n      // console.log(index);\n      index += 1;\n      if (index < 10) {\n        return \"0\" + index;\n      } else {\n        return index;\n      }\n    },\n    // 双击table的row的回调\n    async clickRow(row) {\n      console.log(row);\n      // 将musicId提交到vuex中 供bottomControl查询歌曲url和其它操作\n      this.$store.commit(\"updateMusicId\", row.id);\n      // 如果歌单发生变化,则提交歌单到vuex\n      if (this.musicListDetail.id != this.$store.state.musicListId) {\n        // 将歌单传到vuex\n        this.$store.commit(\"updateMusicList\", {\n          musicList: this.musicListDetail.tracks,\n          musicListId: this.musicListDetail.id,\n        });\n      }\n\n      // let result = await this.$request(\"/song/url\", { id: row.id, br: 320000 });\n      // console.log(result.data.data[0].url);\n      // this.$store.commit(\"updateMusicUrl\", result.data.data[0].url);\n    },\n    // 点击播放全部按钮的回调\n    playAll() {\n      this.$store.commit(\"updateMusicId\", this.musicListDetail.tracks[0].id);\n      this.$store.commit(\"updateMusicList\", {\n        musicList: this.musicListDetail.tracks,\n        musicListId: this.musicListDetail.id,\n      });\n    },\n    // 评论点击翻页的回调\n    commentPageChange(page) {\n      this.currentCommentPage = page;\n      this.getMusicListComment(\"changePage\");\n    },\n\n    handleDOM(current, last) {\n      if (document.querySelector(\".musicListDetail\")) {\n        let tableRows = document\n          .querySelector(\".musicListDetail\")\n          .querySelectorAll(\".el-table__row\");\n        // 遍历当前musicList 找到当前播放的index的行进行渲染\n        // console.log(tableRows);\n        let index = this.musicListDetail.tracks.findIndex(\n          (item) => item.id == current\n        );\n        // console.log(index);\n        if (index != -1) {\n          // 直接修改dom样式的颜色无效  可能是因为第三方组件的原故\n          // 通过引入全局样式解决\n          // 将正在播放的音乐前面的索引换成小喇叭\n          tableRows[index].children[0].querySelector(\n            \".cell\"\n          ).innerHTML = `<div><i class=\"iconfont icon-yinliang\"></i></div>`;\n          tableRows[index].children[0]\n            .querySelector(\".iconfont\")\n            .classList.add(\"currentRow\");\n          tableRows[index].children[2]\n            .querySelector(\".cell\")\n            .classList.add(\"currentRow\");\n        }\n        // 清除上一首的样式\n        if (last != -1) {\n          let lastIndex = this.musicListDetail.tracks.findIndex(\n            (item) => item.id == last\n          );\n          if (lastIndex != -1) {\n            // 将上一个播放的dom的小喇叭换回索引\n            tableRows[lastIndex].children[0].querySelector(\n              \".cell\"\n            ).innerHTML = `<div>${\n              lastIndex + 1 < 10 ? \"0\" + (lastIndex + 1) : lastIndex + 1\n            }</div>`;\n\n            // 将上一首的类名删掉  小喇叭的html已经被替换了，不需要再还原\n            tableRows[lastIndex].children[2]\n              .querySelector(\".cell\")\n              .classList.remove(\"currentRow\");\n          }\n        }\n      }\n    },\n    // 点击el-tab-pane的回调\n    clickTab(e) {\n      console.log(e.index);\n      if (e.index == 1 && !this.comments.comments) {\n        this.getMusicListComment();\n      } else if (e.index == 2 && !this.followedsListData.isLoaded) {\n        this.getMusicListFolloweds();\n        this.followedsListData.isLoaded = true;\n      }\n    },\n    // 点击加载所有音乐的回调\n    loadMore() {\n      if (!this.$store.state.isLogin) {\n        this.$message.error(\"请先进行登录操作!\");\n        return;\n      }\n      // console.log(\"加载所有音乐\");\n      // this.isMore = false;\n\n      let arr = this.musicListDetail.trackIds.slice(\n        this.musicListDetail.tracks.length\n      );\n      if (arr.length > 100) {\n        arr = arr.slice(0, 100);\n      }\n      // console.log(arr.length);\n      let ids = \"\";\n      arr.forEach((item) => {\n        ids += item.id + \",\";\n      });\n      ids = ids.substr(0, ids.length - 1);\n      // console.log(ids);\n      this.getMusicDetail(ids);\n    },\n    // 判断用户是否收藏了该歌单\n    getIsSub() {\n      this.isSub = this.$store.state.collectMusicList.find(\n        (item) => item.id == this.$route.params.id\n      );\n    },\n    // 判断是否是用户创建的歌单\n    getIsCreated() {\n      this.isCreated = this.$store.state.createdMusicList.find(\n        (item) => item.id == this.$route.params.id\n      );\n    },\n    // 点击收藏按钮的回调\n    async collectList() {\n      if (!this.$store.state.isLogin) {\n        // this.$message.error(\"请先进行登录操作!\");\n        return;\n      }\n      this.isSub = !this.isSub;\n      // 请求\n      let timestamp = Date.parse(new Date());\n      await this.$request(\"/playlist/subscribe\", {\n        id: this.$route.params.id,\n        t: this.isSub ? 1 : 2,\n        timestamp,\n      });\n      // 请求收藏歌单列表并保存至vuex\n      this.getUserMusicList();\n    },\n\n    async clickCell(row, column, cell) {\n      // 判断点击的是下载按钮\n      if (cell.querySelector(\".icon-download\")) {\n        // 请求该歌曲的url\n        console.log(row);\n        let res = await this.$request(\"/song/url\", { id: row.id });\n        console.log(res.data.data[0].url);\n        console.log(res);\n        if (res.data.data[0].url == null) {\n          this.$message.warning(\"暂时无法获取该资源哦!\");\n          return;\n        }\n\n        // 匹配资源的域名\n        let url = res.data.data[0].url.match(/\\http.*?\\.net/);\n        // 匹配域名名称，并匹配对应的代理\n        let serve = url[0].match(/http:\\/(\\S*).music/)[1];\n        if (\n          serve != \"/m7\" &&\n          serve != \"/m701\" &&\n          serve != \"/m8\" &&\n          serve != \"/m801\"\n        ) {\n          // 没有对应的代理\n          this.$message.error(\"匹配不到对应的代理,下载失败!\");\n          return;\n        }\n        // 截取后面的参数\n        let params = res.data.data[0].url.slice(url[0].length);\n        // console.log(url[0], serve, params);\n\n        let downloadMusicInfo = {\n          url: serve + params,\n          name:\n            row.name +\n            \" - \" +\n            row.ar[0].name +\n            \".\" +\n            res.data.data[0].type.toLowerCase(),\n        };\n        console.log(downloadMusicInfo);\n        this.$store.commit(\"updateDownloadMusicInfo\", downloadMusicInfo);\n      }\n    },\n\n    // 收藏者列表触底的回调\n    bottomLoad() {\n      this.followedsListData.currentPage += 1;\n      this.getMusicListFolloweds();\n    },\n  },\n  computed: {},\n  watch: {\n    // \"$store.state.currentIndex\"(currentIndex, lastIndex) {\n    //   // 目前没什么好思路 直接操作原生DOM\n    //   console.log(currentIndex, lastIndex);\n    //   // this.handleTableDOM(currentIndex, lastIndex);\n    // },\n    \"$store.state.musicId\"(current, last) {\n      this.handleDOM(current, last);\n    },\n    // 监听createdMusicList的变化\n    \"$store.state.createdMusicList\"(current, last) {\n      // 如果在收藏页面刷新，收藏歌单还没获取到，但是收藏按钮已经渲染了，所以在第一次获取到数据时，再渲染一次\n      // 如果是刚刷新，last则为空\n      if (last.length == 0) {\n        this.getIsSub();\n      }\n    },\n  },\n  filters: {\n    showDate(value) {\n      // 1、先将时间戳转成Date对象\n      const date = new Date(value);\n\n      // 2、将date进行格式化\n      return formatDate(date, \"yyyy-MM-dd\");\n    },\n    handleNum,\n  },\n  created() {},\n  async mounted() {\n    if (this.$store.state.isLogin) {\n      // 先判断是否是用户创建的歌单\n      this.getIsCreated();\n      // 如果不是 再判断是否是收藏的歌单\n      if (!this.isCreated) {\n        this.getIsSub();\n      }\n    }\n    await this.getMusicListDetail();\n    this.$nextTick(() => {\n      // 判断是否和上一次打开的歌单相同\n      if (this.$route.params.id == this.$store.state.musicListId) {\n        this.handleDOM(this.$store.state.musicId);\n      }\n    });\n  },\n};\n</script>\n\n<style scoped>\n.musicListDetail {\n  overflow-y: scroll;\n}\n\n.listInfo {\n  display: flex;\n  padding: 25px 15px;\n  align-items: center;\n}\n\n.listAvatar {\n  width: 150px;\n  height: 150px;\n  overflow: hidden;\n  border-radius: 10px;\n  margin-right: 15px;\n  position: relative;\n}\n\n.listAvatar::after {\n  content: \"\";\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  left: 0;\n  top: 0;\n  background: url(\"~assets/img/imgLoading.png\") no-repeat;\n  background-size: contain;\n  z-index: -1;\n}\n\n.listAvatar img {\n  width: 100%;\n}\n\n.right {\n  width: calc(100% - 200px);\n}\n\n.title {\n  display: flex;\n  align-items: center;\n}\n\n.titleTag {\n  font-size: 12px;\n  color: #ec4141;\n  border: 1px solid #ec4141;\n  padding: 1px 2px;\n  border-radius: 2px;\n  margin-right: 5px;\n  transform: scale(0.8);\n}\n\n.titleContent {\n  font-size: 20px;\n  font-weight: 600;\n  color: #373737;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 90%;\n}\n\n.user {\n  display: flex;\n  align-items: center;\n  margin-top: 8px;\n  font-size: 12px;\n}\n\n.userAvatar {\n  height: 25px;\n  width: 25px;\n  margin-right: 8px;\n}\n\n.userAvatar img {\n  width: 100%;\n  border-radius: 50%;\n}\n\n.userName {\n  color: #6191c2;\n  margin-right: 8px;\n  cursor: pointer;\n}\n\n.createTime {\n  transform: scale(0.9);\n}\n\n.buttons {\n  margin: 8px 0 0 -5px;\n  display: flex;\n}\n\n.buttonItem {\n  font-size: 12px;\n  padding: 8px 15px;\n  border: 1px solid #ddd;\n  border-radius: 20px;\n  transform: scale(0.9);\n}\n\n.buttonItem i {\n  font-size: 12px;\n  margin-right: 3px;\n  transform: scale(0.9);\n}\n\n.playAll {\n  background-color: #ec4141;\n  color: white;\n}\n\n.tags {\n  margin: 8px 0 0 -30px;\n  display: flex;\n  font-size: 12px;\n  transform: scale(0.9);\n}\n\n.tagItem {\n  color: #6191c2;\n  margin-right: 5px;\n}\n\n.otherInfo {\n  margin: 5px 0 0 -30px;\n  display: flex;\n  font-size: 12px;\n  transform: scale(0.9);\n}\n\n.musicNum {\n  margin-right: 13px;\n}\n\n.desc {\n  margin: 5px 0 0 -30px;\n  font-size: 12px;\n  transform: scale(0.9);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.musicList {\n  margin: -15px 15px 0;\n}\n\n.page {\n  width: 100%;\n  text-align: center;\n  padding-bottom: 20px;\n}\n\n.placeholder {\n  width: 100%;\n  height: 50px;\n}\n\n.loadMore {\n  width: 100%;\n  height: 50px;\n  font-size: 12px;\n  color: #aaa;\n  text-align: center;\n  line-height: 50px;\n  transform: scale(0.9);\n}\n\n.red {\n  color: #ec4141;\n}\n\n.commentList /deep/ .el-loading-spinner {\n  top: 40px;\n}\n\n.tips {\n  font-size: 14px;\n  margin: 30px 0;\n  text-align: center;\n}\n</style>"]}]}