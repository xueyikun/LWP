{"remainingRequest":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\src\\plugins\\utils.js","dependencies":[{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\src\\plugins\\utils.js","mtime":1632135031000},{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"C:\\Users\\w9747\\Downloads\\vue_cloud_music-master\\vue_cloud_music-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1636408357214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwovLyDmoLzlvI/ljJbml7bpl7QKZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSwgZm10KSB7CiAgLy8gMS7ojrflj5blubTku70KICAvLyB5KyAx5Liq5oiW6ICF5aSa5LiqeSAgeXl5eToyMDIxCiAgLy8geSogMOS4quaIluiAheWkmuS4qnkKICAvLyB5PyAw5Liq5oiW6ICFMeS4qnkKICBpZiAoLyh5KykvLnRlc3QoZm10KSkgewogICAgLy8gUmVnRXhwLiQxIOaMh+eahOaYr+S4juato+WImeihqOi+vuW8j+WMuemFjeeahOesrOS4gOS4quWtkOWMuemFjQogICAgZm10ID0gZm10LnJlcGxhY2UoUmVnRXhwLiQxLCAoZGF0ZS5nZXRGdWxsWWVhcigpICsgJycpLnN1YnN0cig0IC0gUmVnRXhwLiQxLmxlbmd0aCkpOwogIH0gLy8gMi7ojrflj5bmnIjml6XnrYkKCgogIHZhciBvID0gewogICAgJ00rJzogZGF0ZS5nZXRNb250aCgpICsgMSwKICAgICdkKyc6IGRhdGUuZ2V0RGF0ZSgpLAogICAgJ2grJzogZGF0ZS5nZXRIb3VycygpLAogICAgJ20rJzogZGF0ZS5nZXRNaW51dGVzKCksCiAgICAncysnOiBkYXRlLmdldFNlY29uZHMoKQogIH07CgogIGZvciAodmFyIGsgaW4gbykgewogICAgaWYgKG5ldyBSZWdFeHAoIigiLmNvbmNhdChrLCAiKSIpKS50ZXN0KGZtdCkpIHsKICAgICAgdmFyIHN0ciA9IG9ba10gKyAnJzsKICAgICAgZm10ID0gZm10LnJlcGxhY2UoUmVnRXhwLiQxLCBSZWdFeHAuJDEubGVuZ3RoID09PSAxID8gc3RyIDogcGFkTGVmdFplcm8oc3RyKSk7CiAgICB9CiAgfQoKICByZXR1cm4gZm10Owp9IC8vIOS4jei2s+S4pOS9jeihpei2s+S4pOS9jSAwNDowNTowOSAKCmZ1bmN0aW9uIHBhZExlZnRaZXJvKHN0cikgewogIC8vIHN0cj00IC0+IDAwNCDmiKrlj5YgMSDkvY0gLT4gMDQKICByZXR1cm4gKCcwMCcgKyBzdHIpLnN1YnN0cihzdHIubGVuZ3RoKTsKfSAvLyDlpITnkIblpKfkuo4xd+eahOaVsOWtlwoKCmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVOdW0obnVtKSB7CiAgaWYgKG51bSA+IDEwMDAwKSB7CiAgICBudW0gPSAobnVtIC8gMTAwMDApLnRvRml4ZWQoMSk7CiAgICByZXR1cm4gbnVtICsgJ+S4hyc7CiAgfSBlbHNlIHsKICAgIHJldHVybiBudW07CiAgfQp9IC8vIOWkhOeQhumfs+S5kOaXtumVv+eahOaXtumXtAoKZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZU11c2ljVGltZSh0aW1lKSB7CiAgLy8g5aaC5p6c6LaF6L+H5LqGMTAwMDAwIOWfuuacrOmDveaYr+avq+enkuS4uuWNleS9jeeahOS6hiDlhYjovazmiJDnp5LnmoQKICB0aW1lID0gcGFyc2VJbnQodGltZSk7CgogIGlmICh0aW1lID4gMTAwMDApIHsKICAgIHRpbWUgPSBNYXRoLmZsb29yKHRpbWUgLyAxMDAwKTsKICB9IGVsc2UgewogICAgdGltZSA9IE1hdGguZmxvb3IodGltZSk7CiAgfQoKICB2YXIgbSA9IE1hdGguZmxvb3IodGltZSAvIDYwKTsKICB2YXIgcyA9IE1hdGguZmxvb3IodGltZSAlIDYwKTsKICBtID0gbSA8IDEwID8gJzAnICsgbSA6IG07CiAgcyA9IHMgPCAxMCA/ICcwJyArIHMgOiBzOwogIHJldHVybiBtICsgJzonICsgczsKfSAvLyDlsIbmkq3mlL7ml7bplb/ov5jljp/kuLrnp5LmlbAKCmV4cG9ydCBmdW5jdGlvbiByZXR1cm5TZWNvbmQodGltZSkgewogIHRpbWUgPSB0aW1lLnNwbGl0KCI6Iik7CiAgdmFyIG0gPSBwYXJzZUludCh0aW1lWzBdKTsKICB2YXIgcyA9IHBhcnNlSW50KHRpbWVbMV0pOwogIHJldHVybiBtICogNjAgKyBzOwp9"},{"version":3,"sources":["C:/Users/w9747/Downloads/vue_cloud_music-master/vue_cloud_music-master/src/plugins/utils.js"],"names":["formatDate","date","fmt","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","handleNum","num","toFixed","handleMusicTime","time","parseInt","Math","floor","m","s","returnSecond","split"],"mappings":"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","sourcesContent":["\n// 格式化时间\nexport function formatDate(date, fmt) {\n    // 1.获取年份\n    // y+ 1个或者多个y  yyyy:2021\n    // y* 0个或者多个y\n    // y? 0个或者1个y\n    if (/(y+)/.test(fmt)) {\n        // RegExp.$1 指的是与正则表达式匹配的第一个子匹配\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\n    }\n\n    // 2.获取月日等\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds()\n    }\n    for (let k in o) {\n        if (new RegExp(`(${k})`).test(fmt)) {\n            let str = o[k] + '';\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? str : padLeftZero(str));\n        }\n    }\n    return fmt\n}\n\n// 不足两位补足两位 04:05:09 \nfunction padLeftZero(str) {\n    // str=4 -> 004 截取 1 位 -> 04\n    return ('00' + str).substr(str.length)\n}\n\n// 处理大于1w的数字\nexport function handleNum(num) {\n    if (num > 10000) {\n        num = (num / 10000).toFixed(1)\n        return num + '万';\n    } else {\n        return num;\n    }\n}\n\n// 处理音乐时长的时间\nexport function handleMusicTime(time) {\n    // 如果超过了100000 基本都是毫秒为单位的了 先转成秒的\n    time = parseInt(time)\n    if (time > 10000) {\n        time = Math.floor(time / 1000);\n    } else {\n        time = Math.floor(time)\n    }\n    let m = Math.floor(time / 60);\n    let s = Math.floor(time % 60);\n    m = m < 10 ? '0' + m : m;\n    s = s < 10 ? '0' + s : s;\n    return m + ':' + s;\n}\n\n// 将播放时长还原为秒数\nexport function returnSecond(time) {\n    time = time.split(\":\")\n    let m = parseInt(time[0]);\n    let s = parseInt(time[1]);\n    return m * 60 + s;\n}"]}]}