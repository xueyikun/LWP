{"remainingRequest":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\babel-loader\\lib\\index.js!D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue_cloud_music-master\\light-webplayer\\src\\views\\singerDetail\\SingerDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue_cloud_music-master\\light-webplayer\\src\\views\\singerDetail\\SingerDetail.vue","mtime":1632135031000},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\babel-loader\\lib\\index.js","mtime":1636408357214},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636408355875},{"path":"D:\\vue_cloud_music-master\\light-webplayer\\node_modules\\vue-loader\\lib\\index.js","mtime":1636408357599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SingerDetail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div v-if=\"singerInfo.cover\" class=\"singerDetail\">\n    <!-- 类名可能不太对应文件，因为html和样式都是直接搬MusicListDetail里面的 -->\n    <!-- 歌单信息 -->\n    <div class=\"listInfo\">\n      <!-- 歌单封面 -->\n      <div class=\"listAvatar\">\n        <img :src=\"singerInfo.cover + '?param=300y300'\" alt=\"\" />\n      </div>\n      <div class=\"right\">\n        <!-- 标题 -->\n        <div class=\"title\">\n          <div class=\"titleContent\">{{ singerInfo.name }}</div>\n        </div>\n        <!-- 操作按钮 -->\n        <div class=\"buttons\">\n          <div class=\"buttonItem\" @click=\"subSinger\">\n            <i class=\"iconfont icon-xihuan\" :class=\"isSub ? 'red' : ''\"></i>\n            <span>{{ isSub ? \"已收藏\" : \"收藏\" }}</span>\n          </div>\n          <div class=\"buttonItem\">\n            <i class=\"iconfont icon-link\"></i>\n            <span>个人主页</span>\n          </div>\n        </div>\n        <!-- 歌曲列表的歌曲数量和播放量 -->\n        <div class=\"otherInfo\">\n          <div class=\"musicNum\">单曲数 : {{ singerInfo.musicSize }}</div>\n          <div class=\"musicNum\">专辑数 : {{ singerInfo.albumSize }}</div>\n          <div class=\"musicNum\">MV数 : {{ singerInfo.mvSize }}</div>\n        </div>\n      </div>\n    </div>\n    <!-- 歌曲列表 -->\n    <div class=\"musicList\">\n      <el-tabs value=\"first\" @tab-click=\"clickTab\">\n        <el-tab-pane label=\"专辑\" name=\"first\">\n          <div class=\"topSongs\" v-if=\"topSongs.topSongs\">\n            <!-- 热门50首没有id，将歌手id作为listid -->\n            <list-table\n              :officialListDetailItem=\"topSongs\"\n              @handleRowClick=\"handleRowClick\"\n              @handleRowDbClick=\"handleRowDbClick\"\n              @clickCheckAll=\"allTopSongs\"\n              :isCheckAllShow=\"isCheckAllShow\"\n              :cover=\"require('/src/assets/img/topSongsLogo.png')\"\n              :listId=\"this.$route.params.id.toString()\"\n            >\n              <div slot=\"header\" class=\"header\">\n                <div class=\"title\">热门50首</div>\n              </div>\n            </list-table>\n          </div>\n          <div\n            class=\"albumItemContainer\"\n            v-if=\"singerAlbum.length != 0\"\n            v-infinite-scroll=\"load\"\n            :infinite-scroll-disabled=\"disabled\"\n            :infinite-scroll-distance=\"300\"\n            :infinite-scroll-immediate=\"false\"\n          >\n            <div\n              class=\"albumItem\"\n              v-for=\"(item, index) in singerAlbum\"\n              :key=\"index\"\n            >\n              <list-table\n                :officialListDetailItem=\"item.songsObj\"\n                @handleRowClick=\"handleRowClick\"\n                @handleRowDbClick=\"handleRowDbClick\"\n                @clickCheckAll=\"clickListCardItem\"\n                :cover=\"item.album.blurPicUrl + '?param=300y300'\"\n                :listId=\"item.album.id.toString()\"\n              >\n                <div slot=\"header\" class=\"header\">\n                  <div class=\"title\">{{ item.album.name }}</div>\n                </div>\n              </list-table>\n            </div>\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"MV\" name=\"second\">\n          <video-list-card\n            :videoList=\"singerMvInfo.mvs\"\n            :isLoad=\"true\"\n            @clickListCardItem=\"goToVideoDetail\"\n            @bottomLoad=\"bottomLoad\"\n          ></video-list-card>\n        </el-tab-pane>\n        <el-tab-pane label=\"歌手详情\" name=\"third\">\n          <div class=\"singerDesc\">{{ singerInfo.briefDesc }}</div>\n        </el-tab-pane>\n      </el-tabs>\n    </div>\n    <go-top scrollObj=\".singerDetail\"></go-top>\n  </div>\n</template>\n\n<script>\nimport { handleMusicTime } from \"plugins/utils\";\nimport ListTable from \"components/listTable/ListTable.vue\";\nimport VideoListCard from \"components/videoListCard/VideoListCard.vue\";\nimport GoTop from \"components/goTop/GoTop.vue\";\n\n// 记录上一首播放的音乐信息  用于清空小喇叭和红字样式\nlet currentRowInfo = {};\n// 定时器名称\nlet timer;\n\nexport default {\n  components: { ListTable, VideoListCard, GoTop },\n  name: \"SingerDetail\",\n  data() {\n    return {\n      singerInfo: {},\n      // 热门50首\n      topSongs: {},\n      // 歌手专辑\n      singerAlbum: [],\n      // 专辑页数\n      albumPage: 1,\n      disabled: true,\n      isAlbumMore: false,\n      // 是否显示topSong的查看全部按钮\n      isCheckAllShow: true,\n      // 歌手mv数据\n      singerMvInfo: { mvs: [], hasMore: false },\n      // mv页数\n      videoPage: 1,\n      // 是否是双击操作\n      isDbc: false,\n      // 是否收藏了当前歌手\n      isSub: false,\n    };\n  },\n  methods: {\n    // 请求\n    // 请求歌手详情\n    async getSingerInfo() {\n      let res = await this.$request(\"/artist/detail\", {\n        id: this.$route.params.id,\n      });\n      // console.log(res);\n      this.singerInfo = res.data.data.artist;\n    },\n    // 请求歌手热门50首歌曲\n    async getSingerTopSongs() {\n      let res = await this.$request(\"/artist/top/song\", {\n        id: this.$route.params.id,\n      });\n      // console.log(res);\n      let topSongs = res.data.songs;\n      // 处理歌单中歌曲的时间\n      topSongs.forEach((item, index) => {\n        topSongs[index].dt = handleMusicTime(item.dt);\n      });\n      // topSongs改成对象，并向里面添加isOpen属性，用于点击查看列表所有歌曲\n      this.topSongs = { topSongs, isOpen: false };\n    },\n    // 请求专辑列表 再用专辑id查询专辑信息\n    async getAlbumInfo() {\n      let res = await this.$request(\"/artist/album\", {\n        id: this.$route.params.id,\n        limit: 20,\n        offset: (this.albumPage - 1) * 20,\n      });\n      this.isAlbumMore = res.data.more;\n      res = res.data.hotAlbums;\n      await res.forEach((item) => {\n        this.getAlbumDetail(item.id);\n      });\n      // console.log(\"拿到了专辑数据并保存\", this.singerAlbum);\n    },\n    // 请求专辑详情信息\n    async getAlbumDetail(id) {\n      let res = await this.$request(\"/album\", { id });\n      // 将数组songs再保存一个对象格式，方便组件使用\n      res = res.data;\n      let songs = res.songs;\n      // 处理歌单中歌曲的时间\n      songs.forEach((item, index) => {\n        songs[index].dt = handleMusicTime(item.dt);\n      });\n      res.songsObj = { songs };\n      this.singerAlbum.push(res);\n    },\n    // 请求歌手 mv 数据\n    async getSingerMv() {\n      // 这个接口没有offset 参数\n      let res = await this.$request(\"/artist/mv\", {\n        id: this.$route.params.id,\n        limit: 20 * this.videoPage,\n      });\n      console.log(res);\n      this.singerMvInfo = res.data;\n    },\n    // 请求收藏的歌手列表\n    async getSubSingerList() {\n      let timestamp = Date.parse(new Date());\n      let res = await this.$request(\"/artist/sublist\", {\n        limit: 1000,\n        timestamp,\n      });\n      console.log(res.data.data);\n      this.$store.commit(\"updateSubSingerList\", res.data.data);\n    },\n\n    // 事件函数\n    // 行点击事件的回调\n    handleRowClick(event) {\n      // console.log(event);\n      if (document.querySelector(\".selectRow\")) {\n        document.querySelector(\".selectRow\").classList.remove(\"selectRow\");\n      }\n      event.classList.add(\"selectRow\");\n    },\n\n    // 行双击事件的回调\n    // 这里的 id是歌曲id   index 双击歌曲在歌单中的索引   listId是歌单id\n    handleRowDbClick({ id, index, listId }) {\n      // console.log(id);\n      // console.log(index);\n      // console.log(listId);\n      this.isDbc = true;\n\n      this.handleViewDOM(id, listId, index);\n\n      // 播放的逻辑操作\n      if (listId != this.$route.params.id) {\n        let musicListIndex = this.singerAlbum.findIndex(\n          (item) => item.album.id == listId\n        );\n        // console.log(musicListIndex);\n        this.$store.commit(\"updateMusicId\", id);\n        // 如果歌单发生变化,则提交歌单到vuex\n        if (listId != this.$store.state.musicListId) {\n          // 将歌单传到vuex\n          this.$store.commit(\"updateMusicList\", {\n            musicList: this.singerAlbum[musicListIndex].songs,\n            musicListId: listId,\n          });\n        }\n      } else {\n        this.$store.commit(\"updateMusicId\", id);\n        // 如果歌单发生变化,则提交歌单到vuex\n        // 如果是topsong 就拿歌手的id 当作listid 作为唯一辨识\n        if (this.$route.params.id != this.$store.state.musicListId) {\n          // 将歌单传到vuex\n          this.$store.commit(\"updateMusicList\", {\n            musicList: this.topSongs.topSongs,\n            musicListId: this.$route.params.id,\n          });\n        }\n      }\n      // console.log(123);\n    },\n\n    handleViewDOM(id, listId, index) {\n      // 先清空之前的样式\n      if (currentRowInfo.listId) {\n        this.cleanStyle(currentRowInfo.i, currentRowInfo.listId);\n      }\n      let tables = document.querySelectorAll(\"table\");\n      // 这里的 id是歌曲id   index 双击歌曲在歌单中的索引   listId是歌单id\n      let i = -1;\n      // 根据listId找歌单索引 listIndex\n      let listIndex = -1;\n      // top50的情况\n      if (listId == this.$route.params.id) {\n        listIndex = 0;\n      } // 专辑的情况\n      else {\n        listIndex = this.singerAlbum.findIndex(\n          (item) => item.album.id == listId\n        );\n        console.log(listIndex, \"listIndex\");\n        // 如果没有，说明目前还没有渲染或者还没有请求\n        if (listIndex == -1) {\n          console.log(\"can not find listIndex\");\n          return;\n        }\n        listIndex += 1;\n      }\n\n      // 找歌曲在歌单中的索引 i\n      if (index == undefined) {\n        // 分top50和专辑两种情况\n        if (listIndex == 0) {\n          i = this.topSongs.topSongs.findIndex((item) => item.id == id);\n        } else {\n          i = this.singerAlbum[listIndex - 1].songs.findIndex(\n            (item) => item.id == id\n          );\n        }\n      } else {\n        i = index;\n      }\n\n      console.log(i, \"i\");\n      console.log(index, \"index\");\n      // 渲染\n      if (tables[listIndex] && tables[listIndex].children[i]) {\n        let currentRow = tables[listIndex].children[i];\n        // console.log(currentRow);\n        currentRow.querySelector(\".index\").innerHTML =\n          \"<i class='iconfont icon-yinliang' style='color:#ff4e4e'></i>\";\n        currentRow.querySelector(\".musicName\").style.color = \"#ff4e4e\";\n\n        // 保存当前数据 供下次清空样式使用\n        currentRowInfo.i = i;\n        // 因为歌单的顺序可能会改变，所以不要直接保存索引\n        currentRowInfo.listId = listId;\n        currentRowInfo.singerId = this.$route.params.id;\n        // 将currentRowInfo上传至vuex 供下次重新进入页面使用\n        this.$store.commit(\"updateCurrentRowInfo\", currentRowInfo);\n      }\n    },\n\n    cleanStyle(i, listId) {\n      let tables = document.querySelectorAll(\"table\");\n      // 找到歌单的索引\n      let listIndex = -1;\n      if (listId == this.$route.params.id) {\n        listIndex = 0;\n      } // 专辑的情况\n      else {\n        listIndex = this.singerAlbum.findIndex(\n          (item) => item.album.id == listId\n        );\n        // 如果没有，说明目前还没有渲染或者还没有请求\n        if (listIndex == -1) {\n          console.log(\"can not find listIndex\");\n          return;\n        }\n        listIndex += 1;\n      }\n      // console.log(\"执行了清空\");\n      // console.log(\"listIndex:\", listIndex);\n      // console.log(\"i:\", i);\n      if (tables[listIndex] && tables[listIndex].children[i]) {\n        let lastRow = tables[listIndex].children[i];\n        lastRow.querySelector(\".index\").innerHTML = i + 1;\n        lastRow.querySelector(\".musicName\").style.color = \"#1f1f1f\";\n      }\n    },\n\n    // 点击榜单进入歌单详情界面\n    clickListCardItem({ listId }) {\n      console.log(listId);\n      this.$router.push({ name: \"album\", params: { id: listId } });\n      // this.$router.push({ name: \"musicListDetail\", params: { id } });\n      // console.log(123);\n    },\n    // 查看热门50首全部歌曲\n    allTopSongs() {\n      this.topSongs.isOpen = true;\n      this.isCheckAllShow = false;\n      // 查看全部后再次渲染样式\n      setTimeout(() => {\n        if (\n          this.$store.state.currentRowInfo.singerId == this.$route.params.id\n        ) {\n          this.handleViewDOM(\n            this.$store.state.musicId,\n            this.$store.state.musicListId\n          );\n        }\n      }, 500);\n    },\n    // 专辑上拉触底加载\n    load() {\n      // console.log(\"上拉触底\");\n      this.disabled = true;\n      this.albumPage += 1;\n      this.getAlbumInfo();\n    },\n\n    // mv上拉加载\n    bottomLoad() {\n      if (this.singerMvInfo.hasMore == true) {\n        this.videoPage += 1;\n        this.getSingerMv();\n      }\n    },\n    // 点击视频卡片进入视频详情\n    goToVideoDetail({ id }) {\n      if (!this.$store.state.isLogin) {\n        this.$message.error(\"登录后才能观看MV哦!\");\n        return;\n      }\n      // console.log(id);\n      this.$router.push({ name: \"videoDetail\", params: { id, type: \"mv\" } });\n    },\n    // 点击el-tab-pane的回调\n    clickTab(e) {\n      console.log(e.index);\n      if (e.index == 1 && this.singerMvInfo.mvs.length == 0) {\n        this.getSingerMv();\n      }\n    },\n    // 判断用户是否收藏了该歌手\n    getIsSub() {\n      this.isSub = this.$store.state.subSingerList.find(\n        (item) => item.id == this.$route.params.id\n      );\n    },\n    // 点击subSinger按钮的回调\n    async subSinger() {\n      if (!this.$store.state.isLogin) {\n        this.$message.error(\"请先登录!\");\n        return;\n      }\n      this.isSub = !this.isSub;\n      // 发送请求\n      await this.$request(\"/artist/sub\", {\n        id: this.$route.params.id,\n        t: this.isSub ? 1 : 0,\n      });\n      // 每次进行修改操作后，都需要更新vuex里面的收藏list\n      this.getSubSingerList();\n    },\n  },\n  created() {\n    this.getSingerInfo();\n  },\n  watch: {\n    singerAlbum() {\n      if (this.singerAlbum.length != 0 && this.isAlbumMore) {\n        this.disabled = false;\n      } else {\n        this.disabled = true;\n      }\n    },\n    // 音乐加载完成后重置isDbc\n    \"$store.state.isMusicLoad\"(isMusicLoad) {\n      if (!isMusicLoad) {\n        this.isDbc = false;\n      }\n    },\n\n    \"$store.state.musicId\"(current, last) {\n      // 判断是否是双击，如果是双击则不用调用handleView\n      if (!this.isDbc) {\n        // id,listId\n        this.handleViewDOM(\n          this.$store.state.musicId,\n          this.$store.state.musicListId\n        );\n      }\n    },\n\n    // 监听singerAlbum的变化\n    singerAlbum() {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        if (\n          this.$store.state.currentRowInfo.singerId == this.$route.params.id\n        ) {\n          this.handleViewDOM(\n            this.$store.state.musicId,\n            this.$store.state.musicListId\n          );\n        }\n      }, 500);\n    },\n  },\n  async mounted() {\n    await this.getSingerTopSongs();\n    await this.getAlbumInfo();\n    this.$nextTick(() => {\n      if (this.$store.state.currentRowInfo.singerId == this.$route.params.id) {\n        this.handleViewDOM(\n          this.$store.state.musicId,\n          this.$store.state.musicListId\n        );\n      }\n    });\n    if (this.$store.state.isLogin) {\n      if (this.$store.state.subSingerList == null) {\n        await this.getSubSingerList();\n      }\n      this.getIsSub();\n    }\n  },\n};\n</script>\n\n<style scoped>\n.singerDetail {\n  overflow-y: scroll;\n}\n\n.listInfo {\n  display: flex;\n  padding: 25px 10px;\n}\n\n.listAvatar {\n  width: 150px;\n  height: 150px;\n  overflow: hidden;\n  border-radius: 10px;\n  margin-right: 15px;\n}\n\n.listAvatar img {\n  width: 100%;\n}\n\n.right {\n  margin-top: 10px;\n  width: calc(100% - 200px);\n}\n\n.title {\n  display: flex;\n  align-items: center;\n}\n\n.titleTag {\n  font-size: 12px;\n  color: #ec4141;\n  border: 1px solid #ec4141;\n  padding: 1px 2px;\n  border-radius: 2px;\n  margin-right: 5px;\n  transform: scale(0.8);\n}\n\n.titleContent {\n  font-size: 20px;\n  font-weight: 600;\n  color: #373737;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 90%;\n}\n\n.buttons {\n  margin: 15px 0 0 -5px;\n  display: flex;\n}\n\n.buttonItem {\n  font-size: 12px;\n  padding: 8px 15px;\n  border: 1px solid #ddd;\n  border-radius: 20px;\n  transform: scale(0.9);\n}\n\n.buttonItem i {\n  font-size: 12px;\n  margin-right: 3px;\n  transform: scale(0.9);\n}\n\n.playAll {\n  background-color: #ec4141;\n  color: white;\n}\n\n.otherInfo {\n  margin: 15px 0 0 -30px;\n  display: flex;\n  font-size: 12px;\n  transform: scale(0.9);\n}\n\n.musicNum {\n  margin-right: 13px;\n}\n\n.musicList {\n  margin: 0 10px;\n}\n\n.title {\n  font-size: 16px;\n  font-weight: 600;\n  color: black;\n  margin-bottom: 10px;\n}\n\n.singerDesc {\n  font-size: 12px;\n  color: #373737;\n  line-height: 25px;\n  letter-spacing: 0.5px;\n  text-indent: 2em;\n}\n\n.red {\n  color: #ec4141;\n}\n</style>"],"sourceRoot":"src/views/singerDetail"}]}